{"version":3,"file":"index.umd.js","sources":["../src/generated/runtime.ts","../src/generated/models/AccountDataResponse.ts","../src/generated/models/AddressAssetsListResponse.ts","../src/generated/models/AddressBalanceResponse.ts","../src/generated/models/AddressNftListResponse.ts","../src/generated/models/AddressNftListResponseValue.ts","../src/generated/models/AddressNonces.ts","../src/generated/models/AddressStxInboundListResponse.ts","../src/generated/models/AddressTokenOfferingLocked.ts","../src/generated/models/AddressTransactionWithTransfers.ts","../src/generated/models/AddressTransactionWithTransfersFtTransfers.ts","../src/generated/models/AddressTransactionWithTransfersNftTransfers.ts","../src/generated/models/AddressTransactionWithTransfersStxTransfers.ts","../src/generated/models/AddressTransactionWithTransfersValue.ts","../src/generated/models/AddressTransactionsListResponse.ts","../src/generated/models/AddressTransactionsWithTransfersListResponse.ts","../src/generated/models/AddressUnlockSchedule.ts","../src/generated/models/Block.ts","../src/generated/models/BlockListResponse.ts","../src/generated/models/BnsError.ts","../src/generated/models/BnsGetAllNamespacesResponse.ts","../src/generated/models/BnsGetNameInfoResponse.ts","../src/generated/models/BnsGetNamePriceResponse.ts","../src/generated/models/BnsGetNamespacePriceResponse.ts","../src/generated/models/BnsNamesOwnByAddressResponse.ts","../src/generated/models/BurnchainReward.ts","../src/generated/models/BurnchainRewardListResponse.ts","../src/generated/models/BurnchainRewardSlotHolder.ts","../src/generated/models/BurnchainRewardSlotHolderListResponse.ts","../src/generated/models/BurnchainRewardsTotal.ts","../src/generated/models/ChainTip.ts","../src/generated/models/ContractInterfaceResponse.ts","../src/generated/models/ContractListResponse.ts","../src/generated/models/ContractSourceResponse.ts","../src/generated/models/CoreNodeInfoResponse.ts","../src/generated/models/CoreNodePoxResponse.ts","../src/generated/models/FeeRate.ts","../src/generated/models/FeeRateRequest.ts","../src/generated/models/FungibleTokenMetadata.ts","../src/generated/models/FungibleTokensMetadataList.ts","../src/generated/models/GetRawTransactionResult.ts","../src/generated/models/GetStxSupplyLegacyFormatResponse.ts","../src/generated/models/GetStxSupplyResponse.ts","../src/generated/models/InboundStxTransfer.ts","../src/generated/models/InlineObject.ts","../src/generated/models/InlineObject1.ts","../src/generated/models/MapEntryResponse.ts","../src/generated/models/MempoolTransactionListResponse.ts","../src/generated/models/MempoolTransactionStatsResponse.ts","../src/generated/models/MempoolTransactionStatsResponseTxAges.ts","../src/generated/models/MempoolTransactionStatsResponseTxByteSizes.ts","../src/generated/models/MempoolTransactionStatsResponseTxSimpleFeeAverages.ts","../src/generated/models/MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer.ts","../src/generated/models/MempoolTransactionStatsResponseTxTypeCounts.ts","../src/generated/models/Microblock.ts","../src/generated/models/MicroblockListResponse.ts","../src/generated/models/NetworkBlockTimeResponse.ts","../src/generated/models/NetworkBlockTimesResponse.ts","../src/generated/models/NetworkIdentifier.ts","../src/generated/models/NftEvent.ts","../src/generated/models/NonFungibleTokenHistoryEventList.ts","../src/generated/models/NonFungibleTokenHoldingsList.ts","../src/generated/models/NonFungibleTokenMetadata.ts","../src/generated/models/NonFungibleTokenMintList.ts","../src/generated/models/NonFungibleTokensMetadataList.ts","../src/generated/models/OtherTransactionIdentifier.ts","../src/generated/models/PostCoreNodeTransactionsError.ts","../src/generated/models/ReadOnlyFunctionArgs.ts","../src/generated/models/ReadOnlyFunctionSuccessResponse.ts","../src/generated/models/RosettaAccount.ts","../src/generated/models/RosettaAccountBalanceRequest.ts","../src/generated/models/RosettaAccountBalanceResponse.ts","../src/generated/models/RosettaAccountBalanceResponseCoinIdentifier.ts","../src/generated/models/RosettaAccountBalanceResponseMetadata.ts","../src/generated/models/RosettaAccountIdentifier.ts","../src/generated/models/RosettaAmount.ts","../src/generated/models/RosettaBlock.ts","../src/generated/models/RosettaBlockMetadata.ts","../src/generated/models/RosettaBlockMetadata1.ts","../src/generated/models/RosettaBlockRequest.ts","../src/generated/models/RosettaBlockResponse.ts","../src/generated/models/RosettaBlockTransactionRequest.ts","../src/generated/models/RosettaBlockTransactionResponse.ts","../src/generated/models/RosettaCoin.ts","../src/generated/models/RosettaCoinChange.ts","../src/generated/models/RosettaConstructionCombineRequest.ts","../src/generated/models/RosettaConstructionCombineResponse.ts","../src/generated/models/RosettaConstructionDeriveRequest.ts","../src/generated/models/RosettaConstructionDeriveResponse.ts","../src/generated/models/RosettaConstructionHashRequest.ts","../src/generated/models/RosettaConstructionHashResponse.ts","../src/generated/models/RosettaConstructionMetadataRequest.ts","../src/generated/models/RosettaConstructionMetadataResponse.ts","../src/generated/models/RosettaConstructionMetadataResponseMetadata.ts","../src/generated/models/RosettaConstructionParseRequest.ts","../src/generated/models/RosettaConstructionParseResponse.ts","../src/generated/models/RosettaConstructionPayloadResponse.ts","../src/generated/models/RosettaConstructionPayloadsRequest.ts","../src/generated/models/RosettaConstructionPreprocessRequest.ts","../src/generated/models/RosettaConstructionPreprocessResponse.ts","../src/generated/models/RosettaConstructionSubmitRequest.ts","../src/generated/models/RosettaConstructionSubmitResponse.ts","../src/generated/models/RosettaCurrency.ts","../src/generated/models/RosettaError.ts","../src/generated/models/RosettaErrorDetails.ts","../src/generated/models/RosettaErrorNoDetails.ts","../src/generated/models/RosettaGenesisBlockIdentifier.ts","../src/generated/models/RosettaMaxFeeAmount.ts","../src/generated/models/RosettaMempoolRequest.ts","../src/generated/models/RosettaMempoolResponse.ts","../src/generated/models/RosettaMempoolTransactionRequest.ts","../src/generated/models/RosettaMempoolTransactionResponse.ts","../src/generated/models/RosettaNetworkListResponse.ts","../src/generated/models/RosettaNetworkListResponseSubNetworkIdentifier.ts","../src/generated/models/RosettaNetworkListResponseSubNetworkIdentifierMetadata.ts","../src/generated/models/RosettaNetworkOptionsResponse.ts","../src/generated/models/RosettaNetworkOptionsResponseAllow.ts","../src/generated/models/RosettaNetworkOptionsResponseVersion.ts","../src/generated/models/RosettaNetworkStatusResponse.ts","../src/generated/models/RosettaOldestBlockIdentifier.ts","../src/generated/models/RosettaOperation.ts","../src/generated/models/RosettaOperationIdentifier.ts","../src/generated/models/RosettaOperationStatus.ts","../src/generated/models/RosettaOptions.ts","../src/generated/models/RosettaOptionsRequest.ts","../src/generated/models/RosettaParentBlockIdentifier.ts","../src/generated/models/RosettaPeers.ts","../src/generated/models/RosettaPublicKey.ts","../src/generated/models/RosettaRelatedOperation.ts","../src/generated/models/RosettaSignature.ts","../src/generated/models/RosettaStatusRequest.ts","../src/generated/models/RosettaSubAccount.ts","../src/generated/models/RosettaSyncStatus.ts","../src/generated/models/RosettaTransaction.ts","../src/generated/models/RunFaucetResponse.ts","../src/generated/models/ServerStatusResponse.ts","../src/generated/models/SigningPayload.ts","../src/generated/models/SmartContract.ts","../src/generated/models/StxBalance.ts","../src/generated/models/TargetBlockTime.ts","../src/generated/models/TransactionEventsResponse.ts","../src/generated/models/TransactionFeeEstimateRequest.ts","../src/generated/models/TransactionFeeEstimateResponse.ts","../src/generated/models/TransactionFeeEstimateResponseEstimatedCost.ts","../src/generated/models/TransactionFeeEstimateResponseEstimations.ts","../src/generated/models/TransactionIdentifier.ts","../src/generated/models/TransactionResults.ts","../src/generated/models/UnanchoredTransactionListResponse.ts","../src/generated/apis/AccountsApi.ts","../src/generated/apis/BlocksApi.ts","../src/generated/apis/FaucetsApi.ts","../src/generated/apis/FeesApi.ts","../src/generated/apis/FungibleTokensApi.ts","../src/generated/apis/InfoApi.ts","../src/generated/apis/MicroblocksApi.ts","../src/generated/apis/NamesApi.ts","../src/generated/apis/NonFungibleTokensApi.ts","../src/generated/apis/RosettaApi.ts","../src/generated/apis/SearchApi.ts","../src/generated/apis/SmartContractsApi.ts","../src/generated/apis/StackingRewardsApi.ts","../src/generated/apis/TransactionsApi.ts","../node_modules/jsonrpc-lite/dist/esnext/jsonrpc.js","../node_modules/eventemitter3/index.js","../src/ws/index.ts","../node_modules/parseuri/index.js","../node_modules/socket.io-client/build/esm/url.js","../node_modules/has-cors/index.js","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/@socket.io/component-emitter/index.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/base64-arraybuffer/dist/base64-arraybuffer.es5.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/yeast/index.js","../node_modules/parseqs/index.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/backo2/index.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../src/socket-io/index.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport const BASE_PATH = \"https://stacks-node-api.mainnet.stacks.co\".replace(/\\/+$/, \"\");\n\nconst isBlob = (value: any) => typeof Blob !== 'undefined' && value instanceof Blob;\n\n/**\n * This is the base class for all generated API classes.\n */\nexport class BaseAPI {\n\n    private middleware: Middleware[];\n\n    constructor(protected configuration = new Configuration()) {\n        this.middleware = configuration.middleware;\n    }\n\n    withMiddleware<T extends BaseAPI>(this: T, ...middlewares: Middleware[]) {\n        const next = this.clone<T>();\n        next.middleware = next.middleware.concat(...middlewares);\n        return next;\n    }\n\n    withPreMiddleware<T extends BaseAPI>(this: T, ...preMiddlewares: Array<Middleware['pre']>) {\n        const middlewares = preMiddlewares.map((pre) => ({ pre }));\n        return this.withMiddleware<T>(...middlewares);\n    }\n\n    withPostMiddleware<T extends BaseAPI>(this: T, ...postMiddlewares: Array<Middleware['post']>) {\n        const middlewares = postMiddlewares.map((post) => ({ post }));\n        return this.withMiddleware<T>(...middlewares);\n    }\n\n    protected async request(context: RequestOpts, initOverrides?: RequestInit): Promise<Response> {\n        const { url, init } = this.createFetchParams(context, initOverrides);\n        const response = await this.fetchApi(url, init);\n        if (response.status >= 200 && response.status < 300) {\n            return response;\n        }\n        throw response;\n    }\n\n    private createFetchParams(context: RequestOpts, initOverrides?: RequestInit) {\n        let url = this.configuration.basePath + context.path;\n        if (context.query !== undefined && Object.keys(context.query).length !== 0) {\n            // only add the querystring to the URL if there are query parameters.\n            // this is done to avoid urls ending with a \"?\" character which buggy webservers\n            // do not handle correctly sometimes.\n            url += '?' + this.configuration.queryParamsStringify(context.query);\n        }\n        const body = ((typeof FormData !== \"undefined\" && context.body instanceof FormData) || context.body instanceof URLSearchParams || isBlob(context.body))\n        ? context.body\n        : JSON.stringify(context.body);\n\n        const headers = Object.assign({}, this.configuration.headers, context.headers);\n        const init = {\n            method: context.method,\n            headers: headers,\n            body,\n            credentials: this.configuration.credentials,\n            ...initOverrides\n        };\n        return { url, init };\n    }\n\n    private fetchApi = async (url: string, init: RequestInit) => {\n        let fetchParams = { url, init };\n        for (const middleware of this.middleware) {\n            if (middleware.pre) {\n                fetchParams = await middleware.pre({\n                    fetch: this.fetchApi,\n                    ...fetchParams,\n                }) || fetchParams;\n            }\n        }\n        let response = await (this.configuration.fetchApi || fetch)(fetchParams.url, fetchParams.init);\n        for (const middleware of this.middleware) {\n            if (middleware.post) {\n                response = await middleware.post({\n                    fetch: this.fetchApi,\n                    url: fetchParams.url,\n                    init: fetchParams.init,\n                    response: response.clone(),\n                }) || response;\n            }\n        }\n        return response;\n    }\n\n    /**\n     * Create a shallow clone of `this` by constructing a new instance\n     * and then shallow cloning data members.\n     */\n    private clone<T extends BaseAPI>(this: T): T {\n        const constructor = this.constructor as any;\n        const next = new constructor(this.configuration);\n        next.middleware = this.middleware.slice();\n        return next;\n    }\n};\n\nexport class RequiredError extends Error {\n    name: \"RequiredError\" = \"RequiredError\";\n    constructor(public field: string, msg?: string) {\n        super(msg);\n    }\n}\n\nexport const COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n\nexport type FetchAPI = WindowOrWorkerGlobalScope['fetch'];\n\nexport interface ConfigurationParameters {\n    basePath?: string; // override base path\n    fetchApi?: FetchAPI; // override for fetch implementation\n    middleware?: Middleware[]; // middleware to apply before/after fetch requests\n    queryParamsStringify?: (params: HTTPQuery) => string; // stringify function for query strings\n    username?: string; // parameter for basic security\n    password?: string; // parameter for basic security\n    apiKey?: string | ((name: string) => string); // parameter for apiKey security\n    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string | Promise<string>); // parameter for oauth2 security\n    headers?: HTTPHeaders; //header params we want to use on every request\n    credentials?: RequestCredentials; //value for the credentials param we want to use on each request\n}\n\nexport class Configuration {\n    constructor(private configuration: ConfigurationParameters = {}) {}\n\n    get basePath(): string {\n        return this.configuration.basePath != null ? this.configuration.basePath : BASE_PATH;\n    }\n\n    get fetchApi(): FetchAPI | undefined {\n        return this.configuration.fetchApi;\n    }\n\n    get middleware(): Middleware[] {\n        return this.configuration.middleware || [];\n    }\n\n    get queryParamsStringify(): (params: HTTPQuery) => string {\n        return this.configuration.queryParamsStringify || querystring;\n    }\n\n    get username(): string | undefined {\n        return this.configuration.username;\n    }\n\n    get password(): string | undefined {\n        return this.configuration.password;\n    }\n\n    get apiKey(): ((name: string) => string) | undefined {\n        const apiKey = this.configuration.apiKey;\n        if (apiKey) {\n            return typeof apiKey === 'function' ? apiKey : () => apiKey;\n        }\n        return undefined;\n    }\n\n    get accessToken(): ((name?: string, scopes?: string[]) => string | Promise<string>) | undefined {\n        const accessToken = this.configuration.accessToken;\n        if (accessToken) {\n            return typeof accessToken === 'function' ? accessToken : async () => accessToken;\n        }\n        return undefined;\n    }\n\n    get headers(): HTTPHeaders | undefined {\n        return this.configuration.headers;\n    }\n\n    get credentials(): RequestCredentials | undefined {\n        return this.configuration.credentials;\n    }\n}\n\nexport type Json = any;\nexport type HTTPMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE' | 'OPTIONS' | 'HEAD';\nexport type HTTPHeaders = { [key: string]: string };\nexport type HTTPQuery = { [key: string]: string | number | null | boolean | Array<string | number | null | boolean> | HTTPQuery };\nexport type HTTPBody = Json | FormData | URLSearchParams;\nexport type ModelPropertyNaming = 'camelCase' | 'snake_case' | 'PascalCase' | 'original';\n\nexport interface FetchParams {\n    url: string;\n    init: RequestInit;\n}\n\nexport interface RequestOpts {\n    path: string;\n    method: HTTPMethod;\n    headers: HTTPHeaders;\n    query?: HTTPQuery;\n    body?: HTTPBody;\n}\n\nexport function exists(json: any, key: string) {\n    const value = json[key];\n    return value !== null && value !== undefined;\n}\n\nexport function querystring(params: HTTPQuery, prefix: string = ''): string {\n    return Object.keys(params)\n        .map((key) => {\n            const fullKey = prefix + (prefix.length ? `[${key}]` : key);\n            const value = params[key];\n            if (value instanceof Array) {\n                const multiValue = value.map(singleValue => encodeURIComponent(String(singleValue)))\n                    .join(`&${encodeURIComponent(fullKey)}=`);\n                return `${encodeURIComponent(fullKey)}=${multiValue}`;\n            }\n            if (value instanceof Date) {\n                return `${encodeURIComponent(fullKey)}=${encodeURIComponent(value.toISOString())}`;\n            }\n            if (value instanceof Object) {\n                return querystring(value as HTTPQuery, fullKey);\n            }\n            return `${encodeURIComponent(fullKey)}=${encodeURIComponent(String(value))}`;\n        })\n        .filter(part => part.length > 0)\n        .join('&');\n}\n\nexport function mapValues(data: any, fn: (item: any) => any) {\n  return Object.keys(data).reduce(\n    (acc, key) => ({ ...acc, [key]: fn(data[key]) }),\n    {}\n  );\n}\n\nexport function canConsumeForm(consumes: Consume[]): boolean {\n    for (const consume of consumes) {\n        if ('multipart/form-data' === consume.contentType) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport interface Consume {\n    contentType: string\n}\n\nexport interface RequestContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n}\n\nexport interface ResponseContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n    response: Response;\n}\n\nexport interface Middleware {\n    pre?(context: RequestContext): Promise<FetchParams | void>;\n    post?(context: ResponseContext): Promise<Response | void>;\n}\n\nexport interface ApiResponse<T> {\n    raw: Response;\n    value(): Promise<T>;\n}\n\nexport interface ResponseTransformer<T> {\n    (json: any): T;\n}\n\nexport class JSONApiResponse<T> {\n    constructor(public raw: Response, private transformer: ResponseTransformer<T> = (jsonValue: any) => jsonValue) {}\n\n    async value(): Promise<T> {\n        return this.transformer(await this.raw.json());\n    }\n}\n\nexport class VoidApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<void> {\n        return undefined;\n    }\n}\n\nexport class BlobApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<Blob> {\n        return await this.raw.blob();\n    };\n}\n\nexport class TextApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<string> {\n        return await this.raw.text();\n    };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * GET request for account data\n * @export\n * @interface AccountDataResponse\n */\nexport interface AccountDataResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof AccountDataResponse\n     */\n    balance: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AccountDataResponse\n     */\n    locked: string;\n    /**\n     * \n     * @type {number}\n     * @memberof AccountDataResponse\n     */\n    unlock_height: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AccountDataResponse\n     */\n    nonce: number;\n    /**\n     * \n     * @type {string}\n     * @memberof AccountDataResponse\n     */\n    balance_proof: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AccountDataResponse\n     */\n    nonce_proof: string;\n}\n\nexport function AccountDataResponseFromJSON(json: any): AccountDataResponse {\n    return AccountDataResponseFromJSONTyped(json, false);\n}\n\nexport function AccountDataResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountDataResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'balance': json['balance'],\n        'locked': json['locked'],\n        'unlock_height': json['unlock_height'],\n        'nonce': json['nonce'],\n        'balance_proof': json['balance_proof'],\n        'nonce_proof': json['nonce_proof'],\n    };\n}\n\nexport function AccountDataResponseToJSON(value?: AccountDataResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'balance': value.balance,\n        'locked': value.locked,\n        'unlock_height': value.unlock_height,\n        'nonce': value.nonce,\n        'balance_proof': value.balance_proof,\n        'nonce_proof': value.nonce_proof,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * GET request that returns address assets\n * @export\n * @interface AddressAssetsListResponse\n */\nexport interface AddressAssetsListResponse {\n    /**\n     * \n     * @type {number}\n     * @memberof AddressAssetsListResponse\n     */\n    limit: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AddressAssetsListResponse\n     */\n    offset: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AddressAssetsListResponse\n     */\n    total: number;\n    /**\n     * \n     * @type {Array<object>}\n     * @memberof AddressAssetsListResponse\n     */\n    results: Array<object>;\n}\n\nexport function AddressAssetsListResponseFromJSON(json: any): AddressAssetsListResponse {\n    return AddressAssetsListResponseFromJSONTyped(json, false);\n}\n\nexport function AddressAssetsListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressAssetsListResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'limit': json['limit'],\n        'offset': json['offset'],\n        'total': json['total'],\n        'results': json['results'],\n    };\n}\n\nexport function AddressAssetsListResponseToJSON(value?: AddressAssetsListResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'limit': value.limit,\n        'offset': value.offset,\n        'total': value.total,\n        'results': value.results,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    AddressTokenOfferingLocked,\n    AddressTokenOfferingLockedFromJSON,\n    AddressTokenOfferingLockedFromJSONTyped,\n    AddressTokenOfferingLockedToJSON,\n    StxBalance,\n    StxBalanceFromJSON,\n    StxBalanceFromJSONTyped,\n    StxBalanceToJSON,\n} from './';\n\n/**\n * GET request that returns address balances\n * @export\n * @interface AddressBalanceResponse\n */\nexport interface AddressBalanceResponse {\n    /**\n     * \n     * @type {StxBalance}\n     * @memberof AddressBalanceResponse\n     */\n    stx: StxBalance;\n    /**\n     * \n     * @type {{ [key: string]: object; }}\n     * @memberof AddressBalanceResponse\n     */\n    fungible_tokens: { [key: string]: object; };\n    /**\n     * \n     * @type {{ [key: string]: object; }}\n     * @memberof AddressBalanceResponse\n     */\n    non_fungible_tokens: { [key: string]: object; };\n    /**\n     * \n     * @type {AddressTokenOfferingLocked}\n     * @memberof AddressBalanceResponse\n     */\n    token_offering_locked?: AddressTokenOfferingLocked;\n}\n\nexport function AddressBalanceResponseFromJSON(json: any): AddressBalanceResponse {\n    return AddressBalanceResponseFromJSONTyped(json, false);\n}\n\nexport function AddressBalanceResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressBalanceResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'stx': StxBalanceFromJSON(json['stx']),\n        'fungible_tokens': json['fungible_tokens'],\n        'non_fungible_tokens': json['non_fungible_tokens'],\n        'token_offering_locked': !exists(json, 'token_offering_locked') ? undefined : AddressTokenOfferingLockedFromJSON(json['token_offering_locked']),\n    };\n}\n\nexport function AddressBalanceResponseToJSON(value?: AddressBalanceResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'stx': StxBalanceToJSON(value.stx),\n        'fungible_tokens': value.fungible_tokens,\n        'non_fungible_tokens': value.non_fungible_tokens,\n        'token_offering_locked': AddressTokenOfferingLockedToJSON(value.token_offering_locked),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    NftEvent,\n    NftEventFromJSON,\n    NftEventFromJSONTyped,\n    NftEventToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface AddressNftListResponse\n */\nexport interface AddressNftListResponse {\n    /**\n     * \n     * @type {number}\n     * @memberof AddressNftListResponse\n     */\n    limit: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AddressNftListResponse\n     */\n    offset: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AddressNftListResponse\n     */\n    total: number;\n    /**\n     * \n     * @type {Array<NftEvent>}\n     * @memberof AddressNftListResponse\n     */\n    nft_events: Array<NftEvent>;\n}\n\nexport function AddressNftListResponseFromJSON(json: any): AddressNftListResponse {\n    return AddressNftListResponseFromJSONTyped(json, false);\n}\n\nexport function AddressNftListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressNftListResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'limit': json['limit'],\n        'offset': json['offset'],\n        'total': json['total'],\n        'nft_events': ((json['nft_events'] as Array<any>).map(NftEventFromJSON)),\n    };\n}\n\nexport function AddressNftListResponseToJSON(value?: AddressNftListResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'limit': value.limit,\n        'offset': value.offset,\n        'total': value.total,\n        'nft_events': ((value.nft_events as Array<any>).map(NftEventToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Identifier of the NFT\n * @export\n * @interface AddressNftListResponseValue\n */\nexport interface AddressNftListResponseValue {\n    /**\n     * Hex string representing the identifier of the NFT\n     * @type {string}\n     * @memberof AddressNftListResponseValue\n     */\n    hex: string;\n    /**\n     * Readable string of the NFT identifier\n     * @type {string}\n     * @memberof AddressNftListResponseValue\n     */\n    repr: string;\n}\n\nexport function AddressNftListResponseValueFromJSON(json: any): AddressNftListResponseValue {\n    return AddressNftListResponseValueFromJSONTyped(json, false);\n}\n\nexport function AddressNftListResponseValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressNftListResponseValue {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'hex': json['hex'],\n        'repr': json['repr'],\n    };\n}\n\nexport function AddressNftListResponseValueToJSON(value?: AddressNftListResponseValue | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'hex': value.hex,\n        'repr': value.repr,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * The latest nonce values used by an account by inspecting the mempool, microblock transactions, and anchored transactions\n * @export\n * @interface AddressNonces\n */\nexport interface AddressNonces {\n    /**\n     * The latest nonce found within mempool transactions sent by this address. Will be null if there are no current mempool transactions for this address.\n     * @type {number}\n     * @memberof AddressNonces\n     */\n    last_mempool_tx_nonce: number | null;\n    /**\n     * The latest nonce found within transactions sent by this address, including unanchored microblock transactions. Will be null if there are no current transactions for this address.\n     * @type {number}\n     * @memberof AddressNonces\n     */\n    last_executed_tx_nonce: number | null;\n    /**\n     * The likely nonce required for creating the next transaction, based on the last nonces seen by the API. This can be incorrect if the API's mempool or transactions aren't fully synchronized, even by a small amount, or if a previous transaction is still propagating through the Stacks blockchain network when this endpoint is called.\n     * @type {number}\n     * @memberof AddressNonces\n     */\n    possible_next_nonce: number;\n    /**\n     * Nonces that appear to be missing and likely causing a mempool transaction to be stuck.\n     * @type {Array<number>}\n     * @memberof AddressNonces\n     */\n    detected_missing_nonces: Array<number>;\n}\n\nexport function AddressNoncesFromJSON(json: any): AddressNonces {\n    return AddressNoncesFromJSONTyped(json, false);\n}\n\nexport function AddressNoncesFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressNonces {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'last_mempool_tx_nonce': json['last_mempool_tx_nonce'],\n        'last_executed_tx_nonce': json['last_executed_tx_nonce'],\n        'possible_next_nonce': json['possible_next_nonce'],\n        'detected_missing_nonces': json['detected_missing_nonces'],\n    };\n}\n\nexport function AddressNoncesToJSON(value?: AddressNonces | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'last_mempool_tx_nonce': value.last_mempool_tx_nonce,\n        'last_executed_tx_nonce': value.last_executed_tx_nonce,\n        'possible_next_nonce': value.possible_next_nonce,\n        'detected_missing_nonces': value.detected_missing_nonces,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    InboundStxTransfer,\n    InboundStxTransferFromJSON,\n    InboundStxTransferFromJSONTyped,\n    InboundStxTransferToJSON,\n} from './';\n\n/**\n * GET request that returns a list of inbound STX transfers with a memo\n * @export\n * @interface AddressStxInboundListResponse\n */\nexport interface AddressStxInboundListResponse {\n    /**\n     * \n     * @type {number}\n     * @memberof AddressStxInboundListResponse\n     */\n    limit: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AddressStxInboundListResponse\n     */\n    offset: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AddressStxInboundListResponse\n     */\n    total: number;\n    /**\n     * \n     * @type {Array<InboundStxTransfer>}\n     * @memberof AddressStxInboundListResponse\n     */\n    results: Array<InboundStxTransfer>;\n}\n\nexport function AddressStxInboundListResponseFromJSON(json: any): AddressStxInboundListResponse {\n    return AddressStxInboundListResponseFromJSONTyped(json, false);\n}\n\nexport function AddressStxInboundListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressStxInboundListResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'limit': json['limit'],\n        'offset': json['offset'],\n        'total': json['total'],\n        'results': ((json['results'] as Array<any>).map(InboundStxTransferFromJSON)),\n    };\n}\n\nexport function AddressStxInboundListResponseToJSON(value?: AddressStxInboundListResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'limit': value.limit,\n        'offset': value.offset,\n        'total': value.total,\n        'results': ((value.results as Array<any>).map(InboundStxTransferToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    AddressUnlockSchedule,\n    AddressUnlockScheduleFromJSON,\n    AddressUnlockScheduleFromJSONTyped,\n    AddressUnlockScheduleToJSON,\n} from './';\n\n/**\n * Token Offering Locked\n * @export\n * @interface AddressTokenOfferingLocked\n */\nexport interface AddressTokenOfferingLocked {\n    /**\n     * Micro-STX amount still locked at current block height.\n     * @type {string}\n     * @memberof AddressTokenOfferingLocked\n     */\n    total_locked: string;\n    /**\n     * Micro-STX amount unlocked at current block height.\n     * @type {string}\n     * @memberof AddressTokenOfferingLocked\n     */\n    total_unlocked: string;\n    /**\n     * \n     * @type {Array<AddressUnlockSchedule>}\n     * @memberof AddressTokenOfferingLocked\n     */\n    unlock_schedule: Array<AddressUnlockSchedule>;\n}\n\nexport function AddressTokenOfferingLockedFromJSON(json: any): AddressTokenOfferingLocked {\n    return AddressTokenOfferingLockedFromJSONTyped(json, false);\n}\n\nexport function AddressTokenOfferingLockedFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressTokenOfferingLocked {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'total_locked': json['total_locked'],\n        'total_unlocked': json['total_unlocked'],\n        'unlock_schedule': ((json['unlock_schedule'] as Array<any>).map(AddressUnlockScheduleFromJSON)),\n    };\n}\n\nexport function AddressTokenOfferingLockedToJSON(value?: AddressTokenOfferingLocked | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'total_locked': value.total_locked,\n        'total_unlocked': value.total_unlocked,\n        'unlock_schedule': ((value.unlock_schedule as Array<any>).map(AddressUnlockScheduleToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    AddressTransactionWithTransfersFtTransfers,\n    AddressTransactionWithTransfersFtTransfersFromJSON,\n    AddressTransactionWithTransfersFtTransfersFromJSONTyped,\n    AddressTransactionWithTransfersFtTransfersToJSON,\n    AddressTransactionWithTransfersNftTransfers,\n    AddressTransactionWithTransfersNftTransfersFromJSON,\n    AddressTransactionWithTransfersNftTransfersFromJSONTyped,\n    AddressTransactionWithTransfersNftTransfersToJSON,\n    AddressTransactionWithTransfersStxTransfers,\n    AddressTransactionWithTransfersStxTransfersFromJSON,\n    AddressTransactionWithTransfersStxTransfersFromJSONTyped,\n    AddressTransactionWithTransfersStxTransfersToJSON,\n} from './';\n\n/**\n * Transaction with STX transfers for a given address\n * @export\n * @interface AddressTransactionWithTransfers\n */\nexport interface AddressTransactionWithTransfers {\n    /**\n     * Describes all transaction types on Stacks 2.0 blockchain\n     * @type {object}\n     * @memberof AddressTransactionWithTransfers\n     */\n    tx: object;\n    /**\n     * Total sent from the given address, including the tx fee, in micro-STX as an integer string.\n     * @type {string}\n     * @memberof AddressTransactionWithTransfers\n     */\n    stx_sent: string;\n    /**\n     * Total received by the given address in micro-STX as an integer string.\n     * @type {string}\n     * @memberof AddressTransactionWithTransfers\n     */\n    stx_received: string;\n    /**\n     * \n     * @type {Array<AddressTransactionWithTransfersStxTransfers>}\n     * @memberof AddressTransactionWithTransfers\n     */\n    stx_transfers: Array<AddressTransactionWithTransfersStxTransfers>;\n    /**\n     * \n     * @type {Array<AddressTransactionWithTransfersFtTransfers>}\n     * @memberof AddressTransactionWithTransfers\n     */\n    ft_transfers?: Array<AddressTransactionWithTransfersFtTransfers>;\n    /**\n     * \n     * @type {Array<AddressTransactionWithTransfersNftTransfers>}\n     * @memberof AddressTransactionWithTransfers\n     */\n    nft_transfers?: Array<AddressTransactionWithTransfersNftTransfers>;\n}\n\nexport function AddressTransactionWithTransfersFromJSON(json: any): AddressTransactionWithTransfers {\n    return AddressTransactionWithTransfersFromJSONTyped(json, false);\n}\n\nexport function AddressTransactionWithTransfersFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressTransactionWithTransfers {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'tx': json['tx'],\n        'stx_sent': json['stx_sent'],\n        'stx_received': json['stx_received'],\n        'stx_transfers': ((json['stx_transfers'] as Array<any>).map(AddressTransactionWithTransfersStxTransfersFromJSON)),\n        'ft_transfers': !exists(json, 'ft_transfers') ? undefined : ((json['ft_transfers'] as Array<any>).map(AddressTransactionWithTransfersFtTransfersFromJSON)),\n        'nft_transfers': !exists(json, 'nft_transfers') ? undefined : ((json['nft_transfers'] as Array<any>).map(AddressTransactionWithTransfersNftTransfersFromJSON)),\n    };\n}\n\nexport function AddressTransactionWithTransfersToJSON(value?: AddressTransactionWithTransfers | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'tx': value.tx,\n        'stx_sent': value.stx_sent,\n        'stx_received': value.stx_received,\n        'stx_transfers': ((value.stx_transfers as Array<any>).map(AddressTransactionWithTransfersStxTransfersToJSON)),\n        'ft_transfers': value.ft_transfers === undefined ? undefined : ((value.ft_transfers as Array<any>).map(AddressTransactionWithTransfersFtTransfersToJSON)),\n        'nft_transfers': value.nft_transfers === undefined ? undefined : ((value.nft_transfers as Array<any>).map(AddressTransactionWithTransfersNftTransfersToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AddressTransactionWithTransfersFtTransfers\n */\nexport interface AddressTransactionWithTransfersFtTransfers {\n    /**\n     * Fungible Token asset identifier.\n     * @type {string}\n     * @memberof AddressTransactionWithTransfersFtTransfers\n     */\n    asset_identifier: string;\n    /**\n     * Amount transferred as an integer string. This balance does not factor in possible SIP-010 decimals.\n     * @type {string}\n     * @memberof AddressTransactionWithTransfersFtTransfers\n     */\n    amount: string;\n    /**\n     * Principal that sent the asset.\n     * @type {string}\n     * @memberof AddressTransactionWithTransfersFtTransfers\n     */\n    sender?: string;\n    /**\n     * Principal that received the asset.\n     * @type {string}\n     * @memberof AddressTransactionWithTransfersFtTransfers\n     */\n    recipient?: string;\n}\n\nexport function AddressTransactionWithTransfersFtTransfersFromJSON(json: any): AddressTransactionWithTransfersFtTransfers {\n    return AddressTransactionWithTransfersFtTransfersFromJSONTyped(json, false);\n}\n\nexport function AddressTransactionWithTransfersFtTransfersFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressTransactionWithTransfersFtTransfers {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'asset_identifier': json['asset_identifier'],\n        'amount': json['amount'],\n        'sender': !exists(json, 'sender') ? undefined : json['sender'],\n        'recipient': !exists(json, 'recipient') ? undefined : json['recipient'],\n    };\n}\n\nexport function AddressTransactionWithTransfersFtTransfersToJSON(value?: AddressTransactionWithTransfersFtTransfers | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'asset_identifier': value.asset_identifier,\n        'amount': value.amount,\n        'sender': value.sender,\n        'recipient': value.recipient,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    AddressTransactionWithTransfersValue,\n    AddressTransactionWithTransfersValueFromJSON,\n    AddressTransactionWithTransfersValueFromJSONTyped,\n    AddressTransactionWithTransfersValueToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface AddressTransactionWithTransfersNftTransfers\n */\nexport interface AddressTransactionWithTransfersNftTransfers {\n    /**\n     * Non Fungible Token asset identifier.\n     * @type {string}\n     * @memberof AddressTransactionWithTransfersNftTransfers\n     */\n    asset_identifier: string;\n    /**\n     * \n     * @type {AddressTransactionWithTransfersValue}\n     * @memberof AddressTransactionWithTransfersNftTransfers\n     */\n    value: AddressTransactionWithTransfersValue;\n    /**\n     * Principal that sent the asset.\n     * @type {string}\n     * @memberof AddressTransactionWithTransfersNftTransfers\n     */\n    sender?: string;\n    /**\n     * Principal that received the asset.\n     * @type {string}\n     * @memberof AddressTransactionWithTransfersNftTransfers\n     */\n    recipient?: string;\n}\n\nexport function AddressTransactionWithTransfersNftTransfersFromJSON(json: any): AddressTransactionWithTransfersNftTransfers {\n    return AddressTransactionWithTransfersNftTransfersFromJSONTyped(json, false);\n}\n\nexport function AddressTransactionWithTransfersNftTransfersFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressTransactionWithTransfersNftTransfers {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'asset_identifier': json['asset_identifier'],\n        'value': AddressTransactionWithTransfersValueFromJSON(json['value']),\n        'sender': !exists(json, 'sender') ? undefined : json['sender'],\n        'recipient': !exists(json, 'recipient') ? undefined : json['recipient'],\n    };\n}\n\nexport function AddressTransactionWithTransfersNftTransfersToJSON(value?: AddressTransactionWithTransfersNftTransfers | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'asset_identifier': value.asset_identifier,\n        'value': AddressTransactionWithTransfersValueToJSON(value.value),\n        'sender': value.sender,\n        'recipient': value.recipient,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AddressTransactionWithTransfersStxTransfers\n */\nexport interface AddressTransactionWithTransfersStxTransfers {\n    /**\n     * Amount transferred in micro-STX as an integer string.\n     * @type {string}\n     * @memberof AddressTransactionWithTransfersStxTransfers\n     */\n    amount: string;\n    /**\n     * Principal that sent STX. This is unspecified if the STX were minted.\n     * @type {string}\n     * @memberof AddressTransactionWithTransfersStxTransfers\n     */\n    sender?: string;\n    /**\n     * Principal that received STX. This is unspecified if the STX were burned.\n     * @type {string}\n     * @memberof AddressTransactionWithTransfersStxTransfers\n     */\n    recipient?: string;\n}\n\nexport function AddressTransactionWithTransfersStxTransfersFromJSON(json: any): AddressTransactionWithTransfersStxTransfers {\n    return AddressTransactionWithTransfersStxTransfersFromJSONTyped(json, false);\n}\n\nexport function AddressTransactionWithTransfersStxTransfersFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressTransactionWithTransfersStxTransfers {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'amount': json['amount'],\n        'sender': !exists(json, 'sender') ? undefined : json['sender'],\n        'recipient': !exists(json, 'recipient') ? undefined : json['recipient'],\n    };\n}\n\nexport function AddressTransactionWithTransfersStxTransfersToJSON(value?: AddressTransactionWithTransfersStxTransfers | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'amount': value.amount,\n        'sender': value.sender,\n        'recipient': value.recipient,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Non Fungible Token asset value.\n * @export\n * @interface AddressTransactionWithTransfersValue\n */\nexport interface AddressTransactionWithTransfersValue {\n    /**\n     * \n     * @type {string}\n     * @memberof AddressTransactionWithTransfersValue\n     */\n    hex: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AddressTransactionWithTransfersValue\n     */\n    repr: string;\n}\n\nexport function AddressTransactionWithTransfersValueFromJSON(json: any): AddressTransactionWithTransfersValue {\n    return AddressTransactionWithTransfersValueFromJSONTyped(json, false);\n}\n\nexport function AddressTransactionWithTransfersValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressTransactionWithTransfersValue {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'hex': json['hex'],\n        'repr': json['repr'],\n    };\n}\n\nexport function AddressTransactionWithTransfersValueToJSON(value?: AddressTransactionWithTransfersValue | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'hex': value.hex,\n        'repr': value.repr,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * GET request that returns account transactions\n * @export\n * @interface AddressTransactionsListResponse\n */\nexport interface AddressTransactionsListResponse {\n    /**\n     * \n     * @type {number}\n     * @memberof AddressTransactionsListResponse\n     */\n    limit: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AddressTransactionsListResponse\n     */\n    offset: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AddressTransactionsListResponse\n     */\n    total: number;\n    /**\n     * \n     * @type {Array<object>}\n     * @memberof AddressTransactionsListResponse\n     */\n    results: Array<object>;\n}\n\nexport function AddressTransactionsListResponseFromJSON(json: any): AddressTransactionsListResponse {\n    return AddressTransactionsListResponseFromJSONTyped(json, false);\n}\n\nexport function AddressTransactionsListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressTransactionsListResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'limit': json['limit'],\n        'offset': json['offset'],\n        'total': json['total'],\n        'results': json['results'],\n    };\n}\n\nexport function AddressTransactionsListResponseToJSON(value?: AddressTransactionsListResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'limit': value.limit,\n        'offset': value.offset,\n        'total': value.total,\n        'results': value.results,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    AddressTransactionWithTransfers,\n    AddressTransactionWithTransfersFromJSON,\n    AddressTransactionWithTransfersFromJSONTyped,\n    AddressTransactionWithTransfersToJSON,\n} from './';\n\n/**\n * GET request that returns account transactions\n * @export\n * @interface AddressTransactionsWithTransfersListResponse\n */\nexport interface AddressTransactionsWithTransfersListResponse {\n    /**\n     * \n     * @type {number}\n     * @memberof AddressTransactionsWithTransfersListResponse\n     */\n    limit: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AddressTransactionsWithTransfersListResponse\n     */\n    offset: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AddressTransactionsWithTransfersListResponse\n     */\n    total: number;\n    /**\n     * \n     * @type {Array<AddressTransactionWithTransfers>}\n     * @memberof AddressTransactionsWithTransfersListResponse\n     */\n    results: Array<AddressTransactionWithTransfers>;\n}\n\nexport function AddressTransactionsWithTransfersListResponseFromJSON(json: any): AddressTransactionsWithTransfersListResponse {\n    return AddressTransactionsWithTransfersListResponseFromJSONTyped(json, false);\n}\n\nexport function AddressTransactionsWithTransfersListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressTransactionsWithTransfersListResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'limit': json['limit'],\n        'offset': json['offset'],\n        'total': json['total'],\n        'results': ((json['results'] as Array<any>).map(AddressTransactionWithTransfersFromJSON)),\n    };\n}\n\nexport function AddressTransactionsWithTransfersListResponseToJSON(value?: AddressTransactionsWithTransfersListResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'limit': value.limit,\n        'offset': value.offset,\n        'total': value.total,\n        'results': ((value.results as Array<any>).map(AddressTransactionWithTransfersToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Unlock schedule amount and block height\n * @export\n * @interface AddressUnlockSchedule\n */\nexport interface AddressUnlockSchedule {\n    /**\n     * Micro-STX amount locked at this block height.\n     * @type {string}\n     * @memberof AddressUnlockSchedule\n     */\n    amount: string;\n    /**\n     * \n     * @type {number}\n     * @memberof AddressUnlockSchedule\n     */\n    block_height: number;\n}\n\nexport function AddressUnlockScheduleFromJSON(json: any): AddressUnlockSchedule {\n    return AddressUnlockScheduleFromJSONTyped(json, false);\n}\n\nexport function AddressUnlockScheduleFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressUnlockSchedule {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'amount': json['amount'],\n        'block_height': json['block_height'],\n    };\n}\n\nexport function AddressUnlockScheduleToJSON(value?: AddressUnlockSchedule | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'amount': value.amount,\n        'block_height': value.block_height,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * A block\n * @export\n * @interface Block\n */\nexport interface Block {\n    /**\n     * Set to `true` if block corresponds to the canonical chain tip\n     * @type {boolean}\n     * @memberof Block\n     */\n    canonical: boolean;\n    /**\n     * Height of the block\n     * @type {number}\n     * @memberof Block\n     */\n    height: number;\n    /**\n     * Hash representing the block\n     * @type {string}\n     * @memberof Block\n     */\n    hash: string;\n    /**\n     * The only hash that can uniquely identify an anchored block or an unconfirmed state trie\n     * @type {string}\n     * @memberof Block\n     */\n    index_block_hash: string;\n    /**\n     * Hash of the parent block\n     * @type {string}\n     * @memberof Block\n     */\n    parent_block_hash: string;\n    /**\n     * Unix timestamp (in seconds) indicating when this block was mined.\n     * @type {number}\n     * @memberof Block\n     */\n    burn_block_time: number;\n    /**\n     * An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) indicating when this block was mined.\n     * @type {string}\n     * @memberof Block\n     */\n    burn_block_time_iso: string;\n    /**\n     * Hash of the anchor chain block\n     * @type {string}\n     * @memberof Block\n     */\n    burn_block_hash: string;\n    /**\n     * Height of the anchor chain block\n     * @type {number}\n     * @memberof Block\n     */\n    burn_block_height: number;\n    /**\n     * Anchor chain transaction ID\n     * @type {string}\n     * @memberof Block\n     */\n    miner_txid: string;\n    /**\n     * The hash of the last streamed block that precedes this block to which this block is to be appended. Not every anchored block will have a parent microblock stream. An anchored block that does not have a parent microblock stream has the parent microblock hash set to an empty string, and the parent microblock sequence number set to -1.\n     * @type {string}\n     * @memberof Block\n     */\n    parent_microblock_hash: string;\n    /**\n     * The hash of the last streamed block that precedes this block to which this block is to be appended. Not every anchored block will have a parent microblock stream. An anchored block that does not have a parent microblock stream has the parent microblock hash set to an empty string, and the parent microblock sequence number set to -1.\n     * @type {number}\n     * @memberof Block\n     */\n    parent_microblock_sequence: number;\n    /**\n     * List of transactions included in the block\n     * @type {Array<string>}\n     * @memberof Block\n     */\n    txs: Array<string>;\n    /**\n     * List of microblocks that were accepted in this anchor block. Not every anchored block will have a accepted all (or any) of the previously streamed microblocks. Microblocks that were orphaned are not included in this list.\n     * @type {Array<string>}\n     * @memberof Block\n     */\n    microblocks_accepted: Array<string>;\n    /**\n     * List of microblocks that were streamed/produced by this anchor block's miner. This list only includes microblocks that were accepted in the following anchor block. Microblocks that were orphaned are not included in this list.\n     * @type {Array<string>}\n     * @memberof Block\n     */\n    microblocks_streamed: Array<string>;\n    /**\n     * Execution cost read count.\n     * @type {number}\n     * @memberof Block\n     */\n    execution_cost_read_count: number;\n    /**\n     * Execution cost read length.\n     * @type {number}\n     * @memberof Block\n     */\n    execution_cost_read_length: number;\n    /**\n     * Execution cost runtime.\n     * @type {number}\n     * @memberof Block\n     */\n    execution_cost_runtime: number;\n    /**\n     * Execution cost write count.\n     * @type {number}\n     * @memberof Block\n     */\n    execution_cost_write_count: number;\n    /**\n     * Execution cost write length.\n     * @type {number}\n     * @memberof Block\n     */\n    execution_cost_write_length: number;\n    /**\n     * List of txs counts in each accepted microblock\n     * @type {{ [key: string]: number; }}\n     * @memberof Block\n     */\n    microblock_tx_count: { [key: string]: number; };\n}\n\nexport function BlockFromJSON(json: any): Block {\n    return BlockFromJSONTyped(json, false);\n}\n\nexport function BlockFromJSONTyped(json: any, ignoreDiscriminator: boolean): Block {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'canonical': json['canonical'],\n        'height': json['height'],\n        'hash': json['hash'],\n        'index_block_hash': json['index_block_hash'],\n        'parent_block_hash': json['parent_block_hash'],\n        'burn_block_time': json['burn_block_time'],\n        'burn_block_time_iso': json['burn_block_time_iso'],\n        'burn_block_hash': json['burn_block_hash'],\n        'burn_block_height': json['burn_block_height'],\n        'miner_txid': json['miner_txid'],\n        'parent_microblock_hash': json['parent_microblock_hash'],\n        'parent_microblock_sequence': json['parent_microblock_sequence'],\n        'txs': json['txs'],\n        'microblocks_accepted': json['microblocks_accepted'],\n        'microblocks_streamed': json['microblocks_streamed'],\n        'execution_cost_read_count': json['execution_cost_read_count'],\n        'execution_cost_read_length': json['execution_cost_read_length'],\n        'execution_cost_runtime': json['execution_cost_runtime'],\n        'execution_cost_write_count': json['execution_cost_write_count'],\n        'execution_cost_write_length': json['execution_cost_write_length'],\n        'microblock_tx_count': json['microblock_tx_count'],\n    };\n}\n\nexport function BlockToJSON(value?: Block | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'canonical': value.canonical,\n        'height': value.height,\n        'hash': value.hash,\n        'index_block_hash': value.index_block_hash,\n        'parent_block_hash': value.parent_block_hash,\n        'burn_block_time': value.burn_block_time,\n        'burn_block_time_iso': value.burn_block_time_iso,\n        'burn_block_hash': value.burn_block_hash,\n        'burn_block_height': value.burn_block_height,\n        'miner_txid': value.miner_txid,\n        'parent_microblock_hash': value.parent_microblock_hash,\n        'parent_microblock_sequence': value.parent_microblock_sequence,\n        'txs': value.txs,\n        'microblocks_accepted': value.microblocks_accepted,\n        'microblocks_streamed': value.microblocks_streamed,\n        'execution_cost_read_count': value.execution_cost_read_count,\n        'execution_cost_read_length': value.execution_cost_read_length,\n        'execution_cost_runtime': value.execution_cost_runtime,\n        'execution_cost_write_count': value.execution_cost_write_count,\n        'execution_cost_write_length': value.execution_cost_write_length,\n        'microblock_tx_count': value.microblock_tx_count,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    Block,\n    BlockFromJSON,\n    BlockFromJSONTyped,\n    BlockToJSON,\n} from './';\n\n/**\n * GET request that returns blocks\n * @export\n * @interface BlockListResponse\n */\nexport interface BlockListResponse {\n    /**\n     * The number of blocks to return\n     * @type {number}\n     * @memberof BlockListResponse\n     */\n    limit: number;\n    /**\n     * The number to blocks to skip (starting at `0`)\n     * @type {number}\n     * @memberof BlockListResponse\n     */\n    offset: number;\n    /**\n     * The number of blocks available\n     * @type {number}\n     * @memberof BlockListResponse\n     */\n    total: number;\n    /**\n     * \n     * @type {Array<Block>}\n     * @memberof BlockListResponse\n     */\n    results: Array<Block>;\n}\n\nexport function BlockListResponseFromJSON(json: any): BlockListResponse {\n    return BlockListResponseFromJSONTyped(json, false);\n}\n\nexport function BlockListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockListResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'limit': json['limit'],\n        'offset': json['offset'],\n        'total': json['total'],\n        'results': ((json['results'] as Array<any>).map(BlockFromJSON)),\n    };\n}\n\nexport function BlockListResponseToJSON(value?: BlockListResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'limit': value.limit,\n        'offset': value.offset,\n        'total': value.total,\n        'results': ((value.results as Array<any>).map(BlockToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Error\n * @export\n * @interface BnsError\n */\nexport interface BnsError {\n    /**\n     * \n     * @type {string}\n     * @memberof BnsError\n     */\n    error?: string;\n}\n\nexport function BnsErrorFromJSON(json: any): BnsError {\n    return BnsErrorFromJSONTyped(json, false);\n}\n\nexport function BnsErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): BnsError {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'error': !exists(json, 'error') ? undefined : json['error'],\n    };\n}\n\nexport function BnsErrorToJSON(value?: BnsError | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'error': value.error,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Fetch a list of all namespaces known to the node.\n * @export\n * @interface BnsGetAllNamespacesResponse\n */\nexport interface BnsGetAllNamespacesResponse {\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof BnsGetAllNamespacesResponse\n     */\n    namespaces: Array<string>;\n}\n\nexport function BnsGetAllNamespacesResponseFromJSON(json: any): BnsGetAllNamespacesResponse {\n    return BnsGetAllNamespacesResponseFromJSONTyped(json, false);\n}\n\nexport function BnsGetAllNamespacesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BnsGetAllNamespacesResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'namespaces': json['namespaces'],\n    };\n}\n\nexport function BnsGetAllNamespacesResponseToJSON(value?: BnsGetAllNamespacesResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'namespaces': value.namespaces,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Get name details\n * @export\n * @interface BnsGetNameInfoResponse\n */\nexport interface BnsGetNameInfoResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof BnsGetNameInfoResponse\n     */\n    address: string;\n    /**\n     * \n     * @type {string}\n     * @memberof BnsGetNameInfoResponse\n     */\n    blockchain: string;\n    /**\n     * \n     * @type {number}\n     * @memberof BnsGetNameInfoResponse\n     */\n    expire_block?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof BnsGetNameInfoResponse\n     */\n    grace_period?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof BnsGetNameInfoResponse\n     */\n    last_txid: string;\n    /**\n     * \n     * @type {string}\n     * @memberof BnsGetNameInfoResponse\n     */\n    resolver?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof BnsGetNameInfoResponse\n     */\n    status: string;\n    /**\n     * \n     * @type {string}\n     * @memberof BnsGetNameInfoResponse\n     */\n    zonefile: string;\n    /**\n     * \n     * @type {string}\n     * @memberof BnsGetNameInfoResponse\n     */\n    zonefile_hash: string;\n}\n\nexport function BnsGetNameInfoResponseFromJSON(json: any): BnsGetNameInfoResponse {\n    return BnsGetNameInfoResponseFromJSONTyped(json, false);\n}\n\nexport function BnsGetNameInfoResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BnsGetNameInfoResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'address': json['address'],\n        'blockchain': json['blockchain'],\n        'expire_block': !exists(json, 'expire_block') ? undefined : json['expire_block'],\n        'grace_period': !exists(json, 'grace_period') ? undefined : json['grace_period'],\n        'last_txid': json['last_txid'],\n        'resolver': !exists(json, 'resolver') ? undefined : json['resolver'],\n        'status': json['status'],\n        'zonefile': json['zonefile'],\n        'zonefile_hash': json['zonefile_hash'],\n    };\n}\n\nexport function BnsGetNameInfoResponseToJSON(value?: BnsGetNameInfoResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'address': value.address,\n        'blockchain': value.blockchain,\n        'expire_block': value.expire_block,\n        'grace_period': value.grace_period,\n        'last_txid': value.last_txid,\n        'resolver': value.resolver,\n        'status': value.status,\n        'zonefile': value.zonefile,\n        'zonefile_hash': value.zonefile_hash,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Fetch price for name.\n * @export\n * @interface BnsGetNamePriceResponse\n */\nexport interface BnsGetNamePriceResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof BnsGetNamePriceResponse\n     */\n    units: string;\n    /**\n     * \n     * @type {string}\n     * @memberof BnsGetNamePriceResponse\n     */\n    amount: string;\n}\n\nexport function BnsGetNamePriceResponseFromJSON(json: any): BnsGetNamePriceResponse {\n    return BnsGetNamePriceResponseFromJSONTyped(json, false);\n}\n\nexport function BnsGetNamePriceResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BnsGetNamePriceResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'units': json['units'],\n        'amount': json['amount'],\n    };\n}\n\nexport function BnsGetNamePriceResponseToJSON(value?: BnsGetNamePriceResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'units': value.units,\n        'amount': value.amount,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Fetch price for namespace.\n * @export\n * @interface BnsGetNamespacePriceResponse\n */\nexport interface BnsGetNamespacePriceResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof BnsGetNamespacePriceResponse\n     */\n    units: string;\n    /**\n     * \n     * @type {string}\n     * @memberof BnsGetNamespacePriceResponse\n     */\n    amount: string;\n}\n\nexport function BnsGetNamespacePriceResponseFromJSON(json: any): BnsGetNamespacePriceResponse {\n    return BnsGetNamespacePriceResponseFromJSONTyped(json, false);\n}\n\nexport function BnsGetNamespacePriceResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BnsGetNamespacePriceResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'units': json['units'],\n        'amount': json['amount'],\n    };\n}\n\nexport function BnsGetNamespacePriceResponseToJSON(value?: BnsGetNamespacePriceResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'units': value.units,\n        'amount': value.amount,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Retrieves a list of names owned by the address provided.\n * @export\n * @interface BnsNamesOwnByAddressResponse\n */\nexport interface BnsNamesOwnByAddressResponse {\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof BnsNamesOwnByAddressResponse\n     */\n    names: Array<string>;\n}\n\nexport function BnsNamesOwnByAddressResponseFromJSON(json: any): BnsNamesOwnByAddressResponse {\n    return BnsNamesOwnByAddressResponseFromJSONTyped(json, false);\n}\n\nexport function BnsNamesOwnByAddressResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BnsNamesOwnByAddressResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'names': json['names'],\n    };\n}\n\nexport function BnsNamesOwnByAddressResponseToJSON(value?: BnsNamesOwnByAddressResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'names': value.names,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Reward payment made on the burnchain\n * @export\n * @interface BurnchainReward\n */\nexport interface BurnchainReward {\n    /**\n     * Set to `true` if block corresponds to the canonical burchchain tip\n     * @type {boolean}\n     * @memberof BurnchainReward\n     */\n    canonical: boolean;\n    /**\n     * The hash representing the burnchain block\n     * @type {string}\n     * @memberof BurnchainReward\n     */\n    burn_block_hash: string;\n    /**\n     * Height of the burnchain block\n     * @type {number}\n     * @memberof BurnchainReward\n     */\n    burn_block_height: number;\n    /**\n     * The total amount of burnchain tokens burned for this burnchain block, in the smallest unit (e.g. satoshis for Bitcoin)\n     * @type {string}\n     * @memberof BurnchainReward\n     */\n    burn_amount: string;\n    /**\n     * The recipient address that received the burnchain rewards, in the format native to the burnchain (e.g. B58 encoded for Bitcoin)\n     * @type {string}\n     * @memberof BurnchainReward\n     */\n    reward_recipient: string;\n    /**\n     * The amount of burnchain tokens rewarded to the recipient, in the smallest unit (e.g. satoshis for Bitcoin)\n     * @type {string}\n     * @memberof BurnchainReward\n     */\n    reward_amount: string;\n    /**\n     * The index position of the reward entry, useful for ordering when there's more than one recipient per burnchain block\n     * @type {number}\n     * @memberof BurnchainReward\n     */\n    reward_index: number;\n}\n\nexport function BurnchainRewardFromJSON(json: any): BurnchainReward {\n    return BurnchainRewardFromJSONTyped(json, false);\n}\n\nexport function BurnchainRewardFromJSONTyped(json: any, ignoreDiscriminator: boolean): BurnchainReward {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'canonical': json['canonical'],\n        'burn_block_hash': json['burn_block_hash'],\n        'burn_block_height': json['burn_block_height'],\n        'burn_amount': json['burn_amount'],\n        'reward_recipient': json['reward_recipient'],\n        'reward_amount': json['reward_amount'],\n        'reward_index': json['reward_index'],\n    };\n}\n\nexport function BurnchainRewardToJSON(value?: BurnchainReward | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'canonical': value.canonical,\n        'burn_block_hash': value.burn_block_hash,\n        'burn_block_height': value.burn_block_height,\n        'burn_amount': value.burn_amount,\n        'reward_recipient': value.reward_recipient,\n        'reward_amount': value.reward_amount,\n        'reward_index': value.reward_index,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    BurnchainReward,\n    BurnchainRewardFromJSON,\n    BurnchainRewardFromJSONTyped,\n    BurnchainRewardToJSON,\n} from './';\n\n/**\n * GET request that returns blocks\n * @export\n * @interface BurnchainRewardListResponse\n */\nexport interface BurnchainRewardListResponse {\n    /**\n     * The number of burnchain rewards to return\n     * @type {number}\n     * @memberof BurnchainRewardListResponse\n     */\n    limit: number;\n    /**\n     * The number to burnchain rewards to skip (starting at `0`)\n     * @type {number}\n     * @memberof BurnchainRewardListResponse\n     */\n    offset: number;\n    /**\n     * \n     * @type {Array<BurnchainReward>}\n     * @memberof BurnchainRewardListResponse\n     */\n    results: Array<BurnchainReward>;\n}\n\nexport function BurnchainRewardListResponseFromJSON(json: any): BurnchainRewardListResponse {\n    return BurnchainRewardListResponseFromJSONTyped(json, false);\n}\n\nexport function BurnchainRewardListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BurnchainRewardListResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'limit': json['limit'],\n        'offset': json['offset'],\n        'results': ((json['results'] as Array<any>).map(BurnchainRewardFromJSON)),\n    };\n}\n\nexport function BurnchainRewardListResponseToJSON(value?: BurnchainRewardListResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'limit': value.limit,\n        'offset': value.offset,\n        'results': ((value.results as Array<any>).map(BurnchainRewardToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Reward slot holder on the burnchain\n * @export\n * @interface BurnchainRewardSlotHolder\n */\nexport interface BurnchainRewardSlotHolder {\n    /**\n     * Set to `true` if block corresponds to the canonical burchchain tip\n     * @type {boolean}\n     * @memberof BurnchainRewardSlotHolder\n     */\n    canonical: boolean;\n    /**\n     * The hash representing the burnchain block\n     * @type {string}\n     * @memberof BurnchainRewardSlotHolder\n     */\n    burn_block_hash: string;\n    /**\n     * Height of the burnchain block\n     * @type {number}\n     * @memberof BurnchainRewardSlotHolder\n     */\n    burn_block_height: number;\n    /**\n     * The recipient address that validly received PoX commitments, in the format native to the burnchain (e.g. B58 encoded for Bitcoin)\n     * @type {string}\n     * @memberof BurnchainRewardSlotHolder\n     */\n    address: string;\n    /**\n     * The index position of the reward entry, useful for ordering when there's more than one slot per burnchain block\n     * @type {number}\n     * @memberof BurnchainRewardSlotHolder\n     */\n    slot_index: number;\n}\n\nexport function BurnchainRewardSlotHolderFromJSON(json: any): BurnchainRewardSlotHolder {\n    return BurnchainRewardSlotHolderFromJSONTyped(json, false);\n}\n\nexport function BurnchainRewardSlotHolderFromJSONTyped(json: any, ignoreDiscriminator: boolean): BurnchainRewardSlotHolder {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'canonical': json['canonical'],\n        'burn_block_hash': json['burn_block_hash'],\n        'burn_block_height': json['burn_block_height'],\n        'address': json['address'],\n        'slot_index': json['slot_index'],\n    };\n}\n\nexport function BurnchainRewardSlotHolderToJSON(value?: BurnchainRewardSlotHolder | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'canonical': value.canonical,\n        'burn_block_hash': value.burn_block_hash,\n        'burn_block_height': value.burn_block_height,\n        'address': value.address,\n        'slot_index': value.slot_index,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    BurnchainRewardSlotHolder,\n    BurnchainRewardSlotHolderFromJSON,\n    BurnchainRewardSlotHolderFromJSONTyped,\n    BurnchainRewardSlotHolderToJSON,\n} from './';\n\n/**\n * GET request that returns reward slot holders\n * @export\n * @interface BurnchainRewardSlotHolderListResponse\n */\nexport interface BurnchainRewardSlotHolderListResponse {\n    /**\n     * The number of items to return\n     * @type {number}\n     * @memberof BurnchainRewardSlotHolderListResponse\n     */\n    limit: number;\n    /**\n     * The number of items to skip (starting at `0`)\n     * @type {number}\n     * @memberof BurnchainRewardSlotHolderListResponse\n     */\n    offset: number;\n    /**\n     * Total number of available items\n     * @type {number}\n     * @memberof BurnchainRewardSlotHolderListResponse\n     */\n    total: number;\n    /**\n     * \n     * @type {Array<BurnchainRewardSlotHolder>}\n     * @memberof BurnchainRewardSlotHolderListResponse\n     */\n    results: Array<BurnchainRewardSlotHolder>;\n}\n\nexport function BurnchainRewardSlotHolderListResponseFromJSON(json: any): BurnchainRewardSlotHolderListResponse {\n    return BurnchainRewardSlotHolderListResponseFromJSONTyped(json, false);\n}\n\nexport function BurnchainRewardSlotHolderListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BurnchainRewardSlotHolderListResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'limit': json['limit'],\n        'offset': json['offset'],\n        'total': json['total'],\n        'results': ((json['results'] as Array<any>).map(BurnchainRewardSlotHolderFromJSON)),\n    };\n}\n\nexport function BurnchainRewardSlotHolderListResponseToJSON(value?: BurnchainRewardSlotHolderListResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'limit': value.limit,\n        'offset': value.offset,\n        'total': value.total,\n        'results': ((value.results as Array<any>).map(BurnchainRewardSlotHolderToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Total burnchain rewards made to a recipient\n * @export\n * @interface BurnchainRewardsTotal\n */\nexport interface BurnchainRewardsTotal {\n    /**\n     * The recipient address that received the burnchain rewards, in the format native to the burnchain (e.g. B58 encoded for Bitcoin)\n     * @type {string}\n     * @memberof BurnchainRewardsTotal\n     */\n    reward_recipient: string;\n    /**\n     * The total amount of burnchain tokens rewarded to the recipient, in the smallest unit (e.g. satoshis for Bitcoin)\n     * @type {string}\n     * @memberof BurnchainRewardsTotal\n     */\n    reward_amount: string;\n}\n\nexport function BurnchainRewardsTotalFromJSON(json: any): BurnchainRewardsTotal {\n    return BurnchainRewardsTotalFromJSONTyped(json, false);\n}\n\nexport function BurnchainRewardsTotalFromJSONTyped(json: any, ignoreDiscriminator: boolean): BurnchainRewardsTotal {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'reward_recipient': json['reward_recipient'],\n        'reward_amount': json['reward_amount'],\n    };\n}\n\nexport function BurnchainRewardsTotalToJSON(value?: BurnchainRewardsTotal | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'reward_recipient': value.reward_recipient,\n        'reward_amount': value.reward_amount,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Current chain tip information\n * @export\n * @interface ChainTip\n */\nexport interface ChainTip {\n    /**\n     * the current block height\n     * @type {number}\n     * @memberof ChainTip\n     */\n    block_height: number;\n    /**\n     * the current block hash\n     * @type {string}\n     * @memberof ChainTip\n     */\n    block_hash: string;\n    /**\n     * the current index block hash\n     * @type {string}\n     * @memberof ChainTip\n     */\n    index_block_hash: string;\n    /**\n     * the current microblock hash\n     * @type {string}\n     * @memberof ChainTip\n     */\n    microblock_hash?: string;\n    /**\n     * the current microblock sequence number\n     * @type {number}\n     * @memberof ChainTip\n     */\n    microblock_sequence?: number;\n    /**\n     * the current burn chain block height\n     * @type {number}\n     * @memberof ChainTip\n     */\n    burn_block_height: number;\n}\n\nexport function ChainTipFromJSON(json: any): ChainTip {\n    return ChainTipFromJSONTyped(json, false);\n}\n\nexport function ChainTipFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChainTip {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'block_height': json['block_height'],\n        'block_hash': json['block_hash'],\n        'index_block_hash': json['index_block_hash'],\n        'microblock_hash': !exists(json, 'microblock_hash') ? undefined : json['microblock_hash'],\n        'microblock_sequence': !exists(json, 'microblock_sequence') ? undefined : json['microblock_sequence'],\n        'burn_block_height': json['burn_block_height'],\n    };\n}\n\nexport function ChainTipToJSON(value?: ChainTip | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'block_height': value.block_height,\n        'block_hash': value.block_hash,\n        'index_block_hash': value.index_block_hash,\n        'microblock_hash': value.microblock_hash,\n        'microblock_sequence': value.microblock_sequence,\n        'burn_block_height': value.burn_block_height,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * GET request to get contract interface\n * @export\n * @interface ContractInterfaceResponse\n */\nexport interface ContractInterfaceResponse {\n    /**\n     * List of defined methods\n     * @type {Array<object>}\n     * @memberof ContractInterfaceResponse\n     */\n    functions: Array<object>;\n    /**\n     * List of defined variables\n     * @type {Array<object>}\n     * @memberof ContractInterfaceResponse\n     */\n    variables: Array<object>;\n    /**\n     * List of defined data-maps\n     * @type {Array<object>}\n     * @memberof ContractInterfaceResponse\n     */\n    maps: Array<object>;\n    /**\n     * List of fungible tokens in the contract\n     * @type {Array<object>}\n     * @memberof ContractInterfaceResponse\n     */\n    fungible_tokens: Array<object>;\n    /**\n     * List of non-fungible tokens in the contract\n     * @type {Array<object>}\n     * @memberof ContractInterfaceResponse\n     */\n    non_fungible_tokens: Array<object>;\n}\n\nexport function ContractInterfaceResponseFromJSON(json: any): ContractInterfaceResponse {\n    return ContractInterfaceResponseFromJSONTyped(json, false);\n}\n\nexport function ContractInterfaceResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContractInterfaceResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'functions': json['functions'],\n        'variables': json['variables'],\n        'maps': json['maps'],\n        'fungible_tokens': json['fungible_tokens'],\n        'non_fungible_tokens': json['non_fungible_tokens'],\n    };\n}\n\nexport function ContractInterfaceResponseToJSON(value?: ContractInterfaceResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'functions': value.functions,\n        'variables': value.variables,\n        'maps': value.maps,\n        'fungible_tokens': value.fungible_tokens,\n        'non_fungible_tokens': value.non_fungible_tokens,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    SmartContract,\n    SmartContractFromJSON,\n    SmartContractFromJSONTyped,\n    SmartContractToJSON,\n} from './';\n\n/**\n * GET list of contracts\n * @export\n * @interface ContractListResponse\n */\nexport interface ContractListResponse {\n    /**\n     * The number of contracts to return\n     * @type {number}\n     * @memberof ContractListResponse\n     */\n    limit: number;\n    /**\n     * The number to contracts to skip (starting at `0`)\n     * @type {number}\n     * @memberof ContractListResponse\n     */\n    offset: number;\n    /**\n     * \n     * @type {Array<SmartContract>}\n     * @memberof ContractListResponse\n     */\n    results: Array<SmartContract>;\n}\n\nexport function ContractListResponseFromJSON(json: any): ContractListResponse {\n    return ContractListResponseFromJSONTyped(json, false);\n}\n\nexport function ContractListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContractListResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'limit': json['limit'],\n        'offset': json['offset'],\n        'results': ((json['results'] as Array<any>).map(SmartContractFromJSON)),\n    };\n}\n\nexport function ContractListResponseToJSON(value?: ContractListResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'limit': value.limit,\n        'offset': value.offset,\n        'results': ((value.results as Array<any>).map(SmartContractToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * GET request to get contract source\n * @export\n * @interface ContractSourceResponse\n */\nexport interface ContractSourceResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof ContractSourceResponse\n     */\n    source: string;\n    /**\n     * \n     * @type {number}\n     * @memberof ContractSourceResponse\n     */\n    publish_height: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ContractSourceResponse\n     */\n    proof: string;\n}\n\nexport function ContractSourceResponseFromJSON(json: any): ContractSourceResponse {\n    return ContractSourceResponseFromJSONTyped(json, false);\n}\n\nexport function ContractSourceResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContractSourceResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'source': json['source'],\n        'publish_height': json['publish_height'],\n        'proof': json['proof'],\n    };\n}\n\nexport function ContractSourceResponseToJSON(value?: ContractSourceResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'source': value.source,\n        'publish_height': value.publish_height,\n        'proof': value.proof,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * GET request that core node information\n * @export\n * @interface CoreNodeInfoResponse\n */\nexport interface CoreNodeInfoResponse {\n    /**\n     * identifies the version number for the networking communication, this should not change while a node is running, and will only change if there's an upgrade\n     * @type {number}\n     * @memberof CoreNodeInfoResponse\n     */\n    peer_version: number;\n    /**\n     * is a hash used to identify the burnchain view for a node. it incorporates bitcoin chain information and PoX information. nodes that disagree on this value will appear to each other as forks. this value will change after every block\n     * @type {string}\n     * @memberof CoreNodeInfoResponse\n     */\n    pox_consensus: string;\n    /**\n     * latest bitcoin chain height\n     * @type {number}\n     * @memberof CoreNodeInfoResponse\n     */\n    burn_block_height: number;\n    /**\n     * same as burn_consensus, but evaluated at stable_burn_block_height\n     * @type {string}\n     * @memberof CoreNodeInfoResponse\n     */\n    stable_pox_consensus: string;\n    /**\n     * leftover from stacks 1.0, basically always burn_block_height - 1\n     * @type {number}\n     * @memberof CoreNodeInfoResponse\n     */\n    stable_burn_block_height: number;\n    /**\n     * is a version descriptor\n     * @type {string}\n     * @memberof CoreNodeInfoResponse\n     */\n    server_version: string;\n    /**\n     * is similar to peer_version and will be used to differentiate between different testnets. this value will be different between mainnet and testnet. once launched, this value will not change\n     * @type {number}\n     * @memberof CoreNodeInfoResponse\n     */\n    network_id: number;\n    /**\n     * same as network_id, but for bitcoin\n     * @type {number}\n     * @memberof CoreNodeInfoResponse\n     */\n    parent_network_id: number;\n    /**\n     * the latest Stacks chain height. Stacks forks can occur independent of the Bitcoin chain, that height doesn't increase 1-to-1 with the Bitcoin height\n     * @type {number}\n     * @memberof CoreNodeInfoResponse\n     */\n    stacks_tip_height: number;\n    /**\n     * the best known block hash for the Stack chain (not including any pending microblocks)\n     * @type {string}\n     * @memberof CoreNodeInfoResponse\n     */\n    stacks_tip: string;\n    /**\n     * the burn chain (i.e., bitcoin) consensus hash at the time that stacks_tip was mined\n     * @type {string}\n     * @memberof CoreNodeInfoResponse\n     */\n    stacks_tip_consensus_hash: string;\n    /**\n     * the latest microblock hash if any microblocks were processed. if no microblock has been processed for the current block, a 000.., hex array is returned\n     * @type {string}\n     * @memberof CoreNodeInfoResponse\n     */\n    unanchored_tip: string;\n    /**\n     * the block height at which the testnet network will be reset. not applicable for mainnet\n     * @type {number}\n     * @memberof CoreNodeInfoResponse\n     */\n    exit_at_block_height: number;\n}\n\nexport function CoreNodeInfoResponseFromJSON(json: any): CoreNodeInfoResponse {\n    return CoreNodeInfoResponseFromJSONTyped(json, false);\n}\n\nexport function CoreNodeInfoResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreNodeInfoResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'peer_version': json['peer_version'],\n        'pox_consensus': json['pox_consensus'],\n        'burn_block_height': json['burn_block_height'],\n        'stable_pox_consensus': json['stable_pox_consensus'],\n        'stable_burn_block_height': json['stable_burn_block_height'],\n        'server_version': json['server_version'],\n        'network_id': json['network_id'],\n        'parent_network_id': json['parent_network_id'],\n        'stacks_tip_height': json['stacks_tip_height'],\n        'stacks_tip': json['stacks_tip'],\n        'stacks_tip_consensus_hash': json['stacks_tip_consensus_hash'],\n        'unanchored_tip': json['unanchored_tip'],\n        'exit_at_block_height': json['exit_at_block_height'],\n    };\n}\n\nexport function CoreNodeInfoResponseToJSON(value?: CoreNodeInfoResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'peer_version': value.peer_version,\n        'pox_consensus': value.pox_consensus,\n        'burn_block_height': value.burn_block_height,\n        'stable_pox_consensus': value.stable_pox_consensus,\n        'stable_burn_block_height': value.stable_burn_block_height,\n        'server_version': value.server_version,\n        'network_id': value.network_id,\n        'parent_network_id': value.parent_network_id,\n        'stacks_tip_height': value.stacks_tip_height,\n        'stacks_tip': value.stacks_tip,\n        'stacks_tip_consensus_hash': value.stacks_tip_consensus_hash,\n        'unanchored_tip': value.unanchored_tip,\n        'exit_at_block_height': value.exit_at_block_height,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Get Proof of Transfer (PoX) information\n * @export\n * @interface CoreNodePoxResponse\n */\nexport interface CoreNodePoxResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof CoreNodePoxResponse\n     */\n    contract_id: string;\n    /**\n     * \n     * @type {number}\n     * @memberof CoreNodePoxResponse\n     */\n    first_burnchain_block_height: number;\n    /**\n     * \n     * @type {number}\n     * @memberof CoreNodePoxResponse\n     */\n    min_amount_ustx: number;\n    /**\n     * \n     * @type {number}\n     * @memberof CoreNodePoxResponse\n     */\n    registration_window_length: number;\n    /**\n     * \n     * @type {number}\n     * @memberof CoreNodePoxResponse\n     */\n    rejection_fraction: number;\n    /**\n     * \n     * @type {number}\n     * @memberof CoreNodePoxResponse\n     */\n    reward_cycle_id: number;\n    /**\n     * \n     * @type {number}\n     * @memberof CoreNodePoxResponse\n     */\n    reward_cycle_length: number;\n    /**\n     * \n     * @type {number}\n     * @memberof CoreNodePoxResponse\n     */\n    rejection_votes_left_required: number;\n    /**\n     * \n     * @type {number}\n     * @memberof CoreNodePoxResponse\n     */\n    total_liquid_supply_ustx: number;\n}\n\nexport function CoreNodePoxResponseFromJSON(json: any): CoreNodePoxResponse {\n    return CoreNodePoxResponseFromJSONTyped(json, false);\n}\n\nexport function CoreNodePoxResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreNodePoxResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'contract_id': json['contract_id'],\n        'first_burnchain_block_height': json['first_burnchain_block_height'],\n        'min_amount_ustx': json['min_amount_ustx'],\n        'registration_window_length': json['registration_window_length'],\n        'rejection_fraction': json['rejection_fraction'],\n        'reward_cycle_id': json['reward_cycle_id'],\n        'reward_cycle_length': json['reward_cycle_length'],\n        'rejection_votes_left_required': json['rejection_votes_left_required'],\n        'total_liquid_supply_ustx': json['total_liquid_supply_ustx'],\n    };\n}\n\nexport function CoreNodePoxResponseToJSON(value?: CoreNodePoxResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'contract_id': value.contract_id,\n        'first_burnchain_block_height': value.first_burnchain_block_height,\n        'min_amount_ustx': value.min_amount_ustx,\n        'registration_window_length': value.registration_window_length,\n        'rejection_fraction': value.rejection_fraction,\n        'reward_cycle_id': value.reward_cycle_id,\n        'reward_cycle_length': value.reward_cycle_length,\n        'rejection_votes_left_required': value.rejection_votes_left_required,\n        'total_liquid_supply_ustx': value.total_liquid_supply_ustx,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Get fee rate information.\n * @export\n * @interface FeeRate\n */\nexport interface FeeRate {\n    /**\n     * \n     * @type {number}\n     * @memberof FeeRate\n     */\n    fee_rate: number;\n}\n\nexport function FeeRateFromJSON(json: any): FeeRate {\n    return FeeRateFromJSONTyped(json, false);\n}\n\nexport function FeeRateFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeeRate {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'fee_rate': json['fee_rate'],\n    };\n}\n\nexport function FeeRateToJSON(value?: FeeRate | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'fee_rate': value.fee_rate,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Request to fetch fee for a transaction\n * @export\n * @interface FeeRateRequest\n */\nexport interface FeeRateRequest {\n    /**\n     * A serialized transaction\n     * @type {string}\n     * @memberof FeeRateRequest\n     */\n    transaction: string;\n}\n\nexport function FeeRateRequestFromJSON(json: any): FeeRateRequest {\n    return FeeRateRequestFromJSONTyped(json, false);\n}\n\nexport function FeeRateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeeRateRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'transaction': json['transaction'],\n    };\n}\n\nexport function FeeRateRequestToJSON(value?: FeeRateRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'transaction': value.transaction,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface FungibleTokenMetadata\n */\nexport interface FungibleTokenMetadata {\n    /**\n     * An optional string that is a valid URI which resolves to this token's metadata. Can be empty.\n     * @type {string}\n     * @memberof FungibleTokenMetadata\n     */\n    token_uri: string;\n    /**\n     * Identifies the asset to which this token represents\n     * @type {string}\n     * @memberof FungibleTokenMetadata\n     */\n    name: string;\n    /**\n     * Describes the asset to which this token represents\n     * @type {string}\n     * @memberof FungibleTokenMetadata\n     */\n    description: string;\n    /**\n     * A URI pointing to a resource with mime type image/* representing the asset to which this token represents. The API may provide a URI to a cached resource, dependending on configuration. Otherwise, this can be the same value as the canonical image URI.\n     * @type {string}\n     * @memberof FungibleTokenMetadata\n     */\n    image_uri: string;\n    /**\n     * The original image URI specified by the contract. A URI pointing to a resource with mime type image/* representing the asset to which this token represents. Consider making any images at a width between 320 and 1080 pixels and aspect ratio between 1.91:1 and 4:5 inclusive.\n     * @type {string}\n     * @memberof FungibleTokenMetadata\n     */\n    image_canonical_uri: string;\n    /**\n     * A shorter representation of a token. This is sometimes referred to as a \"ticker\". Examples: \"STX\", \"COOL\", etc. Typically, a token could be referred to as $SYMBOL when referencing it in writing.\n     * @type {string}\n     * @memberof FungibleTokenMetadata\n     */\n    symbol: string;\n    /**\n     * The number of decimal places in a token.\n     * @type {number}\n     * @memberof FungibleTokenMetadata\n     */\n    decimals: number;\n    /**\n     * Tx id that deployed the contract\n     * @type {string}\n     * @memberof FungibleTokenMetadata\n     */\n    tx_id: string;\n    /**\n     * principle that deployed the contract\n     * @type {string}\n     * @memberof FungibleTokenMetadata\n     */\n    sender_address: string;\n}\n\nexport function FungibleTokenMetadataFromJSON(json: any): FungibleTokenMetadata {\n    return FungibleTokenMetadataFromJSONTyped(json, false);\n}\n\nexport function FungibleTokenMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): FungibleTokenMetadata {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'token_uri': json['token_uri'],\n        'name': json['name'],\n        'description': json['description'],\n        'image_uri': json['image_uri'],\n        'image_canonical_uri': json['image_canonical_uri'],\n        'symbol': json['symbol'],\n        'decimals': json['decimals'],\n        'tx_id': json['tx_id'],\n        'sender_address': json['sender_address'],\n    };\n}\n\nexport function FungibleTokenMetadataToJSON(value?: FungibleTokenMetadata | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'token_uri': value.token_uri,\n        'name': value.name,\n        'description': value.description,\n        'image_uri': value.image_uri,\n        'image_canonical_uri': value.image_canonical_uri,\n        'symbol': value.symbol,\n        'decimals': value.decimals,\n        'tx_id': value.tx_id,\n        'sender_address': value.sender_address,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    FungibleTokenMetadata,\n    FungibleTokenMetadataFromJSON,\n    FungibleTokenMetadataFromJSONTyped,\n    FungibleTokenMetadataToJSON,\n} from './';\n\n/**\n * List of fungible tokens metadata\n * @export\n * @interface FungibleTokensMetadataList\n */\nexport interface FungibleTokensMetadataList {\n    /**\n     * The number of tokens metadata to return\n     * @type {number}\n     * @memberof FungibleTokensMetadataList\n     */\n    limit: number;\n    /**\n     * The number to tokens metadata to skip (starting at `0`)\n     * @type {number}\n     * @memberof FungibleTokensMetadataList\n     */\n    offset: number;\n    /**\n     * The number of tokens metadata available\n     * @type {number}\n     * @memberof FungibleTokensMetadataList\n     */\n    total: number;\n    /**\n     * \n     * @type {Array<FungibleTokenMetadata>}\n     * @memberof FungibleTokensMetadataList\n     */\n    results: Array<FungibleTokenMetadata>;\n}\n\nexport function FungibleTokensMetadataListFromJSON(json: any): FungibleTokensMetadataList {\n    return FungibleTokensMetadataListFromJSONTyped(json, false);\n}\n\nexport function FungibleTokensMetadataListFromJSONTyped(json: any, ignoreDiscriminator: boolean): FungibleTokensMetadataList {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'limit': json['limit'],\n        'offset': json['offset'],\n        'total': json['total'],\n        'results': ((json['results'] as Array<any>).map(FungibleTokenMetadataFromJSON)),\n    };\n}\n\nexport function FungibleTokensMetadataListToJSON(value?: FungibleTokensMetadataList | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'limit': value.limit,\n        'offset': value.offset,\n        'total': value.total,\n        'results': ((value.results as Array<any>).map(FungibleTokenMetadataToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * GET raw transaction\n * @export\n * @interface GetRawTransactionResult\n */\nexport interface GetRawTransactionResult {\n    /**\n     * A hex encoded serialized transaction\n     * @type {string}\n     * @memberof GetRawTransactionResult\n     */\n    raw_tx: string;\n}\n\nexport function GetRawTransactionResultFromJSON(json: any): GetRawTransactionResult {\n    return GetRawTransactionResultFromJSONTyped(json, false);\n}\n\nexport function GetRawTransactionResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetRawTransactionResult {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'raw_tx': json['raw_tx'],\n    };\n}\n\nexport function GetRawTransactionResultToJSON(value?: GetRawTransactionResult | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'raw_tx': value.raw_tx,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * GET request that returns network target block times\n * @export\n * @interface GetStxSupplyLegacyFormatResponse\n */\nexport interface GetStxSupplyLegacyFormatResponse {\n    /**\n     * String quoted decimal number of the percentage of STX that have unlocked\n     * @type {string}\n     * @memberof GetStxSupplyLegacyFormatResponse\n     */\n    unlockedPercent: string;\n    /**\n     * String quoted decimal number of the total possible number of STX\n     * @type {string}\n     * @memberof GetStxSupplyLegacyFormatResponse\n     */\n    totalStacks: string;\n    /**\n     * Same as `totalStacks` but formatted with comma thousands separators\n     * @type {string}\n     * @memberof GetStxSupplyLegacyFormatResponse\n     */\n    totalStacksFormatted: string;\n    /**\n     * String quoted decimal number of the STX that have been mined or unlocked\n     * @type {string}\n     * @memberof GetStxSupplyLegacyFormatResponse\n     */\n    unlockedSupply: string;\n    /**\n     * Same as `unlockedSupply` but formatted with comma thousands separators\n     * @type {string}\n     * @memberof GetStxSupplyLegacyFormatResponse\n     */\n    unlockedSupplyFormatted: string;\n    /**\n     * The block height at which this information was queried\n     * @type {string}\n     * @memberof GetStxSupplyLegacyFormatResponse\n     */\n    blockHeight: string;\n}\n\nexport function GetStxSupplyLegacyFormatResponseFromJSON(json: any): GetStxSupplyLegacyFormatResponse {\n    return GetStxSupplyLegacyFormatResponseFromJSONTyped(json, false);\n}\n\nexport function GetStxSupplyLegacyFormatResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetStxSupplyLegacyFormatResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'unlockedPercent': json['unlockedPercent'],\n        'totalStacks': json['totalStacks'],\n        'totalStacksFormatted': json['totalStacksFormatted'],\n        'unlockedSupply': json['unlockedSupply'],\n        'unlockedSupplyFormatted': json['unlockedSupplyFormatted'],\n        'blockHeight': json['blockHeight'],\n    };\n}\n\nexport function GetStxSupplyLegacyFormatResponseToJSON(value?: GetStxSupplyLegacyFormatResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'unlockedPercent': value.unlockedPercent,\n        'totalStacks': value.totalStacks,\n        'totalStacksFormatted': value.totalStacksFormatted,\n        'unlockedSupply': value.unlockedSupply,\n        'unlockedSupplyFormatted': value.unlockedSupplyFormatted,\n        'blockHeight': value.blockHeight,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * GET request that returns network target block times\n * @export\n * @interface GetStxSupplyResponse\n */\nexport interface GetStxSupplyResponse {\n    /**\n     * String quoted decimal number of the percentage of STX that have unlocked\n     * @type {string}\n     * @memberof GetStxSupplyResponse\n     */\n    unlocked_percent: string;\n    /**\n     * String quoted decimal number of the total possible number of STX\n     * @type {string}\n     * @memberof GetStxSupplyResponse\n     */\n    total_stx: string;\n    /**\n     * String quoted decimal number of the STX that have been mined or unlocked\n     * @type {string}\n     * @memberof GetStxSupplyResponse\n     */\n    unlocked_stx: string;\n    /**\n     * The block height at which this information was queried\n     * @type {number}\n     * @memberof GetStxSupplyResponse\n     */\n    block_height: number;\n}\n\nexport function GetStxSupplyResponseFromJSON(json: any): GetStxSupplyResponse {\n    return GetStxSupplyResponseFromJSONTyped(json, false);\n}\n\nexport function GetStxSupplyResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetStxSupplyResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'unlocked_percent': json['unlocked_percent'],\n        'total_stx': json['total_stx'],\n        'unlocked_stx': json['unlocked_stx'],\n        'block_height': json['block_height'],\n    };\n}\n\nexport function GetStxSupplyResponseToJSON(value?: GetStxSupplyResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'unlocked_percent': value.unlocked_percent,\n        'total_stx': value.total_stx,\n        'unlocked_stx': value.unlocked_stx,\n        'block_height': value.block_height,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * A inbound STX transfer with a memo\n * @export\n * @interface InboundStxTransfer\n */\nexport interface InboundStxTransfer {\n    /**\n     * Principal that sent this transfer\n     * @type {string}\n     * @memberof InboundStxTransfer\n     */\n    sender: string;\n    /**\n     * Transfer amount in micro-STX as integer string\n     * @type {string}\n     * @memberof InboundStxTransfer\n     */\n    amount: string;\n    /**\n     * Hex encoded memo bytes associated with the transfer\n     * @type {string}\n     * @memberof InboundStxTransfer\n     */\n    memo: string;\n    /**\n     * Block height at which this transfer occurred\n     * @type {number}\n     * @memberof InboundStxTransfer\n     */\n    block_height: number;\n    /**\n     * The transaction ID in which this transfer occurred\n     * @type {string}\n     * @memberof InboundStxTransfer\n     */\n    tx_id: string;\n    /**\n     * Indicates if the transfer is from a stx-transfer transaction or a contract-call transaction\n     * @type {string}\n     * @memberof InboundStxTransfer\n     */\n    transfer_type: InboundStxTransferTransferTypeEnum;\n    /**\n     * Index of the transaction within a block\n     * @type {number}\n     * @memberof InboundStxTransfer\n     */\n    tx_index: number;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum InboundStxTransferTransferTypeEnum {\n    bulk_send = 'bulk-send',\n    stx_transfer = 'stx-transfer',\n    stx_transfer_memo = 'stx-transfer-memo'\n}\n\nexport function InboundStxTransferFromJSON(json: any): InboundStxTransfer {\n    return InboundStxTransferFromJSONTyped(json, false);\n}\n\nexport function InboundStxTransferFromJSONTyped(json: any, ignoreDiscriminator: boolean): InboundStxTransfer {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'sender': json['sender'],\n        'amount': json['amount'],\n        'memo': json['memo'],\n        'block_height': json['block_height'],\n        'tx_id': json['tx_id'],\n        'transfer_type': json['transfer_type'],\n        'tx_index': json['tx_index'],\n    };\n}\n\nexport function InboundStxTransferToJSON(value?: InboundStxTransfer | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'sender': value.sender,\n        'amount': value.amount,\n        'memo': value.memo,\n        'block_height': value.block_height,\n        'tx_id': value.tx_id,\n        'transfer_type': value.transfer_type,\n        'tx_index': value.tx_index,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface InlineObject\n */\nexport interface InlineObject {\n    /**\n     * STX testnet address\n     * @type {string}\n     * @memberof InlineObject\n     */\n    address?: string;\n    /**\n     * Use required number of tokens for stacking\n     * @type {boolean}\n     * @memberof InlineObject\n     */\n    stacking?: boolean;\n}\n\nexport function InlineObjectFromJSON(json: any): InlineObject {\n    return InlineObjectFromJSONTyped(json, false);\n}\n\nexport function InlineObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineObject {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'address': !exists(json, 'address') ? undefined : json['address'],\n        'stacking': !exists(json, 'stacking') ? undefined : json['stacking'],\n    };\n}\n\nexport function InlineObjectToJSON(value?: InlineObject | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'address': value.address,\n        'stacking': value.stacking,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface InlineObject1\n */\nexport interface InlineObject1 {\n    /**\n     * BTC testnet address\n     * @type {string}\n     * @memberof InlineObject1\n     */\n    address?: string;\n}\n\nexport function InlineObject1FromJSON(json: any): InlineObject1 {\n    return InlineObject1FromJSONTyped(json, false);\n}\n\nexport function InlineObject1FromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineObject1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'address': !exists(json, 'address') ? undefined : json['address'],\n    };\n}\n\nexport function InlineObject1ToJSON(value?: InlineObject1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'address': value.address,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Response of get data map entry request\n * @export\n * @interface MapEntryResponse\n */\nexport interface MapEntryResponse {\n    /**\n     * Hex-encoded string of clarity value. It is always an optional tuple.\n     * @type {string}\n     * @memberof MapEntryResponse\n     */\n    data: string;\n    /**\n     * Hex-encoded string of the MARF proof for the data\n     * @type {string}\n     * @memberof MapEntryResponse\n     */\n    proof?: string;\n}\n\nexport function MapEntryResponseFromJSON(json: any): MapEntryResponse {\n    return MapEntryResponseFromJSONTyped(json, false);\n}\n\nexport function MapEntryResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MapEntryResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'data': json['data'],\n        'proof': !exists(json, 'proof') ? undefined : json['proof'],\n    };\n}\n\nexport function MapEntryResponseToJSON(value?: MapEntryResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'data': value.data,\n        'proof': value.proof,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * GET request that returns transactions\n * @export\n * @interface MempoolTransactionListResponse\n */\nexport interface MempoolTransactionListResponse {\n    /**\n     * \n     * @type {number}\n     * @memberof MempoolTransactionListResponse\n     */\n    limit: number;\n    /**\n     * \n     * @type {number}\n     * @memberof MempoolTransactionListResponse\n     */\n    offset: number;\n    /**\n     * \n     * @type {number}\n     * @memberof MempoolTransactionListResponse\n     */\n    total: number;\n    /**\n     * \n     * @type {Array<object>}\n     * @memberof MempoolTransactionListResponse\n     */\n    results: Array<object>;\n}\n\nexport function MempoolTransactionListResponseFromJSON(json: any): MempoolTransactionListResponse {\n    return MempoolTransactionListResponseFromJSONTyped(json, false);\n}\n\nexport function MempoolTransactionListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MempoolTransactionListResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'limit': json['limit'],\n        'offset': json['offset'],\n        'total': json['total'],\n        'results': json['results'],\n    };\n}\n\nexport function MempoolTransactionListResponseToJSON(value?: MempoolTransactionListResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'limit': value.limit,\n        'offset': value.offset,\n        'total': value.total,\n        'results': value.results,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    MempoolTransactionStatsResponseTxAges,\n    MempoolTransactionStatsResponseTxAgesFromJSON,\n    MempoolTransactionStatsResponseTxAgesFromJSONTyped,\n    MempoolTransactionStatsResponseTxAgesToJSON,\n    MempoolTransactionStatsResponseTxByteSizes,\n    MempoolTransactionStatsResponseTxByteSizesFromJSON,\n    MempoolTransactionStatsResponseTxByteSizesFromJSONTyped,\n    MempoolTransactionStatsResponseTxByteSizesToJSON,\n    MempoolTransactionStatsResponseTxSimpleFeeAverages,\n    MempoolTransactionStatsResponseTxSimpleFeeAveragesFromJSON,\n    MempoolTransactionStatsResponseTxSimpleFeeAveragesFromJSONTyped,\n    MempoolTransactionStatsResponseTxSimpleFeeAveragesToJSON,\n    MempoolTransactionStatsResponseTxTypeCounts,\n    MempoolTransactionStatsResponseTxTypeCountsFromJSON,\n    MempoolTransactionStatsResponseTxTypeCountsFromJSONTyped,\n    MempoolTransactionStatsResponseTxTypeCountsToJSON,\n} from './';\n\n/**\n * GET request that returns stats on mempool transactions\n * @export\n * @interface MempoolTransactionStatsResponse\n */\nexport interface MempoolTransactionStatsResponse {\n    /**\n     * \n     * @type {MempoolTransactionStatsResponseTxTypeCounts}\n     * @memberof MempoolTransactionStatsResponse\n     */\n    tx_type_counts: MempoolTransactionStatsResponseTxTypeCounts;\n    /**\n     * \n     * @type {MempoolTransactionStatsResponseTxSimpleFeeAverages}\n     * @memberof MempoolTransactionStatsResponse\n     */\n    tx_simple_fee_averages: MempoolTransactionStatsResponseTxSimpleFeeAverages;\n    /**\n     * \n     * @type {MempoolTransactionStatsResponseTxAges}\n     * @memberof MempoolTransactionStatsResponse\n     */\n    tx_ages: MempoolTransactionStatsResponseTxAges;\n    /**\n     * \n     * @type {MempoolTransactionStatsResponseTxByteSizes}\n     * @memberof MempoolTransactionStatsResponse\n     */\n    tx_byte_sizes: MempoolTransactionStatsResponseTxByteSizes;\n}\n\nexport function MempoolTransactionStatsResponseFromJSON(json: any): MempoolTransactionStatsResponse {\n    return MempoolTransactionStatsResponseFromJSONTyped(json, false);\n}\n\nexport function MempoolTransactionStatsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MempoolTransactionStatsResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'tx_type_counts': MempoolTransactionStatsResponseTxTypeCountsFromJSON(json['tx_type_counts']),\n        'tx_simple_fee_averages': MempoolTransactionStatsResponseTxSimpleFeeAveragesFromJSON(json['tx_simple_fee_averages']),\n        'tx_ages': MempoolTransactionStatsResponseTxAgesFromJSON(json['tx_ages']),\n        'tx_byte_sizes': MempoolTransactionStatsResponseTxByteSizesFromJSON(json['tx_byte_sizes']),\n    };\n}\n\nexport function MempoolTransactionStatsResponseToJSON(value?: MempoolTransactionStatsResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'tx_type_counts': MempoolTransactionStatsResponseTxTypeCountsToJSON(value.tx_type_counts),\n        'tx_simple_fee_averages': MempoolTransactionStatsResponseTxSimpleFeeAveragesToJSON(value.tx_simple_fee_averages),\n        'tx_ages': MempoolTransactionStatsResponseTxAgesToJSON(value.tx_ages),\n        'tx_byte_sizes': MempoolTransactionStatsResponseTxByteSizesToJSON(value.tx_byte_sizes),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer,\n    MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferFromJSON,\n    MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferFromJSONTyped,\n    MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferToJSON,\n} from './';\n\n/**\n * The average time (in blocks) that transactions have lived in the mempool. The start block height is simply the current chain-tip of when the attached Stacks node receives the transaction. This timing can be different across Stacks nodes / API instances due to propagation timing differences in the p2p network.\n * @export\n * @interface MempoolTransactionStatsResponseTxAges\n */\nexport interface MempoolTransactionStatsResponseTxAges {\n    /**\n     * \n     * @type {MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer}\n     * @memberof MempoolTransactionStatsResponseTxAges\n     */\n    token_transfer: MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer;\n    /**\n     * \n     * @type {MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer}\n     * @memberof MempoolTransactionStatsResponseTxAges\n     */\n    smart_contract: MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer;\n    /**\n     * \n     * @type {MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer}\n     * @memberof MempoolTransactionStatsResponseTxAges\n     */\n    contract_call: MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer;\n    /**\n     * \n     * @type {MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer}\n     * @memberof MempoolTransactionStatsResponseTxAges\n     */\n    poison_microblock: MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer;\n}\n\nexport function MempoolTransactionStatsResponseTxAgesFromJSON(json: any): MempoolTransactionStatsResponseTxAges {\n    return MempoolTransactionStatsResponseTxAgesFromJSONTyped(json, false);\n}\n\nexport function MempoolTransactionStatsResponseTxAgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): MempoolTransactionStatsResponseTxAges {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'token_transfer': MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferFromJSON(json['token_transfer']),\n        'smart_contract': MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferFromJSON(json['smart_contract']),\n        'contract_call': MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferFromJSON(json['contract_call']),\n        'poison_microblock': MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferFromJSON(json['poison_microblock']),\n    };\n}\n\nexport function MempoolTransactionStatsResponseTxAgesToJSON(value?: MempoolTransactionStatsResponseTxAges | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'token_transfer': MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferToJSON(value.token_transfer),\n        'smart_contract': MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferToJSON(value.smart_contract),\n        'contract_call': MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferToJSON(value.contract_call),\n        'poison_microblock': MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferToJSON(value.poison_microblock),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer,\n    MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferFromJSON,\n    MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferFromJSONTyped,\n    MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferToJSON,\n} from './';\n\n/**\n * The average byte size of transactions in the mempool, broken down by transaction type.\n * @export\n * @interface MempoolTransactionStatsResponseTxByteSizes\n */\nexport interface MempoolTransactionStatsResponseTxByteSizes {\n    /**\n     * \n     * @type {MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer}\n     * @memberof MempoolTransactionStatsResponseTxByteSizes\n     */\n    token_transfer: MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer;\n    /**\n     * \n     * @type {MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer}\n     * @memberof MempoolTransactionStatsResponseTxByteSizes\n     */\n    smart_contract: MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer;\n    /**\n     * \n     * @type {MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer}\n     * @memberof MempoolTransactionStatsResponseTxByteSizes\n     */\n    contract_call: MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer;\n    /**\n     * \n     * @type {MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer}\n     * @memberof MempoolTransactionStatsResponseTxByteSizes\n     */\n    poison_microblock: MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer;\n}\n\nexport function MempoolTransactionStatsResponseTxByteSizesFromJSON(json: any): MempoolTransactionStatsResponseTxByteSizes {\n    return MempoolTransactionStatsResponseTxByteSizesFromJSONTyped(json, false);\n}\n\nexport function MempoolTransactionStatsResponseTxByteSizesFromJSONTyped(json: any, ignoreDiscriminator: boolean): MempoolTransactionStatsResponseTxByteSizes {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'token_transfer': MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferFromJSON(json['token_transfer']),\n        'smart_contract': MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferFromJSON(json['smart_contract']),\n        'contract_call': MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferFromJSON(json['contract_call']),\n        'poison_microblock': MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferFromJSON(json['poison_microblock']),\n    };\n}\n\nexport function MempoolTransactionStatsResponseTxByteSizesToJSON(value?: MempoolTransactionStatsResponseTxByteSizes | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'token_transfer': MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferToJSON(value.token_transfer),\n        'smart_contract': MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferToJSON(value.smart_contract),\n        'contract_call': MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferToJSON(value.contract_call),\n        'poison_microblock': MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferToJSON(value.poison_microblock),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer,\n    MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferFromJSON,\n    MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferFromJSONTyped,\n    MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferToJSON,\n} from './';\n\n/**\n * The simple mean (average) transaction fee, broken down by transaction type. Note that this does not factor in actual execution costs. The average fee is not a reliable metric for calculating a fee for a new transaction.\n * @export\n * @interface MempoolTransactionStatsResponseTxSimpleFeeAverages\n */\nexport interface MempoolTransactionStatsResponseTxSimpleFeeAverages {\n    /**\n     * \n     * @type {MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer}\n     * @memberof MempoolTransactionStatsResponseTxSimpleFeeAverages\n     */\n    token_transfer: MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer;\n    /**\n     * \n     * @type {MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer}\n     * @memberof MempoolTransactionStatsResponseTxSimpleFeeAverages\n     */\n    smart_contract: MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer;\n    /**\n     * \n     * @type {MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer}\n     * @memberof MempoolTransactionStatsResponseTxSimpleFeeAverages\n     */\n    contract_call: MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer;\n    /**\n     * \n     * @type {MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer}\n     * @memberof MempoolTransactionStatsResponseTxSimpleFeeAverages\n     */\n    poison_microblock: MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer;\n}\n\nexport function MempoolTransactionStatsResponseTxSimpleFeeAveragesFromJSON(json: any): MempoolTransactionStatsResponseTxSimpleFeeAverages {\n    return MempoolTransactionStatsResponseTxSimpleFeeAveragesFromJSONTyped(json, false);\n}\n\nexport function MempoolTransactionStatsResponseTxSimpleFeeAveragesFromJSONTyped(json: any, ignoreDiscriminator: boolean): MempoolTransactionStatsResponseTxSimpleFeeAverages {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'token_transfer': MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferFromJSON(json['token_transfer']),\n        'smart_contract': MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferFromJSON(json['smart_contract']),\n        'contract_call': MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferFromJSON(json['contract_call']),\n        'poison_microblock': MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferFromJSON(json['poison_microblock']),\n    };\n}\n\nexport function MempoolTransactionStatsResponseTxSimpleFeeAveragesToJSON(value?: MempoolTransactionStatsResponseTxSimpleFeeAverages | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'token_transfer': MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferToJSON(value.token_transfer),\n        'smart_contract': MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferToJSON(value.smart_contract),\n        'contract_call': MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferToJSON(value.contract_call),\n        'poison_microblock': MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferToJSON(value.poison_microblock),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer\n */\nexport interface MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer {\n    /**\n     * \n     * @type {number}\n     * @memberof MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer\n     */\n    p25: number | null;\n    /**\n     * \n     * @type {number}\n     * @memberof MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer\n     */\n    p50: number | null;\n    /**\n     * \n     * @type {number}\n     * @memberof MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer\n     */\n    p75: number | null;\n    /**\n     * \n     * @type {number}\n     * @memberof MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer\n     */\n    p95: number | null;\n}\n\nexport function MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferFromJSON(json: any): MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer {\n    return MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferFromJSONTyped(json, false);\n}\n\nexport function MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferFromJSONTyped(json: any, ignoreDiscriminator: boolean): MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'p25': json['p25'],\n        'p50': json['p50'],\n        'p75': json['p75'],\n        'p95': json['p95'],\n    };\n}\n\nexport function MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferToJSON(value?: MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransfer | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'p25': value.p25,\n        'p50': value.p50,\n        'p75': value.p75,\n        'p95': value.p95,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Number of tranasction in the mempool, broken down by transaction type.\n * @export\n * @interface MempoolTransactionStatsResponseTxTypeCounts\n */\nexport interface MempoolTransactionStatsResponseTxTypeCounts {\n    /**\n     * \n     * @type {number}\n     * @memberof MempoolTransactionStatsResponseTxTypeCounts\n     */\n    token_transfer: number;\n    /**\n     * \n     * @type {number}\n     * @memberof MempoolTransactionStatsResponseTxTypeCounts\n     */\n    smart_contract: number;\n    /**\n     * \n     * @type {number}\n     * @memberof MempoolTransactionStatsResponseTxTypeCounts\n     */\n    contract_call: number;\n    /**\n     * \n     * @type {number}\n     * @memberof MempoolTransactionStatsResponseTxTypeCounts\n     */\n    poison_microblock: number;\n}\n\nexport function MempoolTransactionStatsResponseTxTypeCountsFromJSON(json: any): MempoolTransactionStatsResponseTxTypeCounts {\n    return MempoolTransactionStatsResponseTxTypeCountsFromJSONTyped(json, false);\n}\n\nexport function MempoolTransactionStatsResponseTxTypeCountsFromJSONTyped(json: any, ignoreDiscriminator: boolean): MempoolTransactionStatsResponseTxTypeCounts {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'token_transfer': json['token_transfer'],\n        'smart_contract': json['smart_contract'],\n        'contract_call': json['contract_call'],\n        'poison_microblock': json['poison_microblock'],\n    };\n}\n\nexport function MempoolTransactionStatsResponseTxTypeCountsToJSON(value?: MempoolTransactionStatsResponseTxTypeCounts | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'token_transfer': value.token_transfer,\n        'smart_contract': value.smart_contract,\n        'contract_call': value.contract_call,\n        'poison_microblock': value.poison_microblock,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * A microblock\n * @export\n * @interface Microblock\n */\nexport interface Microblock {\n    /**\n     * Set to `true` if the microblock corresponds to the canonical chain tip.\n     * @type {boolean}\n     * @memberof Microblock\n     */\n    canonical: boolean;\n    /**\n     * Set to `true` if the microblock was not orphaned in a following anchor block. Defaults to `true` if the following anchor block has not yet been created.\n     * @type {boolean}\n     * @memberof Microblock\n     */\n    microblock_canonical: boolean;\n    /**\n     * The SHA512/256 hash of this microblock.\n     * @type {string}\n     * @memberof Microblock\n     */\n    microblock_hash: string;\n    /**\n     * A hint to describe how to order a set of microblocks. Starts at 0.\n     * @type {number}\n     * @memberof Microblock\n     */\n    microblock_sequence: number;\n    /**\n     * The SHA512/256 hash of the previous signed microblock in this stream.\n     * @type {string}\n     * @memberof Microblock\n     */\n    microblock_parent_hash: string;\n    /**\n     * The anchor block height that confirmed this microblock.\n     * @type {number}\n     * @memberof Microblock\n     */\n    block_height: number;\n    /**\n     * The height of the anchor block that preceded this microblock.\n     * @type {number}\n     * @memberof Microblock\n     */\n    parent_block_height: number;\n    /**\n     * The hash of the anchor block that preceded this microblock.\n     * @type {string}\n     * @memberof Microblock\n     */\n    parent_block_hash: string;\n    /**\n     * The hash of the Bitcoin block that preceded this microblock.\n     * @type {string}\n     * @memberof Microblock\n     */\n    parent_burn_block_hash: string;\n    /**\n     * The block timestamp of the Bitcoin block that preceded this microblock.\n     * @type {number}\n     * @memberof Microblock\n     */\n    parent_burn_block_time: number;\n    /**\n     * The ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) formatted block time of the bitcoin block that preceded this microblock.\n     * @type {string}\n     * @memberof Microblock\n     */\n    parent_burn_block_time_iso: string;\n    /**\n     * The height of the Bitcoin block that preceded this microblock.\n     * @type {number}\n     * @memberof Microblock\n     */\n    parent_burn_block_height: number;\n    /**\n     * The hash of the anchor block that confirmed this microblock. This wil be empty for unanchored microblocks\n     * @type {string}\n     * @memberof Microblock\n     */\n    block_hash: string | null;\n    /**\n     * List of transactions included in the microblock\n     * @type {Array<string>}\n     * @memberof Microblock\n     */\n    txs: Array<string>;\n}\n\nexport function MicroblockFromJSON(json: any): Microblock {\n    return MicroblockFromJSONTyped(json, false);\n}\n\nexport function MicroblockFromJSONTyped(json: any, ignoreDiscriminator: boolean): Microblock {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'canonical': json['canonical'],\n        'microblock_canonical': json['microblock_canonical'],\n        'microblock_hash': json['microblock_hash'],\n        'microblock_sequence': json['microblock_sequence'],\n        'microblock_parent_hash': json['microblock_parent_hash'],\n        'block_height': json['block_height'],\n        'parent_block_height': json['parent_block_height'],\n        'parent_block_hash': json['parent_block_hash'],\n        'parent_burn_block_hash': json['parent_burn_block_hash'],\n        'parent_burn_block_time': json['parent_burn_block_time'],\n        'parent_burn_block_time_iso': json['parent_burn_block_time_iso'],\n        'parent_burn_block_height': json['parent_burn_block_height'],\n        'block_hash': json['block_hash'],\n        'txs': json['txs'],\n    };\n}\n\nexport function MicroblockToJSON(value?: Microblock | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'canonical': value.canonical,\n        'microblock_canonical': value.microblock_canonical,\n        'microblock_hash': value.microblock_hash,\n        'microblock_sequence': value.microblock_sequence,\n        'microblock_parent_hash': value.microblock_parent_hash,\n        'block_height': value.block_height,\n        'parent_block_height': value.parent_block_height,\n        'parent_block_hash': value.parent_block_hash,\n        'parent_burn_block_hash': value.parent_burn_block_hash,\n        'parent_burn_block_time': value.parent_burn_block_time,\n        'parent_burn_block_time_iso': value.parent_burn_block_time_iso,\n        'parent_burn_block_height': value.parent_burn_block_height,\n        'block_hash': value.block_hash,\n        'txs': value.txs,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    Microblock,\n    MicroblockFromJSON,\n    MicroblockFromJSONTyped,\n    MicroblockToJSON,\n} from './';\n\n/**\n * GET request that returns microblocks\n * @export\n * @interface MicroblockListResponse\n */\nexport interface MicroblockListResponse {\n    /**\n     * The number of microblocks to return\n     * @type {number}\n     * @memberof MicroblockListResponse\n     */\n    limit: number;\n    /**\n     * The number to microblocks to skip (starting at `0`)\n     * @type {number}\n     * @memberof MicroblockListResponse\n     */\n    offset: number;\n    /**\n     * The number of microblocks available\n     * @type {number}\n     * @memberof MicroblockListResponse\n     */\n    total: number;\n    /**\n     * \n     * @type {Array<Microblock>}\n     * @memberof MicroblockListResponse\n     */\n    results: Array<Microblock>;\n}\n\nexport function MicroblockListResponseFromJSON(json: any): MicroblockListResponse {\n    return MicroblockListResponseFromJSONTyped(json, false);\n}\n\nexport function MicroblockListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MicroblockListResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'limit': json['limit'],\n        'offset': json['offset'],\n        'total': json['total'],\n        'results': ((json['results'] as Array<any>).map(MicroblockFromJSON)),\n    };\n}\n\nexport function MicroblockListResponseToJSON(value?: MicroblockListResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'limit': value.limit,\n        'offset': value.offset,\n        'total': value.total,\n        'results': ((value.results as Array<any>).map(MicroblockToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * GET request that target block time for a given network\n * @export\n * @interface NetworkBlockTimeResponse\n */\nexport interface NetworkBlockTimeResponse {\n    /**\n     * \n     * @type {number}\n     * @memberof NetworkBlockTimeResponse\n     */\n    target_block_time: number;\n}\n\nexport function NetworkBlockTimeResponseFromJSON(json: any): NetworkBlockTimeResponse {\n    return NetworkBlockTimeResponseFromJSONTyped(json, false);\n}\n\nexport function NetworkBlockTimeResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): NetworkBlockTimeResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'target_block_time': json['target_block_time'],\n    };\n}\n\nexport function NetworkBlockTimeResponseToJSON(value?: NetworkBlockTimeResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'target_block_time': value.target_block_time,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    TargetBlockTime,\n    TargetBlockTimeFromJSON,\n    TargetBlockTimeFromJSONTyped,\n    TargetBlockTimeToJSON,\n} from './';\n\n/**\n * GET request that returns network target block times\n * @export\n * @interface NetworkBlockTimesResponse\n */\nexport interface NetworkBlockTimesResponse {\n    /**\n     * \n     * @type {TargetBlockTime}\n     * @memberof NetworkBlockTimesResponse\n     */\n    mainnet: TargetBlockTime;\n    /**\n     * \n     * @type {TargetBlockTime}\n     * @memberof NetworkBlockTimesResponse\n     */\n    testnet: TargetBlockTime;\n}\n\nexport function NetworkBlockTimesResponseFromJSON(json: any): NetworkBlockTimesResponse {\n    return NetworkBlockTimesResponseFromJSONTyped(json, false);\n}\n\nexport function NetworkBlockTimesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): NetworkBlockTimesResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'mainnet': TargetBlockTimeFromJSON(json['mainnet']),\n        'testnet': TargetBlockTimeFromJSON(json['testnet']),\n    };\n}\n\nexport function NetworkBlockTimesResponseToJSON(value?: NetworkBlockTimesResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'mainnet': TargetBlockTimeToJSON(value.mainnet),\n        'testnet': TargetBlockTimeToJSON(value.testnet),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    RosettaNetworkListResponseSubNetworkIdentifier,\n    RosettaNetworkListResponseSubNetworkIdentifierFromJSON,\n    RosettaNetworkListResponseSubNetworkIdentifierFromJSONTyped,\n    RosettaNetworkListResponseSubNetworkIdentifierToJSON,\n} from './';\n\n/**\n * The network_identifier specifies which network a particular object is associated with.\n * @export\n * @interface NetworkIdentifier\n */\nexport interface NetworkIdentifier {\n    /**\n     * Blockchain name\n     * @type {string}\n     * @memberof NetworkIdentifier\n     */\n    blockchain: string;\n    /**\n     * If a blockchain has a specific chain-id or network identifier, it should go in this field. It is up to the client to determine which network-specific identifier is mainnet or testnet.\n     * @type {string}\n     * @memberof NetworkIdentifier\n     */\n    network: string;\n    /**\n     * \n     * @type {RosettaNetworkListResponseSubNetworkIdentifier}\n     * @memberof NetworkIdentifier\n     */\n    sub_network_identifier?: RosettaNetworkListResponseSubNetworkIdentifier;\n}\n\nexport function NetworkIdentifierFromJSON(json: any): NetworkIdentifier {\n    return NetworkIdentifierFromJSONTyped(json, false);\n}\n\nexport function NetworkIdentifierFromJSONTyped(json: any, ignoreDiscriminator: boolean): NetworkIdentifier {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'blockchain': json['blockchain'],\n        'network': json['network'],\n        'sub_network_identifier': !exists(json, 'sub_network_identifier') ? undefined : RosettaNetworkListResponseSubNetworkIdentifierFromJSON(json['sub_network_identifier']),\n    };\n}\n\nexport function NetworkIdentifierToJSON(value?: NetworkIdentifier | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'blockchain': value.blockchain,\n        'network': value.network,\n        'sub_network_identifier': RosettaNetworkListResponseSubNetworkIdentifierToJSON(value.sub_network_identifier),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    AddressNftListResponseValue,\n    AddressNftListResponseValueFromJSON,\n    AddressNftListResponseValueFromJSONTyped,\n    AddressNftListResponseValueToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface NftEvent\n */\nexport interface NftEvent {\n    /**\n     * \n     * @type {string}\n     * @memberof NftEvent\n     */\n    sender?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof NftEvent\n     */\n    recipient?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof NftEvent\n     */\n    asset_identifier: string;\n    /**\n     * \n     * @type {string}\n     * @memberof NftEvent\n     */\n    asset_event_type: string;\n    /**\n     * \n     * @type {AddressNftListResponseValue}\n     * @memberof NftEvent\n     */\n    value: AddressNftListResponseValue;\n    /**\n     * \n     * @type {string}\n     * @memberof NftEvent\n     */\n    tx_id: string;\n    /**\n     * \n     * @type {number}\n     * @memberof NftEvent\n     */\n    tx_index: number;\n    /**\n     * \n     * @type {number}\n     * @memberof NftEvent\n     */\n    block_height: number;\n    /**\n     * \n     * @type {number}\n     * @memberof NftEvent\n     */\n    event_index: number;\n}\n\nexport function NftEventFromJSON(json: any): NftEvent {\n    return NftEventFromJSONTyped(json, false);\n}\n\nexport function NftEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): NftEvent {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'sender': !exists(json, 'sender') ? undefined : json['sender'],\n        'recipient': !exists(json, 'recipient') ? undefined : json['recipient'],\n        'asset_identifier': json['asset_identifier'],\n        'asset_event_type': json['asset_event_type'],\n        'value': AddressNftListResponseValueFromJSON(json['value']),\n        'tx_id': json['tx_id'],\n        'tx_index': json['tx_index'],\n        'block_height': json['block_height'],\n        'event_index': json['event_index'],\n    };\n}\n\nexport function NftEventToJSON(value?: NftEvent | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'sender': value.sender,\n        'recipient': value.recipient,\n        'asset_identifier': value.asset_identifier,\n        'asset_event_type': value.asset_event_type,\n        'value': AddressNftListResponseValueToJSON(value.value),\n        'tx_id': value.tx_id,\n        'tx_index': value.tx_index,\n        'block_height': value.block_height,\n        'event_index': value.event_index,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * List of Non-Fungible Token history events\n * @export\n * @interface NonFungibleTokenHistoryEventList\n */\nexport interface NonFungibleTokenHistoryEventList {\n    /**\n     * The number of events to return\n     * @type {number}\n     * @memberof NonFungibleTokenHistoryEventList\n     */\n    limit: number;\n    /**\n     * The number to events to skip (starting at `0`)\n     * @type {number}\n     * @memberof NonFungibleTokenHistoryEventList\n     */\n    offset: number;\n    /**\n     * The number of events available\n     * @type {number}\n     * @memberof NonFungibleTokenHistoryEventList\n     */\n    total: number;\n    /**\n     * \n     * @type {Array<object>}\n     * @memberof NonFungibleTokenHistoryEventList\n     */\n    results: Array<object>;\n}\n\nexport function NonFungibleTokenHistoryEventListFromJSON(json: any): NonFungibleTokenHistoryEventList {\n    return NonFungibleTokenHistoryEventListFromJSONTyped(json, false);\n}\n\nexport function NonFungibleTokenHistoryEventListFromJSONTyped(json: any, ignoreDiscriminator: boolean): NonFungibleTokenHistoryEventList {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'limit': json['limit'],\n        'offset': json['offset'],\n        'total': json['total'],\n        'results': json['results'],\n    };\n}\n\nexport function NonFungibleTokenHistoryEventListToJSON(value?: NonFungibleTokenHistoryEventList | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'limit': value.limit,\n        'offset': value.offset,\n        'total': value.total,\n        'results': value.results,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * List of Non-Fungible Token holdings\n * @export\n * @interface NonFungibleTokenHoldingsList\n */\nexport interface NonFungibleTokenHoldingsList {\n    /**\n     * The number of Non-Fungible Token holdings to return\n     * @type {number}\n     * @memberof NonFungibleTokenHoldingsList\n     */\n    limit: number;\n    /**\n     * The number to Non-Fungible Token holdings to skip (starting at `0`)\n     * @type {number}\n     * @memberof NonFungibleTokenHoldingsList\n     */\n    offset: number;\n    /**\n     * The number of Non-Fungible Token holdings available\n     * @type {number}\n     * @memberof NonFungibleTokenHoldingsList\n     */\n    total: number;\n    /**\n     * \n     * @type {Array<object>}\n     * @memberof NonFungibleTokenHoldingsList\n     */\n    results: Array<object>;\n}\n\nexport function NonFungibleTokenHoldingsListFromJSON(json: any): NonFungibleTokenHoldingsList {\n    return NonFungibleTokenHoldingsListFromJSONTyped(json, false);\n}\n\nexport function NonFungibleTokenHoldingsListFromJSONTyped(json: any, ignoreDiscriminator: boolean): NonFungibleTokenHoldingsList {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'limit': json['limit'],\n        'offset': json['offset'],\n        'total': json['total'],\n        'results': json['results'],\n    };\n}\n\nexport function NonFungibleTokenHoldingsListToJSON(value?: NonFungibleTokenHoldingsList | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'limit': value.limit,\n        'offset': value.offset,\n        'total': value.total,\n        'results': value.results,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface NonFungibleTokenMetadata\n */\nexport interface NonFungibleTokenMetadata {\n    /**\n     * An optional string that is a valid URI which resolves to this token's metadata. Can be empty.\n     * @type {string}\n     * @memberof NonFungibleTokenMetadata\n     */\n    token_uri: string;\n    /**\n     * Identifies the asset to which this token represents\n     * @type {string}\n     * @memberof NonFungibleTokenMetadata\n     */\n    name: string;\n    /**\n     * Describes the asset to which this token represents\n     * @type {string}\n     * @memberof NonFungibleTokenMetadata\n     */\n    description: string;\n    /**\n     * A URI pointing to a resource with mime type image/* representing the asset to which this token represents. The API may provide a URI to a cached resource, dependending on configuration. Otherwise, this can be the same value as the canonical image URI.\n     * @type {string}\n     * @memberof NonFungibleTokenMetadata\n     */\n    image_uri: string;\n    /**\n     * The original image URI specified by the contract. A URI pointing to a resource with mime type image/* representing the asset to which this token represents. Consider making any images at a width between 320 and 1080 pixels and aspect ratio between 1.91:1 and 4:5 inclusive.\n     * @type {string}\n     * @memberof NonFungibleTokenMetadata\n     */\n    image_canonical_uri: string;\n    /**\n     * Tx id that deployed the contract\n     * @type {string}\n     * @memberof NonFungibleTokenMetadata\n     */\n    tx_id: string;\n    /**\n     * principle that deployed the contract\n     * @type {string}\n     * @memberof NonFungibleTokenMetadata\n     */\n    sender_address: string;\n}\n\nexport function NonFungibleTokenMetadataFromJSON(json: any): NonFungibleTokenMetadata {\n    return NonFungibleTokenMetadataFromJSONTyped(json, false);\n}\n\nexport function NonFungibleTokenMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): NonFungibleTokenMetadata {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'token_uri': json['token_uri'],\n        'name': json['name'],\n        'description': json['description'],\n        'image_uri': json['image_uri'],\n        'image_canonical_uri': json['image_canonical_uri'],\n        'tx_id': json['tx_id'],\n        'sender_address': json['sender_address'],\n    };\n}\n\nexport function NonFungibleTokenMetadataToJSON(value?: NonFungibleTokenMetadata | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'token_uri': value.token_uri,\n        'name': value.name,\n        'description': value.description,\n        'image_uri': value.image_uri,\n        'image_canonical_uri': value.image_canonical_uri,\n        'tx_id': value.tx_id,\n        'sender_address': value.sender_address,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * List of Non-Fungible Token mint events for an asset identifier\n * @export\n * @interface NonFungibleTokenMintList\n */\nexport interface NonFungibleTokenMintList {\n    /**\n     * The number of mint events to return\n     * @type {number}\n     * @memberof NonFungibleTokenMintList\n     */\n    limit: number;\n    /**\n     * The number to mint events to skip (starting at `0`)\n     * @type {number}\n     * @memberof NonFungibleTokenMintList\n     */\n    offset: number;\n    /**\n     * The number of mint events available\n     * @type {number}\n     * @memberof NonFungibleTokenMintList\n     */\n    total: number;\n    /**\n     * \n     * @type {Array<object>}\n     * @memberof NonFungibleTokenMintList\n     */\n    results: Array<object>;\n}\n\nexport function NonFungibleTokenMintListFromJSON(json: any): NonFungibleTokenMintList {\n    return NonFungibleTokenMintListFromJSONTyped(json, false);\n}\n\nexport function NonFungibleTokenMintListFromJSONTyped(json: any, ignoreDiscriminator: boolean): NonFungibleTokenMintList {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'limit': json['limit'],\n        'offset': json['offset'],\n        'total': json['total'],\n        'results': json['results'],\n    };\n}\n\nexport function NonFungibleTokenMintListToJSON(value?: NonFungibleTokenMintList | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'limit': value.limit,\n        'offset': value.offset,\n        'total': value.total,\n        'results': value.results,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    NonFungibleTokenMetadata,\n    NonFungibleTokenMetadataFromJSON,\n    NonFungibleTokenMetadataFromJSONTyped,\n    NonFungibleTokenMetadataToJSON,\n} from './';\n\n/**\n * List of non fungible tokens metadata\n * @export\n * @interface NonFungibleTokensMetadataList\n */\nexport interface NonFungibleTokensMetadataList {\n    /**\n     * The number of tokens metadata to return\n     * @type {number}\n     * @memberof NonFungibleTokensMetadataList\n     */\n    limit: number;\n    /**\n     * The number to tokens metadata to skip (starting at `0`)\n     * @type {number}\n     * @memberof NonFungibleTokensMetadataList\n     */\n    offset: number;\n    /**\n     * The number of tokens metadata available\n     * @type {number}\n     * @memberof NonFungibleTokensMetadataList\n     */\n    total: number;\n    /**\n     * \n     * @type {Array<NonFungibleTokenMetadata>}\n     * @memberof NonFungibleTokensMetadataList\n     */\n    results: Array<NonFungibleTokenMetadata>;\n}\n\nexport function NonFungibleTokensMetadataListFromJSON(json: any): NonFungibleTokensMetadataList {\n    return NonFungibleTokensMetadataListFromJSONTyped(json, false);\n}\n\nexport function NonFungibleTokensMetadataListFromJSONTyped(json: any, ignoreDiscriminator: boolean): NonFungibleTokensMetadataList {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'limit': json['limit'],\n        'offset': json['offset'],\n        'total': json['total'],\n        'results': ((json['results'] as Array<any>).map(NonFungibleTokenMetadataFromJSON)),\n    };\n}\n\nexport function NonFungibleTokensMetadataListToJSON(value?: NonFungibleTokensMetadataList | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'limit': value.limit,\n        'offset': value.offset,\n        'total': value.total,\n        'results': ((value.results as Array<any>).map(NonFungibleTokenMetadataToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * The transaction_identifier uniquely identifies a transaction in a particular network and block or in the mempool.\n * @export\n * @interface OtherTransactionIdentifier\n */\nexport interface OtherTransactionIdentifier {\n    /**\n     * Any transactions that are attributable only to a block (ex: a block event) should use the hash of the block as the identifier.\n     * @type {string}\n     * @memberof OtherTransactionIdentifier\n     */\n    hash: string;\n}\n\nexport function OtherTransactionIdentifierFromJSON(json: any): OtherTransactionIdentifier {\n    return OtherTransactionIdentifierFromJSONTyped(json, false);\n}\n\nexport function OtherTransactionIdentifierFromJSONTyped(json: any, ignoreDiscriminator: boolean): OtherTransactionIdentifier {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'hash': json['hash'],\n    };\n}\n\nexport function OtherTransactionIdentifierToJSON(value?: OtherTransactionIdentifier | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'hash': value.hash,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * GET request that returns transactions\n * @export\n * @interface PostCoreNodeTransactionsError\n */\nexport interface PostCoreNodeTransactionsError {\n    /**\n     * The error\n     * @type {string}\n     * @memberof PostCoreNodeTransactionsError\n     */\n    error: string;\n    /**\n     * The reason for the error\n     * @type {string}\n     * @memberof PostCoreNodeTransactionsError\n     */\n    reason: string;\n    /**\n     * More details about the reason\n     * @type {object}\n     * @memberof PostCoreNodeTransactionsError\n     */\n    reason_data: object;\n    /**\n     * The relevant transaction id\n     * @type {string}\n     * @memberof PostCoreNodeTransactionsError\n     */\n    txid: string;\n}\n\nexport function PostCoreNodeTransactionsErrorFromJSON(json: any): PostCoreNodeTransactionsError {\n    return PostCoreNodeTransactionsErrorFromJSONTyped(json, false);\n}\n\nexport function PostCoreNodeTransactionsErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostCoreNodeTransactionsError {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'error': json['error'],\n        'reason': json['reason'],\n        'reason_data': json['reason_data'],\n        'txid': json['txid'],\n    };\n}\n\nexport function PostCoreNodeTransactionsErrorToJSON(value?: PostCoreNodeTransactionsError | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'error': value.error,\n        'reason': value.reason,\n        'reason_data': value.reason_data,\n        'txid': value.txid,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Describes representation of a Type-0 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-0-transferring-an-asset\n * @export\n * @interface ReadOnlyFunctionArgs\n */\nexport interface ReadOnlyFunctionArgs {\n    /**\n     * The simulated tx-sender\n     * @type {string}\n     * @memberof ReadOnlyFunctionArgs\n     */\n    sender: string;\n    /**\n     * An array of hex serialized Clarity values\n     * @type {Array<string>}\n     * @memberof ReadOnlyFunctionArgs\n     */\n    arguments: Array<string>;\n}\n\nexport function ReadOnlyFunctionArgsFromJSON(json: any): ReadOnlyFunctionArgs {\n    return ReadOnlyFunctionArgsFromJSONTyped(json, false);\n}\n\nexport function ReadOnlyFunctionArgsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReadOnlyFunctionArgs {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'sender': json['sender'],\n        'arguments': json['arguments'],\n    };\n}\n\nexport function ReadOnlyFunctionArgsToJSON(value?: ReadOnlyFunctionArgs | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'sender': value.sender,\n        'arguments': value.arguments,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * GET request to get contract source\n * @export\n * @interface ReadOnlyFunctionSuccessResponse\n */\nexport interface ReadOnlyFunctionSuccessResponse {\n    /**\n     * \n     * @type {boolean}\n     * @memberof ReadOnlyFunctionSuccessResponse\n     */\n    okay: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof ReadOnlyFunctionSuccessResponse\n     */\n    result?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ReadOnlyFunctionSuccessResponse\n     */\n    cause?: string;\n}\n\nexport function ReadOnlyFunctionSuccessResponseFromJSON(json: any): ReadOnlyFunctionSuccessResponse {\n    return ReadOnlyFunctionSuccessResponseFromJSONTyped(json, false);\n}\n\nexport function ReadOnlyFunctionSuccessResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReadOnlyFunctionSuccessResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'okay': json['okay'],\n        'result': !exists(json, 'result') ? undefined : json['result'],\n        'cause': !exists(json, 'cause') ? undefined : json['cause'],\n    };\n}\n\nexport function ReadOnlyFunctionSuccessResponseToJSON(value?: ReadOnlyFunctionSuccessResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'okay': value.okay,\n        'result': value.result,\n        'cause': value.cause,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    RosettaSubAccount,\n    RosettaSubAccountFromJSON,\n    RosettaSubAccountFromJSONTyped,\n    RosettaSubAccountToJSON,\n} from './';\n\n/**\n * The account_identifier uniquely identifies an account within a network. All fields in the account_identifier are utilized to determine this uniqueness (including the metadata field, if populated).\n * @export\n * @interface RosettaAccount\n */\nexport interface RosettaAccount {\n    /**\n     * The address may be a cryptographic public key (or some encoding of it) or a provided username.\n     * @type {string}\n     * @memberof RosettaAccount\n     */\n    address: string;\n    /**\n     * \n     * @type {RosettaSubAccount}\n     * @memberof RosettaAccount\n     */\n    sub_account?: RosettaSubAccount;\n    /**\n     * Blockchains that utilize a username model (where the address is not a derivative of a cryptographic public key) should specify the public key(s) owned by the address in metadata.\n     * @type {object}\n     * @memberof RosettaAccount\n     */\n    metadata?: object;\n}\n\nexport function RosettaAccountFromJSON(json: any): RosettaAccount {\n    return RosettaAccountFromJSONTyped(json, false);\n}\n\nexport function RosettaAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaAccount {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'address': json['address'],\n        'sub_account': !exists(json, 'sub_account') ? undefined : RosettaSubAccountFromJSON(json['sub_account']),\n        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\n\nexport function RosettaAccountToJSON(value?: RosettaAccount | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'address': value.address,\n        'sub_account': RosettaSubAccountToJSON(value.sub_account),\n        'metadata': value.metadata,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    NetworkIdentifier,\n    NetworkIdentifierFromJSON,\n    NetworkIdentifierFromJSONTyped,\n    NetworkIdentifierToJSON,\n    RosettaAccount,\n    RosettaAccountFromJSON,\n    RosettaAccountFromJSONTyped,\n    RosettaAccountToJSON,\n} from './';\n\n/**\n * An AccountBalanceRequest is utilized to make a balance request on the /account/balance endpoint. If the block_identifier is populated, a historical balance query should be performed.\n * @export\n * @interface RosettaAccountBalanceRequest\n */\nexport interface RosettaAccountBalanceRequest {\n    /**\n     * \n     * @type {NetworkIdentifier}\n     * @memberof RosettaAccountBalanceRequest\n     */\n    network_identifier: NetworkIdentifier;\n    /**\n     * \n     * @type {RosettaAccount}\n     * @memberof RosettaAccountBalanceRequest\n     */\n    account_identifier: RosettaAccount;\n    /**\n     * When fetching data by BlockIdentifier, it may be possible to only specify the index or hash. If neither property is specified, it is assumed that the client is making a request at the current block.\n     * @type {object}\n     * @memberof RosettaAccountBalanceRequest\n     */\n    block_identifier?: object;\n}\n\nexport function RosettaAccountBalanceRequestFromJSON(json: any): RosettaAccountBalanceRequest {\n    return RosettaAccountBalanceRequestFromJSONTyped(json, false);\n}\n\nexport function RosettaAccountBalanceRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaAccountBalanceRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierFromJSON(json['network_identifier']),\n        'account_identifier': RosettaAccountFromJSON(json['account_identifier']),\n        'block_identifier': !exists(json, 'block_identifier') ? undefined : json['block_identifier'],\n    };\n}\n\nexport function RosettaAccountBalanceRequestToJSON(value?: RosettaAccountBalanceRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierToJSON(value.network_identifier),\n        'account_identifier': RosettaAccountToJSON(value.account_identifier),\n        'block_identifier': value.block_identifier,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    RosettaAccountBalanceResponseMetadata,\n    RosettaAccountBalanceResponseMetadataFromJSON,\n    RosettaAccountBalanceResponseMetadataFromJSONTyped,\n    RosettaAccountBalanceResponseMetadataToJSON,\n    RosettaAmount,\n    RosettaAmountFromJSON,\n    RosettaAmountFromJSONTyped,\n    RosettaAmountToJSON,\n    RosettaCoin,\n    RosettaCoinFromJSON,\n    RosettaCoinFromJSONTyped,\n    RosettaCoinToJSON,\n} from './';\n\n/**\n * An AccountBalanceResponse is returned on the /account/balance endpoint. If an account has a balance for each AccountIdentifier describing it (ex: an ERC-20 token balance on a few smart contracts), an account balance request must be made with each AccountIdentifier.\n * @export\n * @interface RosettaAccountBalanceResponse\n */\nexport interface RosettaAccountBalanceResponse {\n    /**\n     * The block_identifier uniquely identifies a block in a particular network.\n     * @type {object}\n     * @memberof RosettaAccountBalanceResponse\n     */\n    block_identifier: object | null;\n    /**\n     * A single account balance may have multiple currencies\n     * @type {Array<RosettaAmount>}\n     * @memberof RosettaAccountBalanceResponse\n     */\n    balances: Array<RosettaAmount>;\n    /**\n     * If a blockchain is UTXO-based, all unspent Coins owned by an account_identifier should be returned alongside the balance. It is highly recommended to populate this field so that users of the Rosetta API implementation don't need to maintain their own indexer to track their UTXOs.\n     * @type {Array<RosettaCoin>}\n     * @memberof RosettaAccountBalanceResponse\n     */\n    coins?: Array<RosettaCoin>;\n    /**\n     * \n     * @type {RosettaAccountBalanceResponseMetadata}\n     * @memberof RosettaAccountBalanceResponse\n     */\n    metadata?: RosettaAccountBalanceResponseMetadata;\n}\n\nexport function RosettaAccountBalanceResponseFromJSON(json: any): RosettaAccountBalanceResponse {\n    return RosettaAccountBalanceResponseFromJSONTyped(json, false);\n}\n\nexport function RosettaAccountBalanceResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaAccountBalanceResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'block_identifier': json['block_identifier'],\n        'balances': ((json['balances'] as Array<any>).map(RosettaAmountFromJSON)),\n        'coins': !exists(json, 'coins') ? undefined : ((json['coins'] as Array<any>).map(RosettaCoinFromJSON)),\n        'metadata': !exists(json, 'metadata') ? undefined : RosettaAccountBalanceResponseMetadataFromJSON(json['metadata']),\n    };\n}\n\nexport function RosettaAccountBalanceResponseToJSON(value?: RosettaAccountBalanceResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'block_identifier': value.block_identifier,\n        'balances': ((value.balances as Array<any>).map(RosettaAmountToJSON)),\n        'coins': value.coins === undefined ? undefined : ((value.coins as Array<any>).map(RosettaCoinToJSON)),\n        'metadata': RosettaAccountBalanceResponseMetadataToJSON(value.metadata),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * CoinIdentifier uniquely identifies a Coin.\n * @export\n * @interface RosettaAccountBalanceResponseCoinIdentifier\n */\nexport interface RosettaAccountBalanceResponseCoinIdentifier {\n    /**\n     * Identifier should be populated with a globally unique identifier of a Coin. In Bitcoin, this identifier would be transaction_hash:index.\n     * @type {string}\n     * @memberof RosettaAccountBalanceResponseCoinIdentifier\n     */\n    identifier: string;\n}\n\nexport function RosettaAccountBalanceResponseCoinIdentifierFromJSON(json: any): RosettaAccountBalanceResponseCoinIdentifier {\n    return RosettaAccountBalanceResponseCoinIdentifierFromJSONTyped(json, false);\n}\n\nexport function RosettaAccountBalanceResponseCoinIdentifierFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaAccountBalanceResponseCoinIdentifier {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'identifier': json['identifier'],\n    };\n}\n\nexport function RosettaAccountBalanceResponseCoinIdentifierToJSON(value?: RosettaAccountBalanceResponseCoinIdentifier | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'identifier': value.identifier,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Account-based blockchains that utilize a nonce or sequence number should include that number in the metadata. This number could be unique to the identifier or global across the account address.\n * @export\n * @interface RosettaAccountBalanceResponseMetadata\n */\nexport interface RosettaAccountBalanceResponseMetadata {\n    /**\n     * \n     * @type {number}\n     * @memberof RosettaAccountBalanceResponseMetadata\n     */\n    sequence_number: number;\n}\n\nexport function RosettaAccountBalanceResponseMetadataFromJSON(json: any): RosettaAccountBalanceResponseMetadata {\n    return RosettaAccountBalanceResponseMetadataFromJSONTyped(json, false);\n}\n\nexport function RosettaAccountBalanceResponseMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaAccountBalanceResponseMetadata {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'sequence_number': json['sequence_number'],\n    };\n}\n\nexport function RosettaAccountBalanceResponseMetadataToJSON(value?: RosettaAccountBalanceResponseMetadata | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'sequence_number': value.sequence_number,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    RosettaSubAccount,\n    RosettaSubAccountFromJSON,\n    RosettaSubAccountFromJSONTyped,\n    RosettaSubAccountToJSON,\n} from './';\n\n/**\n * The account_identifier uniquely identifies an account within a network. All fields in the account_identifier are utilized to determine this uniqueness (including the metadata field, if populated).\n * @export\n * @interface RosettaAccountIdentifier\n */\nexport interface RosettaAccountIdentifier {\n    /**\n     * The address may be a cryptographic public key (or some encoding of it) or a provided username.\n     * @type {string}\n     * @memberof RosettaAccountIdentifier\n     */\n    address: string;\n    /**\n     * \n     * @type {RosettaSubAccount}\n     * @memberof RosettaAccountIdentifier\n     */\n    sub_account?: RosettaSubAccount;\n    /**\n     * Blockchains that utilize a username model (where the address is not a derivative of a cryptographic public key) should specify the public key(s) owned by the address in metadata.\n     * @type {object}\n     * @memberof RosettaAccountIdentifier\n     */\n    metadata?: object;\n}\n\nexport function RosettaAccountIdentifierFromJSON(json: any): RosettaAccountIdentifier {\n    return RosettaAccountIdentifierFromJSONTyped(json, false);\n}\n\nexport function RosettaAccountIdentifierFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaAccountIdentifier {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'address': json['address'],\n        'sub_account': !exists(json, 'sub_account') ? undefined : RosettaSubAccountFromJSON(json['sub_account']),\n        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\n\nexport function RosettaAccountIdentifierToJSON(value?: RosettaAccountIdentifier | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'address': value.address,\n        'sub_account': RosettaSubAccountToJSON(value.sub_account),\n        'metadata': value.metadata,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    RosettaCurrency,\n    RosettaCurrencyFromJSON,\n    RosettaCurrencyFromJSONTyped,\n    RosettaCurrencyToJSON,\n} from './';\n\n/**\n * Amount is some Value of a Currency. It is considered invalid to specify a Value without a Currency.\n * @export\n * @interface RosettaAmount\n */\nexport interface RosettaAmount {\n    /**\n     * Value of the transaction in atomic units represented as an arbitrary-sized signed integer. For example, 1 BTC would be represented by a value of 100000000.\n     * @type {string}\n     * @memberof RosettaAmount\n     */\n    value: string;\n    /**\n     * \n     * @type {RosettaCurrency}\n     * @memberof RosettaAmount\n     */\n    currency: RosettaCurrency;\n    /**\n     * \n     * @type {object}\n     * @memberof RosettaAmount\n     */\n    metadata?: object;\n}\n\nexport function RosettaAmountFromJSON(json: any): RosettaAmount {\n    return RosettaAmountFromJSONTyped(json, false);\n}\n\nexport function RosettaAmountFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaAmount {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': json['value'],\n        'currency': RosettaCurrencyFromJSON(json['currency']),\n        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\n\nexport function RosettaAmountToJSON(value?: RosettaAmount | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'value': value.value,\n        'currency': RosettaCurrencyToJSON(value.currency),\n        'metadata': value.metadata,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    RosettaBlockMetadata1,\n    RosettaBlockMetadata1FromJSON,\n    RosettaBlockMetadata1FromJSONTyped,\n    RosettaBlockMetadata1ToJSON,\n    RosettaParentBlockIdentifier,\n    RosettaParentBlockIdentifierFromJSON,\n    RosettaParentBlockIdentifierFromJSONTyped,\n    RosettaParentBlockIdentifierToJSON,\n    RosettaTransaction,\n    RosettaTransactionFromJSON,\n    RosettaTransactionFromJSONTyped,\n    RosettaTransactionToJSON,\n} from './';\n\n/**\n * Blocks contain an array of Transactions that occurred at a particular BlockIdentifier. A hard requirement for blocks returned by Rosetta implementations is that they MUST be inalterable: once a client has requested and received a block identified by a specific BlockIndentifier, all future calls for that same BlockIdentifier must return the same block contents.\n * @export\n * @interface RosettaBlock\n */\nexport interface RosettaBlock {\n    /**\n     * The block_identifier uniquely identifies a block in a particular network.\n     * @type {object}\n     * @memberof RosettaBlock\n     */\n    block_identifier: object | null;\n    /**\n     * \n     * @type {RosettaParentBlockIdentifier}\n     * @memberof RosettaBlock\n     */\n    parent_block_identifier: RosettaParentBlockIdentifier;\n    /**\n     * The timestamp of the block in milliseconds since the Unix Epoch. The timestamp is stored in milliseconds because some blockchains produce blocks more often than once a second.\n     * @type {number}\n     * @memberof RosettaBlock\n     */\n    timestamp: number;\n    /**\n     * All the transactions in the block\n     * @type {Array<RosettaTransaction>}\n     * @memberof RosettaBlock\n     */\n    transactions: Array<RosettaTransaction>;\n    /**\n     * \n     * @type {RosettaBlockMetadata1}\n     * @memberof RosettaBlock\n     */\n    metadata?: RosettaBlockMetadata1;\n}\n\nexport function RosettaBlockFromJSON(json: any): RosettaBlock {\n    return RosettaBlockFromJSONTyped(json, false);\n}\n\nexport function RosettaBlockFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaBlock {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'block_identifier': json['block_identifier'],\n        'parent_block_identifier': RosettaParentBlockIdentifierFromJSON(json['parent_block_identifier']),\n        'timestamp': json['timestamp'],\n        'transactions': ((json['transactions'] as Array<any>).map(RosettaTransactionFromJSON)),\n        'metadata': !exists(json, 'metadata') ? undefined : RosettaBlockMetadata1FromJSON(json['metadata']),\n    };\n}\n\nexport function RosettaBlockToJSON(value?: RosettaBlock | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'block_identifier': value.block_identifier,\n        'parent_block_identifier': RosettaParentBlockIdentifierToJSON(value.parent_block_identifier),\n        'timestamp': value.timestamp,\n        'transactions': ((value.transactions as Array<any>).map(RosettaTransactionToJSON)),\n        'metadata': RosettaBlockMetadata1ToJSON(value.metadata),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Transactions that are related to other transactions (like a cross-shard transaction) should include the tranaction_identifier of these transactions in the metadata.\n * @export\n * @interface RosettaBlockMetadata\n */\nexport interface RosettaBlockMetadata {\n    /**\n     * STX token transfer memo.\n     * @type {string}\n     * @memberof RosettaBlockMetadata\n     */\n    memo?: string;\n    /**\n     * The Size\n     * @type {number}\n     * @memberof RosettaBlockMetadata\n     */\n    size?: number;\n    /**\n     * The locktime\n     * @type {number}\n     * @memberof RosettaBlockMetadata\n     */\n    lockTime?: number;\n}\n\nexport function RosettaBlockMetadataFromJSON(json: any): RosettaBlockMetadata {\n    return RosettaBlockMetadataFromJSONTyped(json, false);\n}\n\nexport function RosettaBlockMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaBlockMetadata {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'memo': !exists(json, 'memo') ? undefined : json['memo'],\n        'size': !exists(json, 'size') ? undefined : json['size'],\n        'lockTime': !exists(json, 'lockTime') ? undefined : json['lockTime'],\n    };\n}\n\nexport function RosettaBlockMetadataToJSON(value?: RosettaBlockMetadata | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'memo': value.memo,\n        'size': value.size,\n        'lockTime': value.lockTime,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * meta data\n * @export\n * @interface RosettaBlockMetadata1\n */\nexport interface RosettaBlockMetadata1 {\n    /**\n     * \n     * @type {string}\n     * @memberof RosettaBlockMetadata1\n     */\n    transactions_root: string;\n    /**\n     * \n     * @type {string}\n     * @memberof RosettaBlockMetadata1\n     */\n    difficulty: string;\n}\n\nexport function RosettaBlockMetadata1FromJSON(json: any): RosettaBlockMetadata1 {\n    return RosettaBlockMetadata1FromJSONTyped(json, false);\n}\n\nexport function RosettaBlockMetadata1FromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaBlockMetadata1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'transactions_root': json['transactions_root'],\n        'difficulty': json['difficulty'],\n    };\n}\n\nexport function RosettaBlockMetadata1ToJSON(value?: RosettaBlockMetadata1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'transactions_root': value.transactions_root,\n        'difficulty': value.difficulty,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    NetworkIdentifier,\n    NetworkIdentifierFromJSON,\n    NetworkIdentifierFromJSONTyped,\n    NetworkIdentifierToJSON,\n} from './';\n\n/**\n * A BlockRequest is utilized to make a block request on the /block endpoint.\n * @export\n * @interface RosettaBlockRequest\n */\nexport interface RosettaBlockRequest {\n    /**\n     * \n     * @type {NetworkIdentifier}\n     * @memberof RosettaBlockRequest\n     */\n    network_identifier: NetworkIdentifier;\n    /**\n     * When fetching data by BlockIdentifier, it may be possible to only specify the index or hash. If neither property is specified, it is assumed that the client is making a request at the current block.\n     * @type {object}\n     * @memberof RosettaBlockRequest\n     */\n    block_identifier: object;\n}\n\nexport function RosettaBlockRequestFromJSON(json: any): RosettaBlockRequest {\n    return RosettaBlockRequestFromJSONTyped(json, false);\n}\n\nexport function RosettaBlockRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaBlockRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierFromJSON(json['network_identifier']),\n        'block_identifier': json['block_identifier'],\n    };\n}\n\nexport function RosettaBlockRequestToJSON(value?: RosettaBlockRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierToJSON(value.network_identifier),\n        'block_identifier': value.block_identifier,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    OtherTransactionIdentifier,\n    OtherTransactionIdentifierFromJSON,\n    OtherTransactionIdentifierFromJSONTyped,\n    OtherTransactionIdentifierToJSON,\n    RosettaBlock,\n    RosettaBlockFromJSON,\n    RosettaBlockFromJSONTyped,\n    RosettaBlockToJSON,\n} from './';\n\n/**\n * A BlockResponse includes a fully-populated block or a partially-populated block with a list of other transactions to fetch (other_transactions). As a result of the consensus algorithm of some blockchains, blocks can be omitted (i.e. certain block indexes can be skipped). If a query for one of these omitted indexes is made, the response should not include a Block object. It is VERY important to note that blocks MUST still form a canonical, connected chain of blocks where each block has a unique index. In other words, the PartialBlockIdentifier of a block after an omitted block should reference the last non-omitted block.\n * @export\n * @interface RosettaBlockResponse\n */\nexport interface RosettaBlockResponse {\n    /**\n     * \n     * @type {RosettaBlock}\n     * @memberof RosettaBlockResponse\n     */\n    block?: RosettaBlock;\n    /**\n     * Some blockchains may require additional transactions to be fetched that weren't returned in the block response (ex: block only returns transaction hashes). For blockchains with a lot of transactions in each block, this can be very useful as consumers can concurrently fetch all transactions returned.\n     * @type {Array<OtherTransactionIdentifier>}\n     * @memberof RosettaBlockResponse\n     */\n    other_transactions?: Array<OtherTransactionIdentifier>;\n}\n\nexport function RosettaBlockResponseFromJSON(json: any): RosettaBlockResponse {\n    return RosettaBlockResponseFromJSONTyped(json, false);\n}\n\nexport function RosettaBlockResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaBlockResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'block': !exists(json, 'block') ? undefined : RosettaBlockFromJSON(json['block']),\n        'other_transactions': !exists(json, 'other_transactions') ? undefined : ((json['other_transactions'] as Array<any>).map(OtherTransactionIdentifierFromJSON)),\n    };\n}\n\nexport function RosettaBlockResponseToJSON(value?: RosettaBlockResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'block': RosettaBlockToJSON(value.block),\n        'other_transactions': value.other_transactions === undefined ? undefined : ((value.other_transactions as Array<any>).map(OtherTransactionIdentifierToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    NetworkIdentifier,\n    NetworkIdentifierFromJSON,\n    NetworkIdentifierFromJSONTyped,\n    NetworkIdentifierToJSON,\n    TransactionIdentifier,\n    TransactionIdentifierFromJSON,\n    TransactionIdentifierFromJSONTyped,\n    TransactionIdentifierToJSON,\n} from './';\n\n/**\n * A BlockTransactionRequest is used to fetch a Transaction included in a block that is not returned in a BlockResponse.\n * @export\n * @interface RosettaBlockTransactionRequest\n */\nexport interface RosettaBlockTransactionRequest {\n    /**\n     * \n     * @type {NetworkIdentifier}\n     * @memberof RosettaBlockTransactionRequest\n     */\n    network_identifier: NetworkIdentifier;\n    /**\n     * When fetching data by BlockIdentifier, it may be possible to only specify the index or hash. If neither property is specified, it is assumed that the client is making a request at the current block.\n     * @type {object}\n     * @memberof RosettaBlockTransactionRequest\n     */\n    block_identifier: object;\n    /**\n     * \n     * @type {TransactionIdentifier}\n     * @memberof RosettaBlockTransactionRequest\n     */\n    transaction_identifier: TransactionIdentifier;\n}\n\nexport function RosettaBlockTransactionRequestFromJSON(json: any): RosettaBlockTransactionRequest {\n    return RosettaBlockTransactionRequestFromJSONTyped(json, false);\n}\n\nexport function RosettaBlockTransactionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaBlockTransactionRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierFromJSON(json['network_identifier']),\n        'block_identifier': json['block_identifier'],\n        'transaction_identifier': TransactionIdentifierFromJSON(json['transaction_identifier']),\n    };\n}\n\nexport function RosettaBlockTransactionRequestToJSON(value?: RosettaBlockTransactionRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierToJSON(value.network_identifier),\n        'block_identifier': value.block_identifier,\n        'transaction_identifier': TransactionIdentifierToJSON(value.transaction_identifier),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    RosettaTransaction,\n    RosettaTransactionFromJSON,\n    RosettaTransactionFromJSONTyped,\n    RosettaTransactionToJSON,\n} from './';\n\n/**\n * A BlockTransactionResponse contains information about a block transaction.\n * @export\n * @interface RosettaBlockTransactionResponse\n */\nexport interface RosettaBlockTransactionResponse {\n    /**\n     * \n     * @type {RosettaTransaction}\n     * @memberof RosettaBlockTransactionResponse\n     */\n    transaction: RosettaTransaction;\n}\n\nexport function RosettaBlockTransactionResponseFromJSON(json: any): RosettaBlockTransactionResponse {\n    return RosettaBlockTransactionResponseFromJSONTyped(json, false);\n}\n\nexport function RosettaBlockTransactionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaBlockTransactionResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'transaction': RosettaTransactionFromJSON(json['transaction']),\n    };\n}\n\nexport function RosettaBlockTransactionResponseToJSON(value?: RosettaBlockTransactionResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'transaction': RosettaTransactionToJSON(value.transaction),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    RosettaAccountBalanceResponseCoinIdentifier,\n    RosettaAccountBalanceResponseCoinIdentifierFromJSON,\n    RosettaAccountBalanceResponseCoinIdentifierFromJSONTyped,\n    RosettaAccountBalanceResponseCoinIdentifierToJSON,\n    RosettaAmount,\n    RosettaAmountFromJSON,\n    RosettaAmountFromJSONTyped,\n    RosettaAmountToJSON,\n} from './';\n\n/**\n * If a blockchain is UTXO-based, all unspent Coins owned by an account_identifier should be returned alongside the balance. It is highly recommended to populate this field so that users of the Rosetta API implementation don't need to maintain their own indexer to track their UTXOs.\n * @export\n * @interface RosettaCoin\n */\nexport interface RosettaCoin {\n    /**\n     * \n     * @type {RosettaAccountBalanceResponseCoinIdentifier}\n     * @memberof RosettaCoin\n     */\n    coin_identifier: RosettaAccountBalanceResponseCoinIdentifier;\n    /**\n     * \n     * @type {RosettaAmount}\n     * @memberof RosettaCoin\n     */\n    amount: RosettaAmount;\n}\n\nexport function RosettaCoinFromJSON(json: any): RosettaCoin {\n    return RosettaCoinFromJSONTyped(json, false);\n}\n\nexport function RosettaCoinFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaCoin {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'coin_identifier': RosettaAccountBalanceResponseCoinIdentifierFromJSON(json['coin_identifier']),\n        'amount': RosettaAmountFromJSON(json['amount']),\n    };\n}\n\nexport function RosettaCoinToJSON(value?: RosettaCoin | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'coin_identifier': RosettaAccountBalanceResponseCoinIdentifierToJSON(value.coin_identifier),\n        'amount': RosettaAmountToJSON(value.amount),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    RosettaAccountBalanceResponseCoinIdentifier,\n    RosettaAccountBalanceResponseCoinIdentifierFromJSON,\n    RosettaAccountBalanceResponseCoinIdentifierFromJSONTyped,\n    RosettaAccountBalanceResponseCoinIdentifierToJSON,\n} from './';\n\n/**\n * CoinChange is used to represent a change in state of a some coin identified by a coin_identifier. This object is part of the Operation model and must be populated for UTXO-based blockchains. Coincidentally, this abstraction of UTXOs allows for supporting both account-based transfers and UTXO-based transfers on the same blockchain (when a transfer is account-based, don't populate this model).\n * @export\n * @interface RosettaCoinChange\n */\nexport interface RosettaCoinChange {\n    /**\n     * \n     * @type {RosettaAccountBalanceResponseCoinIdentifier}\n     * @memberof RosettaCoinChange\n     */\n    coin_identifier: RosettaAccountBalanceResponseCoinIdentifier;\n    /**\n     * CoinActions are different state changes that a Coin can undergo. When a Coin is created, it is coin_created. When a Coin is spent, it is coin_spent. It is assumed that a single Coin cannot be created or spent more than once.\n     * @type {string}\n     * @memberof RosettaCoinChange\n     */\n    coin_action: RosettaCoinChangeCoinActionEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum RosettaCoinChangeCoinActionEnum {\n    created = 'coin_created',\n    spent = 'coin_spent'\n}\n\nexport function RosettaCoinChangeFromJSON(json: any): RosettaCoinChange {\n    return RosettaCoinChangeFromJSONTyped(json, false);\n}\n\nexport function RosettaCoinChangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaCoinChange {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'coin_identifier': RosettaAccountBalanceResponseCoinIdentifierFromJSON(json['coin_identifier']),\n        'coin_action': json['coin_action'],\n    };\n}\n\nexport function RosettaCoinChangeToJSON(value?: RosettaCoinChange | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'coin_identifier': RosettaAccountBalanceResponseCoinIdentifierToJSON(value.coin_identifier),\n        'coin_action': value.coin_action,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    NetworkIdentifier,\n    NetworkIdentifierFromJSON,\n    NetworkIdentifierFromJSONTyped,\n    NetworkIdentifierToJSON,\n    RosettaSignature,\n    RosettaSignatureFromJSON,\n    RosettaSignatureFromJSONTyped,\n    RosettaSignatureToJSON,\n} from './';\n\n/**\n * RosettaConstructionCombineRequest is the input to the /construction/combine endpoint. It contains the unsigned transaction blob returned by /construction/payloads and all required signatures to create a network transaction.\n * @export\n * @interface RosettaConstructionCombineRequest\n */\nexport interface RosettaConstructionCombineRequest {\n    /**\n     * \n     * @type {NetworkIdentifier}\n     * @memberof RosettaConstructionCombineRequest\n     */\n    network_identifier: NetworkIdentifier;\n    /**\n     * \n     * @type {string}\n     * @memberof RosettaConstructionCombineRequest\n     */\n    unsigned_transaction: string;\n    /**\n     * \n     * @type {Array<RosettaSignature>}\n     * @memberof RosettaConstructionCombineRequest\n     */\n    signatures: Array<RosettaSignature>;\n}\n\nexport function RosettaConstructionCombineRequestFromJSON(json: any): RosettaConstructionCombineRequest {\n    return RosettaConstructionCombineRequestFromJSONTyped(json, false);\n}\n\nexport function RosettaConstructionCombineRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaConstructionCombineRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierFromJSON(json['network_identifier']),\n        'unsigned_transaction': json['unsigned_transaction'],\n        'signatures': ((json['signatures'] as Array<any>).map(RosettaSignatureFromJSON)),\n    };\n}\n\nexport function RosettaConstructionCombineRequestToJSON(value?: RosettaConstructionCombineRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierToJSON(value.network_identifier),\n        'unsigned_transaction': value.unsigned_transaction,\n        'signatures': ((value.signatures as Array<any>).map(RosettaSignatureToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * RosettaConstructionCombineResponse is returned by /construction/combine. The network payload will be sent directly to the construction/submit endpoint.\n * @export\n * @interface RosettaConstructionCombineResponse\n */\nexport interface RosettaConstructionCombineResponse {\n    /**\n     * Signed transaction bytes in hex\n     * @type {string}\n     * @memberof RosettaConstructionCombineResponse\n     */\n    signed_transaction: string;\n}\n\nexport function RosettaConstructionCombineResponseFromJSON(json: any): RosettaConstructionCombineResponse {\n    return RosettaConstructionCombineResponseFromJSONTyped(json, false);\n}\n\nexport function RosettaConstructionCombineResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaConstructionCombineResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'signed_transaction': json['signed_transaction'],\n    };\n}\n\nexport function RosettaConstructionCombineResponseToJSON(value?: RosettaConstructionCombineResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'signed_transaction': value.signed_transaction,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    NetworkIdentifier,\n    NetworkIdentifierFromJSON,\n    NetworkIdentifierFromJSONTyped,\n    NetworkIdentifierToJSON,\n    RosettaPublicKey,\n    RosettaPublicKeyFromJSON,\n    RosettaPublicKeyFromJSONTyped,\n    RosettaPublicKeyToJSON,\n} from './';\n\n/**\n * Network is provided in the request because some blockchains have different address formats for different networks\n * @export\n * @interface RosettaConstructionDeriveRequest\n */\nexport interface RosettaConstructionDeriveRequest {\n    /**\n     * \n     * @type {NetworkIdentifier}\n     * @memberof RosettaConstructionDeriveRequest\n     */\n    network_identifier: NetworkIdentifier;\n    /**\n     * \n     * @type {RosettaPublicKey}\n     * @memberof RosettaConstructionDeriveRequest\n     */\n    public_key: RosettaPublicKey;\n    /**\n     * \n     * @type {object}\n     * @memberof RosettaConstructionDeriveRequest\n     */\n    metadata?: object;\n}\n\nexport function RosettaConstructionDeriveRequestFromJSON(json: any): RosettaConstructionDeriveRequest {\n    return RosettaConstructionDeriveRequestFromJSONTyped(json, false);\n}\n\nexport function RosettaConstructionDeriveRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaConstructionDeriveRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierFromJSON(json['network_identifier']),\n        'public_key': RosettaPublicKeyFromJSON(json['public_key']),\n        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\n\nexport function RosettaConstructionDeriveRequestToJSON(value?: RosettaConstructionDeriveRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierToJSON(value.network_identifier),\n        'public_key': RosettaPublicKeyToJSON(value.public_key),\n        'metadata': value.metadata,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    RosettaAccountIdentifier,\n    RosettaAccountIdentifierFromJSON,\n    RosettaAccountIdentifierFromJSONTyped,\n    RosettaAccountIdentifierToJSON,\n} from './';\n\n/**\n * ConstructionDeriveResponse is returned by the /construction/derive endpoint.\n * @export\n * @interface RosettaConstructionDeriveResponse\n */\nexport interface RosettaConstructionDeriveResponse {\n    /**\n     * [DEPRECATED by account_identifier in v1.4.4] Address in network-specific format.\n     * @type {string}\n     * @memberof RosettaConstructionDeriveResponse\n     */\n    address?: string;\n    /**\n     * \n     * @type {RosettaAccountIdentifier}\n     * @memberof RosettaConstructionDeriveResponse\n     */\n    account_identifier?: RosettaAccountIdentifier;\n    /**\n     * \n     * @type {object}\n     * @memberof RosettaConstructionDeriveResponse\n     */\n    metadata?: object;\n}\n\nexport function RosettaConstructionDeriveResponseFromJSON(json: any): RosettaConstructionDeriveResponse {\n    return RosettaConstructionDeriveResponseFromJSONTyped(json, false);\n}\n\nexport function RosettaConstructionDeriveResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaConstructionDeriveResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'address': !exists(json, 'address') ? undefined : json['address'],\n        'account_identifier': !exists(json, 'account_identifier') ? undefined : RosettaAccountIdentifierFromJSON(json['account_identifier']),\n        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\n\nexport function RosettaConstructionDeriveResponseToJSON(value?: RosettaConstructionDeriveResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'address': value.address,\n        'account_identifier': RosettaAccountIdentifierToJSON(value.account_identifier),\n        'metadata': value.metadata,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    NetworkIdentifier,\n    NetworkIdentifierFromJSON,\n    NetworkIdentifierFromJSONTyped,\n    NetworkIdentifierToJSON,\n} from './';\n\n/**\n * TransactionHash returns the network-specific transaction hash for a signed transaction.\n * @export\n * @interface RosettaConstructionHashRequest\n */\nexport interface RosettaConstructionHashRequest {\n    /**\n     * \n     * @type {NetworkIdentifier}\n     * @memberof RosettaConstructionHashRequest\n     */\n    network_identifier: NetworkIdentifier;\n    /**\n     * Signed transaction\n     * @type {string}\n     * @memberof RosettaConstructionHashRequest\n     */\n    signed_transaction: string;\n}\n\nexport function RosettaConstructionHashRequestFromJSON(json: any): RosettaConstructionHashRequest {\n    return RosettaConstructionHashRequestFromJSONTyped(json, false);\n}\n\nexport function RosettaConstructionHashRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaConstructionHashRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierFromJSON(json['network_identifier']),\n        'signed_transaction': json['signed_transaction'],\n    };\n}\n\nexport function RosettaConstructionHashRequestToJSON(value?: RosettaConstructionHashRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierToJSON(value.network_identifier),\n        'signed_transaction': value.signed_transaction,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    TransactionIdentifier,\n    TransactionIdentifierFromJSON,\n    TransactionIdentifierFromJSONTyped,\n    TransactionIdentifierToJSON,\n} from './';\n\n/**\n * TransactionIdentifier contains the transaction_identifier of a transaction that was submitted to either /construction/hash or /construction/submit.\n * @export\n * @interface RosettaConstructionHashResponse\n */\nexport interface RosettaConstructionHashResponse {\n    /**\n     * \n     * @type {TransactionIdentifier}\n     * @memberof RosettaConstructionHashResponse\n     */\n    transaction_identifier: TransactionIdentifier;\n    /**\n     * \n     * @type {object}\n     * @memberof RosettaConstructionHashResponse\n     */\n    metadata?: object;\n}\n\nexport function RosettaConstructionHashResponseFromJSON(json: any): RosettaConstructionHashResponse {\n    return RosettaConstructionHashResponseFromJSONTyped(json, false);\n}\n\nexport function RosettaConstructionHashResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaConstructionHashResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'transaction_identifier': TransactionIdentifierFromJSON(json['transaction_identifier']),\n        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\n\nexport function RosettaConstructionHashResponseToJSON(value?: RosettaConstructionHashResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'transaction_identifier': TransactionIdentifierToJSON(value.transaction_identifier),\n        'metadata': value.metadata,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    NetworkIdentifier,\n    NetworkIdentifierFromJSON,\n    NetworkIdentifierFromJSONTyped,\n    NetworkIdentifierToJSON,\n    RosettaOptions,\n    RosettaOptionsFromJSON,\n    RosettaOptionsFromJSONTyped,\n    RosettaOptionsToJSON,\n    RosettaPublicKey,\n    RosettaPublicKeyFromJSON,\n    RosettaPublicKeyFromJSONTyped,\n    RosettaPublicKeyToJSON,\n} from './';\n\n/**\n * A ConstructionMetadataRequest is utilized to get information required to construct a transaction. The Options object used to specify which metadata to return is left purposely unstructured to allow flexibility for implementers. Optionally, the request can also include an array of PublicKeys associated with the AccountIdentifiers returned in ConstructionPreprocessResponse.\n * @export\n * @interface RosettaConstructionMetadataRequest\n */\nexport interface RosettaConstructionMetadataRequest {\n    /**\n     * \n     * @type {NetworkIdentifier}\n     * @memberof RosettaConstructionMetadataRequest\n     */\n    network_identifier: NetworkIdentifier;\n    /**\n     * \n     * @type {RosettaOptions}\n     * @memberof RosettaConstructionMetadataRequest\n     */\n    options: RosettaOptions;\n    /**\n     * \n     * @type {Array<RosettaPublicKey>}\n     * @memberof RosettaConstructionMetadataRequest\n     */\n    public_keys?: Array<RosettaPublicKey>;\n}\n\nexport function RosettaConstructionMetadataRequestFromJSON(json: any): RosettaConstructionMetadataRequest {\n    return RosettaConstructionMetadataRequestFromJSONTyped(json, false);\n}\n\nexport function RosettaConstructionMetadataRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaConstructionMetadataRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierFromJSON(json['network_identifier']),\n        'options': RosettaOptionsFromJSON(json['options']),\n        'public_keys': !exists(json, 'public_keys') ? undefined : ((json['public_keys'] as Array<any>).map(RosettaPublicKeyFromJSON)),\n    };\n}\n\nexport function RosettaConstructionMetadataRequestToJSON(value?: RosettaConstructionMetadataRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierToJSON(value.network_identifier),\n        'options': RosettaOptionsToJSON(value.options),\n        'public_keys': value.public_keys === undefined ? undefined : ((value.public_keys as Array<any>).map(RosettaPublicKeyToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    RosettaAmount,\n    RosettaAmountFromJSON,\n    RosettaAmountFromJSONTyped,\n    RosettaAmountToJSON,\n    RosettaConstructionMetadataResponseMetadata,\n    RosettaConstructionMetadataResponseMetadataFromJSON,\n    RosettaConstructionMetadataResponseMetadataFromJSONTyped,\n    RosettaConstructionMetadataResponseMetadataToJSON,\n} from './';\n\n/**\n * The ConstructionMetadataResponse returns network-specific metadata used for transaction construction. Optionally, the implementer can return the suggested fee associated with the transaction being constructed. The caller may use this info to adjust the intent of the transaction or to create a transaction with a different account that can pay the suggested fee. Suggested fee is an array in case fee payment must occur in multiple currencies.\n * @export\n * @interface RosettaConstructionMetadataResponse\n */\nexport interface RosettaConstructionMetadataResponse {\n    /**\n     * \n     * @type {RosettaConstructionMetadataResponseMetadata}\n     * @memberof RosettaConstructionMetadataResponse\n     */\n    metadata: RosettaConstructionMetadataResponseMetadata;\n    /**\n     * \n     * @type {Array<RosettaAmount>}\n     * @memberof RosettaConstructionMetadataResponse\n     */\n    suggested_fee?: Array<RosettaAmount>;\n}\n\nexport function RosettaConstructionMetadataResponseFromJSON(json: any): RosettaConstructionMetadataResponse {\n    return RosettaConstructionMetadataResponseFromJSONTyped(json, false);\n}\n\nexport function RosettaConstructionMetadataResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaConstructionMetadataResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'metadata': RosettaConstructionMetadataResponseMetadataFromJSON(json['metadata']),\n        'suggested_fee': !exists(json, 'suggested_fee') ? undefined : ((json['suggested_fee'] as Array<any>).map(RosettaAmountFromJSON)),\n    };\n}\n\nexport function RosettaConstructionMetadataResponseToJSON(value?: RosettaConstructionMetadataResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'metadata': RosettaConstructionMetadataResponseMetadataToJSON(value.metadata),\n        'suggested_fee': value.suggested_fee === undefined ? undefined : ((value.suggested_fee as Array<any>).map(RosettaAmountToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface RosettaConstructionMetadataResponseMetadata\n */\nexport interface RosettaConstructionMetadataResponseMetadata {\n    /**\n     * \n     * @type {number}\n     * @memberof RosettaConstructionMetadataResponseMetadata\n     */\n    account_sequence?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof RosettaConstructionMetadataResponseMetadata\n     */\n    recent_block_hash?: string;\n}\n\nexport function RosettaConstructionMetadataResponseMetadataFromJSON(json: any): RosettaConstructionMetadataResponseMetadata {\n    return RosettaConstructionMetadataResponseMetadataFromJSONTyped(json, false);\n}\n\nexport function RosettaConstructionMetadataResponseMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaConstructionMetadataResponseMetadata {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'account_sequence': !exists(json, 'account_sequence') ? undefined : json['account_sequence'],\n        'recent_block_hash': !exists(json, 'recent_block_hash') ? undefined : json['recent_block_hash'],\n    };\n}\n\nexport function RosettaConstructionMetadataResponseMetadataToJSON(value?: RosettaConstructionMetadataResponseMetadata | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'account_sequence': value.account_sequence,\n        'recent_block_hash': value.recent_block_hash,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    NetworkIdentifier,\n    NetworkIdentifierFromJSON,\n    NetworkIdentifierFromJSONTyped,\n    NetworkIdentifierToJSON,\n} from './';\n\n/**\n * Parse is called on both unsigned and signed transactions to understand the intent of the formulated transaction. This is run as a sanity check before signing (after /construction/payloads) and before broadcast (after /construction/combine).\n * @export\n * @interface RosettaConstructionParseRequest\n */\nexport interface RosettaConstructionParseRequest {\n    /**\n     * \n     * @type {NetworkIdentifier}\n     * @memberof RosettaConstructionParseRequest\n     */\n    network_identifier: NetworkIdentifier;\n    /**\n     * Signed is a boolean indicating whether the transaction is signed.\n     * @type {boolean}\n     * @memberof RosettaConstructionParseRequest\n     */\n    signed: boolean;\n    /**\n     * This must be either the unsigned transaction blob returned by /construction/payloads or the signed transaction blob returned by /construction/combine.\n     * @type {string}\n     * @memberof RosettaConstructionParseRequest\n     */\n    transaction: string;\n}\n\nexport function RosettaConstructionParseRequestFromJSON(json: any): RosettaConstructionParseRequest {\n    return RosettaConstructionParseRequestFromJSONTyped(json, false);\n}\n\nexport function RosettaConstructionParseRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaConstructionParseRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierFromJSON(json['network_identifier']),\n        'signed': json['signed'],\n        'transaction': json['transaction'],\n    };\n}\n\nexport function RosettaConstructionParseRequestToJSON(value?: RosettaConstructionParseRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierToJSON(value.network_identifier),\n        'signed': value.signed,\n        'transaction': value.transaction,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    RosettaAccountIdentifier,\n    RosettaAccountIdentifierFromJSON,\n    RosettaAccountIdentifierFromJSONTyped,\n    RosettaAccountIdentifierToJSON,\n    RosettaOperation,\n    RosettaOperationFromJSON,\n    RosettaOperationFromJSONTyped,\n    RosettaOperationToJSON,\n} from './';\n\n/**\n * RosettaConstructionParseResponse contains an array of operations that occur in a transaction blob. This should match the array of operations provided to /construction/preprocess and /construction/payloads.\n * @export\n * @interface RosettaConstructionParseResponse\n */\nexport interface RosettaConstructionParseResponse {\n    /**\n     * \n     * @type {Array<RosettaOperation>}\n     * @memberof RosettaConstructionParseResponse\n     */\n    operations: Array<RosettaOperation>;\n    /**\n     * [DEPRECATED by account_identifier_signers in v1.4.4] All signers (addresses) of a particular transaction. If the transaction is unsigned, it should be empty.\n     * @type {Array<string>}\n     * @memberof RosettaConstructionParseResponse\n     */\n    signers?: Array<string>;\n    /**\n     * \n     * @type {Array<RosettaAccountIdentifier>}\n     * @memberof RosettaConstructionParseResponse\n     */\n    account_identifier_signers?: Array<RosettaAccountIdentifier>;\n    /**\n     * \n     * @type {object}\n     * @memberof RosettaConstructionParseResponse\n     */\n    metadata?: object;\n}\n\nexport function RosettaConstructionParseResponseFromJSON(json: any): RosettaConstructionParseResponse {\n    return RosettaConstructionParseResponseFromJSONTyped(json, false);\n}\n\nexport function RosettaConstructionParseResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaConstructionParseResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'operations': ((json['operations'] as Array<any>).map(RosettaOperationFromJSON)),\n        'signers': !exists(json, 'signers') ? undefined : json['signers'],\n        'account_identifier_signers': !exists(json, 'account_identifier_signers') ? undefined : ((json['account_identifier_signers'] as Array<any>).map(RosettaAccountIdentifierFromJSON)),\n        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\n\nexport function RosettaConstructionParseResponseToJSON(value?: RosettaConstructionParseResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'operations': ((value.operations as Array<any>).map(RosettaOperationToJSON)),\n        'signers': value.signers,\n        'account_identifier_signers': value.account_identifier_signers === undefined ? undefined : ((value.account_identifier_signers as Array<any>).map(RosettaAccountIdentifierToJSON)),\n        'metadata': value.metadata,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    SigningPayload,\n    SigningPayloadFromJSON,\n    SigningPayloadFromJSONTyped,\n    SigningPayloadToJSON,\n} from './';\n\n/**\n * RosettaConstructionPayloadResponse is returned by /construction/payloads. It contains an unsigned transaction blob (that is usually needed to construct the a network transaction from a collection of signatures) and an array of payloads that must be signed by the caller.\n * @export\n * @interface RosettaConstructionPayloadResponse\n */\nexport interface RosettaConstructionPayloadResponse {\n    /**\n     * This is an unsigned transaction blob (that is usually needed to construct the a network transaction from a collection of signatures)\n     * @type {string}\n     * @memberof RosettaConstructionPayloadResponse\n     */\n    unsigned_transaction: string;\n    /**\n     * An array of payloads that must be signed by the caller\n     * @type {Array<SigningPayload>}\n     * @memberof RosettaConstructionPayloadResponse\n     */\n    payloads: Array<SigningPayload>;\n}\n\nexport function RosettaConstructionPayloadResponseFromJSON(json: any): RosettaConstructionPayloadResponse {\n    return RosettaConstructionPayloadResponseFromJSONTyped(json, false);\n}\n\nexport function RosettaConstructionPayloadResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaConstructionPayloadResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'unsigned_transaction': json['unsigned_transaction'],\n        'payloads': ((json['payloads'] as Array<any>).map(SigningPayloadFromJSON)),\n    };\n}\n\nexport function RosettaConstructionPayloadResponseToJSON(value?: RosettaConstructionPayloadResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'unsigned_transaction': value.unsigned_transaction,\n        'payloads': ((value.payloads as Array<any>).map(SigningPayloadToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    NetworkIdentifier,\n    NetworkIdentifierFromJSON,\n    NetworkIdentifierFromJSONTyped,\n    NetworkIdentifierToJSON,\n    RosettaConstructionMetadataResponseMetadata,\n    RosettaConstructionMetadataResponseMetadataFromJSON,\n    RosettaConstructionMetadataResponseMetadataFromJSONTyped,\n    RosettaConstructionMetadataResponseMetadataToJSON,\n    RosettaOperation,\n    RosettaOperationFromJSON,\n    RosettaOperationFromJSONTyped,\n    RosettaOperationToJSON,\n    RosettaPublicKey,\n    RosettaPublicKeyFromJSON,\n    RosettaPublicKeyFromJSONTyped,\n    RosettaPublicKeyToJSON,\n} from './';\n\n/**\n * ConstructionPayloadsRequest is the request to /construction/payloads. It contains the network, a slice of operations, and arbitrary metadata that was returned by the call to /construction/metadata. Optionally, the request can also include an array of PublicKeys associated with the AccountIdentifiers returned in ConstructionPreprocessResponse.\n * @export\n * @interface RosettaConstructionPayloadsRequest\n */\nexport interface RosettaConstructionPayloadsRequest {\n    /**\n     * \n     * @type {NetworkIdentifier}\n     * @memberof RosettaConstructionPayloadsRequest\n     */\n    network_identifier: NetworkIdentifier;\n    /**\n     * \n     * @type {Array<RosettaOperation>}\n     * @memberof RosettaConstructionPayloadsRequest\n     */\n    operations: Array<RosettaOperation>;\n    /**\n     * \n     * @type {Array<RosettaPublicKey>}\n     * @memberof RosettaConstructionPayloadsRequest\n     */\n    public_keys?: Array<RosettaPublicKey>;\n    /**\n     * \n     * @type {RosettaConstructionMetadataResponseMetadata}\n     * @memberof RosettaConstructionPayloadsRequest\n     */\n    metadata?: RosettaConstructionMetadataResponseMetadata;\n}\n\nexport function RosettaConstructionPayloadsRequestFromJSON(json: any): RosettaConstructionPayloadsRequest {\n    return RosettaConstructionPayloadsRequestFromJSONTyped(json, false);\n}\n\nexport function RosettaConstructionPayloadsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaConstructionPayloadsRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierFromJSON(json['network_identifier']),\n        'operations': ((json['operations'] as Array<any>).map(RosettaOperationFromJSON)),\n        'public_keys': !exists(json, 'public_keys') ? undefined : ((json['public_keys'] as Array<any>).map(RosettaPublicKeyFromJSON)),\n        'metadata': !exists(json, 'metadata') ? undefined : RosettaConstructionMetadataResponseMetadataFromJSON(json['metadata']),\n    };\n}\n\nexport function RosettaConstructionPayloadsRequestToJSON(value?: RosettaConstructionPayloadsRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierToJSON(value.network_identifier),\n        'operations': ((value.operations as Array<any>).map(RosettaOperationToJSON)),\n        'public_keys': value.public_keys === undefined ? undefined : ((value.public_keys as Array<any>).map(RosettaPublicKeyToJSON)),\n        'metadata': RosettaConstructionMetadataResponseMetadataToJSON(value.metadata),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    NetworkIdentifier,\n    NetworkIdentifierFromJSON,\n    NetworkIdentifierFromJSONTyped,\n    NetworkIdentifierToJSON,\n    RosettaMaxFeeAmount,\n    RosettaMaxFeeAmountFromJSON,\n    RosettaMaxFeeAmountFromJSONTyped,\n    RosettaMaxFeeAmountToJSON,\n    RosettaOperation,\n    RosettaOperationFromJSON,\n    RosettaOperationFromJSONTyped,\n    RosettaOperationToJSON,\n} from './';\n\n/**\n * ConstructionPreprocessRequest is passed to the /construction/preprocess endpoint so that a Rosetta implementation can determine which metadata it needs to request for construction\n * @export\n * @interface RosettaConstructionPreprocessRequest\n */\nexport interface RosettaConstructionPreprocessRequest {\n    /**\n     * \n     * @type {NetworkIdentifier}\n     * @memberof RosettaConstructionPreprocessRequest\n     */\n    network_identifier: NetworkIdentifier;\n    /**\n     * \n     * @type {Array<RosettaOperation>}\n     * @memberof RosettaConstructionPreprocessRequest\n     */\n    operations: Array<RosettaOperation>;\n    /**\n     * \n     * @type {object}\n     * @memberof RosettaConstructionPreprocessRequest\n     */\n    metadata?: object;\n    /**\n     * \n     * @type {Array<RosettaMaxFeeAmount>}\n     * @memberof RosettaConstructionPreprocessRequest\n     */\n    max_fee?: Array<RosettaMaxFeeAmount>;\n    /**\n     *  The caller can also provide a suggested fee multiplier to indicate that the suggested fee should be scaled. This may be used to set higher fees for urgent transactions or to pay lower fees when there is less urgency. It is assumed that providing a very low multiplier (like 0.0001) will never lead to a transaction being created with a fee less than the minimum network fee (if applicable). In the case that the caller provides both a max fee and a suggested fee multiplier, the max fee will set an upper bound on the suggested fee (regardless of the multiplier provided).\n     * @type {number}\n     * @memberof RosettaConstructionPreprocessRequest\n     */\n    suggested_fee_multiplier?: number;\n}\n\nexport function RosettaConstructionPreprocessRequestFromJSON(json: any): RosettaConstructionPreprocessRequest {\n    return RosettaConstructionPreprocessRequestFromJSONTyped(json, false);\n}\n\nexport function RosettaConstructionPreprocessRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaConstructionPreprocessRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierFromJSON(json['network_identifier']),\n        'operations': ((json['operations'] as Array<any>).map(RosettaOperationFromJSON)),\n        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],\n        'max_fee': !exists(json, 'max_fee') ? undefined : ((json['max_fee'] as Array<any>).map(RosettaMaxFeeAmountFromJSON)),\n        'suggested_fee_multiplier': !exists(json, 'suggested_fee_multiplier') ? undefined : json['suggested_fee_multiplier'],\n    };\n}\n\nexport function RosettaConstructionPreprocessRequestToJSON(value?: RosettaConstructionPreprocessRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierToJSON(value.network_identifier),\n        'operations': ((value.operations as Array<any>).map(RosettaOperationToJSON)),\n        'metadata': value.metadata,\n        'max_fee': value.max_fee === undefined ? undefined : ((value.max_fee as Array<any>).map(RosettaMaxFeeAmountToJSON)),\n        'suggested_fee_multiplier': value.suggested_fee_multiplier,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    RosettaAccount,\n    RosettaAccountFromJSON,\n    RosettaAccountFromJSONTyped,\n    RosettaAccountToJSON,\n    RosettaOptions,\n    RosettaOptionsFromJSON,\n    RosettaOptionsFromJSONTyped,\n    RosettaOptionsToJSON,\n} from './';\n\n/**\n * RosettaConstructionPreprocessResponse contains options that will be sent unmodified to /construction/metadata. If it is not necessary to make a request to /construction/metadata, options should be omitted. Some blockchains require the PublicKey of particular AccountIdentifiers to construct a valid transaction. To fetch these PublicKeys, populate required_public_keys with the AccountIdentifiers associated with the desired PublicKeys. If it is not necessary to retrieve any PublicKeys for construction, required_public_keys should be omitted.\n * @export\n * @interface RosettaConstructionPreprocessResponse\n */\nexport interface RosettaConstructionPreprocessResponse {\n    /**\n     * \n     * @type {RosettaOptions}\n     * @memberof RosettaConstructionPreprocessResponse\n     */\n    options?: RosettaOptions;\n    /**\n     * \n     * @type {Array<RosettaAccount>}\n     * @memberof RosettaConstructionPreprocessResponse\n     */\n    required_public_keys?: Array<RosettaAccount>;\n}\n\nexport function RosettaConstructionPreprocessResponseFromJSON(json: any): RosettaConstructionPreprocessResponse {\n    return RosettaConstructionPreprocessResponseFromJSONTyped(json, false);\n}\n\nexport function RosettaConstructionPreprocessResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaConstructionPreprocessResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'options': !exists(json, 'options') ? undefined : RosettaOptionsFromJSON(json['options']),\n        'required_public_keys': !exists(json, 'required_public_keys') ? undefined : ((json['required_public_keys'] as Array<any>).map(RosettaAccountFromJSON)),\n    };\n}\n\nexport function RosettaConstructionPreprocessResponseToJSON(value?: RosettaConstructionPreprocessResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'options': RosettaOptionsToJSON(value.options),\n        'required_public_keys': value.required_public_keys === undefined ? undefined : ((value.required_public_keys as Array<any>).map(RosettaAccountToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    NetworkIdentifier,\n    NetworkIdentifierFromJSON,\n    NetworkIdentifierFromJSONTyped,\n    NetworkIdentifierToJSON,\n} from './';\n\n/**\n * Submit the transaction in blockchain\n * @export\n * @interface RosettaConstructionSubmitRequest\n */\nexport interface RosettaConstructionSubmitRequest {\n    /**\n     * \n     * @type {NetworkIdentifier}\n     * @memberof RosettaConstructionSubmitRequest\n     */\n    network_identifier: NetworkIdentifier;\n    /**\n     * Signed transaction\n     * @type {string}\n     * @memberof RosettaConstructionSubmitRequest\n     */\n    signed_transaction: string;\n}\n\nexport function RosettaConstructionSubmitRequestFromJSON(json: any): RosettaConstructionSubmitRequest {\n    return RosettaConstructionSubmitRequestFromJSONTyped(json, false);\n}\n\nexport function RosettaConstructionSubmitRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaConstructionSubmitRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierFromJSON(json['network_identifier']),\n        'signed_transaction': json['signed_transaction'],\n    };\n}\n\nexport function RosettaConstructionSubmitRequestToJSON(value?: RosettaConstructionSubmitRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierToJSON(value.network_identifier),\n        'signed_transaction': value.signed_transaction,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    TransactionIdentifier,\n    TransactionIdentifierFromJSON,\n    TransactionIdentifierFromJSONTyped,\n    TransactionIdentifierToJSON,\n} from './';\n\n/**\n * TransactionIdentifier contains the transaction_identifier of a transaction that was submitted to either /construction/submit.\n * @export\n * @interface RosettaConstructionSubmitResponse\n */\nexport interface RosettaConstructionSubmitResponse {\n    /**\n     * \n     * @type {TransactionIdentifier}\n     * @memberof RosettaConstructionSubmitResponse\n     */\n    transaction_identifier: TransactionIdentifier;\n    /**\n     * \n     * @type {object}\n     * @memberof RosettaConstructionSubmitResponse\n     */\n    metadata?: object;\n}\n\nexport function RosettaConstructionSubmitResponseFromJSON(json: any): RosettaConstructionSubmitResponse {\n    return RosettaConstructionSubmitResponseFromJSONTyped(json, false);\n}\n\nexport function RosettaConstructionSubmitResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaConstructionSubmitResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'transaction_identifier': TransactionIdentifierFromJSON(json['transaction_identifier']),\n        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\n\nexport function RosettaConstructionSubmitResponseToJSON(value?: RosettaConstructionSubmitResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'transaction_identifier': TransactionIdentifierToJSON(value.transaction_identifier),\n        'metadata': value.metadata,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Currency is composed of a canonical Symbol and Decimals. This Decimals value is used to convert an Amount.Value from atomic units (Satoshis) to standard units (Bitcoins).\n * @export\n * @interface RosettaCurrency\n */\nexport interface RosettaCurrency {\n    /**\n     * Canonical symbol associated with a currency.\n     * @type {string}\n     * @memberof RosettaCurrency\n     */\n    symbol: string;\n    /**\n     * Number of decimal places in the standard unit representation of the amount. For example, BTC has 8 decimals. Note that it is not possible to represent the value of some currency in atomic units that is not base 10.\n     * @type {number}\n     * @memberof RosettaCurrency\n     */\n    decimals: number;\n    /**\n     * Any additional information related to the currency itself. For example, it would be useful to populate this object with the contract address of an ERC-20 token.\n     * @type {object}\n     * @memberof RosettaCurrency\n     */\n    metadata?: object;\n}\n\nexport function RosettaCurrencyFromJSON(json: any): RosettaCurrency {\n    return RosettaCurrencyFromJSONTyped(json, false);\n}\n\nexport function RosettaCurrencyFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaCurrency {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'symbol': json['symbol'],\n        'decimals': json['decimals'],\n        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\n\nexport function RosettaCurrencyToJSON(value?: RosettaCurrency | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'symbol': value.symbol,\n        'decimals': value.decimals,\n        'metadata': value.metadata,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    RosettaErrorDetails,\n    RosettaErrorDetailsFromJSON,\n    RosettaErrorDetailsFromJSONTyped,\n    RosettaErrorDetailsToJSON,\n} from './';\n\n/**\n * Instead of utilizing HTTP status codes to describe node errors (which often do not have a good analog), rich errors are returned using this object. Both the code and message fields can be individually used to correctly identify an error. Implementations MUST use unique values for both fields.\n * @export\n * @interface RosettaError\n */\nexport interface RosettaError {\n    /**\n     * Code is a network-specific error code. If desired, this code can be equivalent to an HTTP status code.\n     * @type {number}\n     * @memberof RosettaError\n     */\n    code: number;\n    /**\n     * Message is a network-specific error message. The message MUST NOT change for a given code. In particular, this means that any contextual information should be included in the details field.\n     * @type {string}\n     * @memberof RosettaError\n     */\n    message: string;\n    /**\n     * An error is retriable if the same request may succeed if submitted again.\n     * @type {boolean}\n     * @memberof RosettaError\n     */\n    retriable: boolean;\n    /**\n     * \n     * @type {RosettaErrorDetails}\n     * @memberof RosettaError\n     */\n    details?: RosettaErrorDetails;\n}\n\nexport function RosettaErrorFromJSON(json: any): RosettaError {\n    return RosettaErrorFromJSONTyped(json, false);\n}\n\nexport function RosettaErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaError {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'code': json['code'],\n        'message': json['message'],\n        'retriable': json['retriable'],\n        'details': !exists(json, 'details') ? undefined : RosettaErrorDetailsFromJSON(json['details']),\n    };\n}\n\nexport function RosettaErrorToJSON(value?: RosettaError | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'code': value.code,\n        'message': value.message,\n        'retriable': value.retriable,\n        'details': RosettaErrorDetailsToJSON(value.details),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Often times it is useful to return context specific to the request that caused the error (i.e. a sample of the stack trace or impacted account) in addition to the standard error message.\n * @export\n * @interface RosettaErrorDetails\n */\nexport interface RosettaErrorDetails {\n    /**\n     * \n     * @type {string}\n     * @memberof RosettaErrorDetails\n     */\n    address?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof RosettaErrorDetails\n     */\n    error?: string;\n}\n\nexport function RosettaErrorDetailsFromJSON(json: any): RosettaErrorDetails {\n    return RosettaErrorDetailsFromJSONTyped(json, false);\n}\n\nexport function RosettaErrorDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaErrorDetails {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'address': !exists(json, 'address') ? undefined : json['address'],\n        'error': !exists(json, 'error') ? undefined : json['error'],\n    };\n}\n\nexport function RosettaErrorDetailsToJSON(value?: RosettaErrorDetails | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'address': value.address,\n        'error': value.error,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Instead of utilizing HTTP status codes to describe node errors (which often do not have a good analog), rich errors are returned using this object. Both the code and message fields can be individually used to correctly identify an error. Implementations MUST use unique values for both fields.\n * @export\n * @interface RosettaErrorNoDetails\n */\nexport interface RosettaErrorNoDetails {\n    /**\n     * Code is a network-specific error code. If desired, this code can be equivalent to an HTTP status code.\n     * @type {number}\n     * @memberof RosettaErrorNoDetails\n     */\n    code: number;\n    /**\n     * Message is a network-specific error message. The message MUST NOT change for a given code. In particular, this means that any contextual information should be included in the details field.\n     * @type {string}\n     * @memberof RosettaErrorNoDetails\n     */\n    message: string;\n    /**\n     * An error is retriable if the same request may succeed if submitted again.\n     * @type {boolean}\n     * @memberof RosettaErrorNoDetails\n     */\n    retriable: boolean;\n}\n\nexport function RosettaErrorNoDetailsFromJSON(json: any): RosettaErrorNoDetails {\n    return RosettaErrorNoDetailsFromJSONTyped(json, false);\n}\n\nexport function RosettaErrorNoDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaErrorNoDetails {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'code': json['code'],\n        'message': json['message'],\n        'retriable': json['retriable'],\n    };\n}\n\nexport function RosettaErrorNoDetailsToJSON(value?: RosettaErrorNoDetails | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'code': value.code,\n        'message': value.message,\n        'retriable': value.retriable,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * The block_identifier uniquely identifies a block in a particular network.\n * @export\n * @interface RosettaGenesisBlockIdentifier\n */\nexport interface RosettaGenesisBlockIdentifier {\n    /**\n     * This is also known as the block height.\n     * @type {number}\n     * @memberof RosettaGenesisBlockIdentifier\n     */\n    index: number;\n    /**\n     * Block hash\n     * @type {string}\n     * @memberof RosettaGenesisBlockIdentifier\n     */\n    hash: string;\n}\n\nexport function RosettaGenesisBlockIdentifierFromJSON(json: any): RosettaGenesisBlockIdentifier {\n    return RosettaGenesisBlockIdentifierFromJSONTyped(json, false);\n}\n\nexport function RosettaGenesisBlockIdentifierFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaGenesisBlockIdentifier {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'index': json['index'],\n        'hash': json['hash'],\n    };\n}\n\nexport function RosettaGenesisBlockIdentifierToJSON(value?: RosettaGenesisBlockIdentifier | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'index': value.index,\n        'hash': value.hash,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    RosettaCurrency,\n    RosettaCurrencyFromJSON,\n    RosettaCurrencyFromJSONTyped,\n    RosettaCurrencyToJSON,\n} from './';\n\n/**\n * Amount is some Value of a Currency. It is considered invalid to specify a Value without a Currency.\n * @export\n * @interface RosettaMaxFeeAmount\n */\nexport interface RosettaMaxFeeAmount {\n    /**\n     * Value of the transaction in atomic units represented as an arbitrary-sized signed integer. For example, 1 BTC would be represented by a value of 100000000.\n     * @type {string}\n     * @memberof RosettaMaxFeeAmount\n     */\n    value: string;\n    /**\n     * \n     * @type {RosettaCurrency}\n     * @memberof RosettaMaxFeeAmount\n     */\n    currency: RosettaCurrency;\n    /**\n     * \n     * @type {object}\n     * @memberof RosettaMaxFeeAmount\n     */\n    metadata?: object;\n}\n\nexport function RosettaMaxFeeAmountFromJSON(json: any): RosettaMaxFeeAmount {\n    return RosettaMaxFeeAmountFromJSONTyped(json, false);\n}\n\nexport function RosettaMaxFeeAmountFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaMaxFeeAmount {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': json['value'],\n        'currency': RosettaCurrencyFromJSON(json['currency']),\n        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\n\nexport function RosettaMaxFeeAmountToJSON(value?: RosettaMaxFeeAmount | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'value': value.value,\n        'currency': RosettaCurrencyToJSON(value.currency),\n        'metadata': value.metadata,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    NetworkIdentifier,\n    NetworkIdentifierFromJSON,\n    NetworkIdentifierFromJSONTyped,\n    NetworkIdentifierToJSON,\n} from './';\n\n/**\n * Get all Transaction Identifiers in the mempool\n * @export\n * @interface RosettaMempoolRequest\n */\nexport interface RosettaMempoolRequest {\n    /**\n     * \n     * @type {NetworkIdentifier}\n     * @memberof RosettaMempoolRequest\n     */\n    network_identifier: NetworkIdentifier;\n    /**\n     * \n     * @type {object}\n     * @memberof RosettaMempoolRequest\n     */\n    metadata?: object;\n}\n\nexport function RosettaMempoolRequestFromJSON(json: any): RosettaMempoolRequest {\n    return RosettaMempoolRequestFromJSONTyped(json, false);\n}\n\nexport function RosettaMempoolRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaMempoolRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierFromJSON(json['network_identifier']),\n        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\n\nexport function RosettaMempoolRequestToJSON(value?: RosettaMempoolRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierToJSON(value.network_identifier),\n        'metadata': value.metadata,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    TransactionIdentifier,\n    TransactionIdentifierFromJSON,\n    TransactionIdentifierFromJSONTyped,\n    TransactionIdentifierToJSON,\n} from './';\n\n/**\n * A MempoolResponse contains all transaction identifiers in the mempool for a particular network_identifier.\n * @export\n * @interface RosettaMempoolResponse\n */\nexport interface RosettaMempoolResponse {\n    /**\n     * \n     * @type {Array<TransactionIdentifier>}\n     * @memberof RosettaMempoolResponse\n     */\n    transaction_identifiers: Array<TransactionIdentifier>;\n    /**\n     * \n     * @type {object}\n     * @memberof RosettaMempoolResponse\n     */\n    metadata?: object;\n}\n\nexport function RosettaMempoolResponseFromJSON(json: any): RosettaMempoolResponse {\n    return RosettaMempoolResponseFromJSONTyped(json, false);\n}\n\nexport function RosettaMempoolResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaMempoolResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'transaction_identifiers': ((json['transaction_identifiers'] as Array<any>).map(TransactionIdentifierFromJSON)),\n        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\n\nexport function RosettaMempoolResponseToJSON(value?: RosettaMempoolResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'transaction_identifiers': ((value.transaction_identifiers as Array<any>).map(TransactionIdentifierToJSON)),\n        'metadata': value.metadata,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    NetworkIdentifier,\n    NetworkIdentifierFromJSON,\n    NetworkIdentifierFromJSONTyped,\n    NetworkIdentifierToJSON,\n    TransactionIdentifier,\n    TransactionIdentifierFromJSON,\n    TransactionIdentifierFromJSONTyped,\n    TransactionIdentifierToJSON,\n} from './';\n\n/**\n * A MempoolTransactionRequest is utilized to retrieve a transaction from the mempool.\n * @export\n * @interface RosettaMempoolTransactionRequest\n */\nexport interface RosettaMempoolTransactionRequest {\n    /**\n     * \n     * @type {NetworkIdentifier}\n     * @memberof RosettaMempoolTransactionRequest\n     */\n    network_identifier: NetworkIdentifier;\n    /**\n     * \n     * @type {TransactionIdentifier}\n     * @memberof RosettaMempoolTransactionRequest\n     */\n    transaction_identifier: TransactionIdentifier;\n}\n\nexport function RosettaMempoolTransactionRequestFromJSON(json: any): RosettaMempoolTransactionRequest {\n    return RosettaMempoolTransactionRequestFromJSONTyped(json, false);\n}\n\nexport function RosettaMempoolTransactionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaMempoolTransactionRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierFromJSON(json['network_identifier']),\n        'transaction_identifier': TransactionIdentifierFromJSON(json['transaction_identifier']),\n    };\n}\n\nexport function RosettaMempoolTransactionRequestToJSON(value?: RosettaMempoolTransactionRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierToJSON(value.network_identifier),\n        'transaction_identifier': TransactionIdentifierToJSON(value.transaction_identifier),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    RosettaTransaction,\n    RosettaTransactionFromJSON,\n    RosettaTransactionFromJSONTyped,\n    RosettaTransactionToJSON,\n} from './';\n\n/**\n * A MempoolTransactionResponse contains an estimate of a mempool transaction. It may not be possible to know the full impact of a transaction in the mempool (ex: fee paid).\n * @export\n * @interface RosettaMempoolTransactionResponse\n */\nexport interface RosettaMempoolTransactionResponse {\n    /**\n     * \n     * @type {RosettaTransaction}\n     * @memberof RosettaMempoolTransactionResponse\n     */\n    transaction: RosettaTransaction;\n    /**\n     * \n     * @type {object}\n     * @memberof RosettaMempoolTransactionResponse\n     */\n    metadata?: object;\n}\n\nexport function RosettaMempoolTransactionResponseFromJSON(json: any): RosettaMempoolTransactionResponse {\n    return RosettaMempoolTransactionResponseFromJSONTyped(json, false);\n}\n\nexport function RosettaMempoolTransactionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaMempoolTransactionResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'transaction': RosettaTransactionFromJSON(json['transaction']),\n        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\n\nexport function RosettaMempoolTransactionResponseToJSON(value?: RosettaMempoolTransactionResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'transaction': RosettaTransactionToJSON(value.transaction),\n        'metadata': value.metadata,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    NetworkIdentifier,\n    NetworkIdentifierFromJSON,\n    NetworkIdentifierFromJSONTyped,\n    NetworkIdentifierToJSON,\n} from './';\n\n/**\n * A NetworkListResponse contains all NetworkIdentifiers that the node can serve information for.\n * @export\n * @interface RosettaNetworkListResponse\n */\nexport interface RosettaNetworkListResponse {\n    /**\n     * The network_identifier specifies which network a particular object is associated with.\n     * @type {Array<NetworkIdentifier>}\n     * @memberof RosettaNetworkListResponse\n     */\n    network_identifiers: Array<NetworkIdentifier>;\n}\n\nexport function RosettaNetworkListResponseFromJSON(json: any): RosettaNetworkListResponse {\n    return RosettaNetworkListResponseFromJSONTyped(json, false);\n}\n\nexport function RosettaNetworkListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaNetworkListResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'network_identifiers': ((json['network_identifiers'] as Array<any>).map(NetworkIdentifierFromJSON)),\n    };\n}\n\nexport function RosettaNetworkListResponseToJSON(value?: RosettaNetworkListResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'network_identifiers': ((value.network_identifiers as Array<any>).map(NetworkIdentifierToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    RosettaNetworkListResponseSubNetworkIdentifierMetadata,\n    RosettaNetworkListResponseSubNetworkIdentifierMetadataFromJSON,\n    RosettaNetworkListResponseSubNetworkIdentifierMetadataFromJSONTyped,\n    RosettaNetworkListResponseSubNetworkIdentifierMetadataToJSON,\n} from './';\n\n/**\n * In blockchains with sharded state, the SubNetworkIdentifier is required to query some object on a specific shard. This identifier is optional for all non-sharded blockchains.\n * @export\n * @interface RosettaNetworkListResponseSubNetworkIdentifier\n */\nexport interface RosettaNetworkListResponseSubNetworkIdentifier {\n    /**\n     * Network name\n     * @type {string}\n     * @memberof RosettaNetworkListResponseSubNetworkIdentifier\n     */\n    network: string;\n    /**\n     * \n     * @type {RosettaNetworkListResponseSubNetworkIdentifierMetadata}\n     * @memberof RosettaNetworkListResponseSubNetworkIdentifier\n     */\n    metadata?: RosettaNetworkListResponseSubNetworkIdentifierMetadata;\n}\n\nexport function RosettaNetworkListResponseSubNetworkIdentifierFromJSON(json: any): RosettaNetworkListResponseSubNetworkIdentifier {\n    return RosettaNetworkListResponseSubNetworkIdentifierFromJSONTyped(json, false);\n}\n\nexport function RosettaNetworkListResponseSubNetworkIdentifierFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaNetworkListResponseSubNetworkIdentifier {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'network': json['network'],\n        'metadata': !exists(json, 'metadata') ? undefined : RosettaNetworkListResponseSubNetworkIdentifierMetadataFromJSON(json['metadata']),\n    };\n}\n\nexport function RosettaNetworkListResponseSubNetworkIdentifierToJSON(value?: RosettaNetworkListResponseSubNetworkIdentifier | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'network': value.network,\n        'metadata': RosettaNetworkListResponseSubNetworkIdentifierMetadataToJSON(value.metadata),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Meta data from subnetwork identifier\n * @export\n * @interface RosettaNetworkListResponseSubNetworkIdentifierMetadata\n */\nexport interface RosettaNetworkListResponseSubNetworkIdentifierMetadata {\n    /**\n     * producer\n     * @type {string}\n     * @memberof RosettaNetworkListResponseSubNetworkIdentifierMetadata\n     */\n    producer: string;\n}\n\nexport function RosettaNetworkListResponseSubNetworkIdentifierMetadataFromJSON(json: any): RosettaNetworkListResponseSubNetworkIdentifierMetadata {\n    return RosettaNetworkListResponseSubNetworkIdentifierMetadataFromJSONTyped(json, false);\n}\n\nexport function RosettaNetworkListResponseSubNetworkIdentifierMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaNetworkListResponseSubNetworkIdentifierMetadata {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'producer': json['producer'],\n    };\n}\n\nexport function RosettaNetworkListResponseSubNetworkIdentifierMetadataToJSON(value?: RosettaNetworkListResponseSubNetworkIdentifierMetadata | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'producer': value.producer,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    RosettaNetworkOptionsResponseAllow,\n    RosettaNetworkOptionsResponseAllowFromJSON,\n    RosettaNetworkOptionsResponseAllowFromJSONTyped,\n    RosettaNetworkOptionsResponseAllowToJSON,\n    RosettaNetworkOptionsResponseVersion,\n    RosettaNetworkOptionsResponseVersionFromJSON,\n    RosettaNetworkOptionsResponseVersionFromJSONTyped,\n    RosettaNetworkOptionsResponseVersionToJSON,\n} from './';\n\n/**\n * NetworkOptionsResponse contains information about the versioning of the node and the allowed operation statuses, operation types, and errors.\n * @export\n * @interface RosettaNetworkOptionsResponse\n */\nexport interface RosettaNetworkOptionsResponse {\n    /**\n     * \n     * @type {RosettaNetworkOptionsResponseVersion}\n     * @memberof RosettaNetworkOptionsResponse\n     */\n    version: RosettaNetworkOptionsResponseVersion;\n    /**\n     * \n     * @type {RosettaNetworkOptionsResponseAllow}\n     * @memberof RosettaNetworkOptionsResponse\n     */\n    allow: RosettaNetworkOptionsResponseAllow;\n}\n\nexport function RosettaNetworkOptionsResponseFromJSON(json: any): RosettaNetworkOptionsResponse {\n    return RosettaNetworkOptionsResponseFromJSONTyped(json, false);\n}\n\nexport function RosettaNetworkOptionsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaNetworkOptionsResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'version': RosettaNetworkOptionsResponseVersionFromJSON(json['version']),\n        'allow': RosettaNetworkOptionsResponseAllowFromJSON(json['allow']),\n    };\n}\n\nexport function RosettaNetworkOptionsResponseToJSON(value?: RosettaNetworkOptionsResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'version': RosettaNetworkOptionsResponseVersionToJSON(value.version),\n        'allow': RosettaNetworkOptionsResponseAllowToJSON(value.allow),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    RosettaErrorNoDetails,\n    RosettaErrorNoDetailsFromJSON,\n    RosettaErrorNoDetailsFromJSONTyped,\n    RosettaErrorNoDetailsToJSON,\n    RosettaOperationStatus,\n    RosettaOperationStatusFromJSON,\n    RosettaOperationStatusFromJSONTyped,\n    RosettaOperationStatusToJSON,\n} from './';\n\n/**\n * Allow specifies supported Operation status, Operation types, and all possible error statuses. This Allow object is used by clients to validate the correctness of a Rosetta Server implementation. It is expected that these clients will error if they receive some response that contains any of the above information that is not specified here.\n * @export\n * @interface RosettaNetworkOptionsResponseAllow\n */\nexport interface RosettaNetworkOptionsResponseAllow {\n    /**\n     * All Operation.Status this implementation supports. Any status that is returned during parsing that is not listed here will cause client validation to error.\n     * @type {Array<RosettaOperationStatus>}\n     * @memberof RosettaNetworkOptionsResponseAllow\n     */\n    operation_statuses: Array<RosettaOperationStatus>;\n    /**\n     * All Operation.Type this implementation supports. Any type that is returned during parsing that is not listed here will cause client validation to error.\n     * @type {Array<string>}\n     * @memberof RosettaNetworkOptionsResponseAllow\n     */\n    operation_types: Array<string>;\n    /**\n     * All Errors that this implementation could return. Any error that is returned during parsing that is not listed here will cause client validation to error.\n     * @type {Array<RosettaErrorNoDetails>}\n     * @memberof RosettaNetworkOptionsResponseAllow\n     */\n    errors: Array<RosettaErrorNoDetails>;\n    /**\n     * Any Rosetta implementation that supports querying the balance of an account at any height in the past should set this to true.\n     * @type {boolean}\n     * @memberof RosettaNetworkOptionsResponseAllow\n     */\n    historical_balance_lookup: boolean;\n}\n\nexport function RosettaNetworkOptionsResponseAllowFromJSON(json: any): RosettaNetworkOptionsResponseAllow {\n    return RosettaNetworkOptionsResponseAllowFromJSONTyped(json, false);\n}\n\nexport function RosettaNetworkOptionsResponseAllowFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaNetworkOptionsResponseAllow {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'operation_statuses': ((json['operation_statuses'] as Array<any>).map(RosettaOperationStatusFromJSON)),\n        'operation_types': json['operation_types'],\n        'errors': ((json['errors'] as Array<any>).map(RosettaErrorNoDetailsFromJSON)),\n        'historical_balance_lookup': json['historical_balance_lookup'],\n    };\n}\n\nexport function RosettaNetworkOptionsResponseAllowToJSON(value?: RosettaNetworkOptionsResponseAllow | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'operation_statuses': ((value.operation_statuses as Array<any>).map(RosettaOperationStatusToJSON)),\n        'operation_types': value.operation_types,\n        'errors': ((value.errors as Array<any>).map(RosettaErrorNoDetailsToJSON)),\n        'historical_balance_lookup': value.historical_balance_lookup,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * The Version object is utilized to inform the client of the versions of different components of the Rosetta implementation.\n * @export\n * @interface RosettaNetworkOptionsResponseVersion\n */\nexport interface RosettaNetworkOptionsResponseVersion {\n    /**\n     * The rosetta_version is the version of the Rosetta interface the implementation adheres to. This can be useful for clients looking to reliably parse responses.\n     * @type {string}\n     * @memberof RosettaNetworkOptionsResponseVersion\n     */\n    rosetta_version: string;\n    /**\n     * The node_version is the canonical version of the node runtime. This can help clients manage deployments.\n     * @type {string}\n     * @memberof RosettaNetworkOptionsResponseVersion\n     */\n    node_version: string;\n    /**\n     * When a middleware server is used to adhere to the Rosetta interface, it should return its version here. This can help clients manage deployments.\n     * @type {string}\n     * @memberof RosettaNetworkOptionsResponseVersion\n     */\n    middleware_version?: string;\n    /**\n     * Any other information that may be useful about versioning of dependent services should be returned here.\n     * @type {object}\n     * @memberof RosettaNetworkOptionsResponseVersion\n     */\n    metadata?: object;\n}\n\nexport function RosettaNetworkOptionsResponseVersionFromJSON(json: any): RosettaNetworkOptionsResponseVersion {\n    return RosettaNetworkOptionsResponseVersionFromJSONTyped(json, false);\n}\n\nexport function RosettaNetworkOptionsResponseVersionFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaNetworkOptionsResponseVersion {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'rosetta_version': json['rosetta_version'],\n        'node_version': json['node_version'],\n        'middleware_version': !exists(json, 'middleware_version') ? undefined : json['middleware_version'],\n        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\n\nexport function RosettaNetworkOptionsResponseVersionToJSON(value?: RosettaNetworkOptionsResponseVersion | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'rosetta_version': value.rosetta_version,\n        'node_version': value.node_version,\n        'middleware_version': value.middleware_version,\n        'metadata': value.metadata,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    RosettaGenesisBlockIdentifier,\n    RosettaGenesisBlockIdentifierFromJSON,\n    RosettaGenesisBlockIdentifierFromJSONTyped,\n    RosettaGenesisBlockIdentifierToJSON,\n    RosettaOldestBlockIdentifier,\n    RosettaOldestBlockIdentifierFromJSON,\n    RosettaOldestBlockIdentifierFromJSONTyped,\n    RosettaOldestBlockIdentifierToJSON,\n    RosettaPeers,\n    RosettaPeersFromJSON,\n    RosettaPeersFromJSONTyped,\n    RosettaPeersToJSON,\n    RosettaSyncStatus,\n    RosettaSyncStatusFromJSON,\n    RosettaSyncStatusFromJSONTyped,\n    RosettaSyncStatusToJSON,\n} from './';\n\n/**\n * NetworkStatusResponse contains basic information about the node's view of a blockchain network. It is assumed that any BlockIdentifier.Index less than or equal to CurrentBlockIdentifier.Index can be queried. If a Rosetta implementation prunes historical state, it should populate the optional oldest_block_identifier field with the oldest block available to query. If this is not populated, it is assumed that the genesis_block_identifier is the oldest queryable block. If a Rosetta implementation performs some pre-sync before it is possible to query blocks, sync_status should be populated so that clients can still monitor healthiness. Without this field, it may appear that the implementation is stuck syncing and needs to be terminated.\n * @export\n * @interface RosettaNetworkStatusResponse\n */\nexport interface RosettaNetworkStatusResponse {\n    /**\n     * The block_identifier uniquely identifies a block in a particular network.\n     * @type {object}\n     * @memberof RosettaNetworkStatusResponse\n     */\n    current_block_identifier: object | null;\n    /**\n     * The timestamp of the block in milliseconds since the Unix Epoch. The timestamp is stored in milliseconds because some blockchains produce blocks more often than once a second.\n     * @type {number}\n     * @memberof RosettaNetworkStatusResponse\n     */\n    current_block_timestamp: number;\n    /**\n     * \n     * @type {RosettaGenesisBlockIdentifier}\n     * @memberof RosettaNetworkStatusResponse\n     */\n    genesis_block_identifier: RosettaGenesisBlockIdentifier;\n    /**\n     * \n     * @type {RosettaOldestBlockIdentifier}\n     * @memberof RosettaNetworkStatusResponse\n     */\n    oldest_block_identifier?: RosettaOldestBlockIdentifier;\n    /**\n     * \n     * @type {RosettaSyncStatus}\n     * @memberof RosettaNetworkStatusResponse\n     */\n    sync_status?: RosettaSyncStatus;\n    /**\n     * Peers information\n     * @type {Array<RosettaPeers>}\n     * @memberof RosettaNetworkStatusResponse\n     */\n    peers: Array<RosettaPeers>;\n}\n\nexport function RosettaNetworkStatusResponseFromJSON(json: any): RosettaNetworkStatusResponse {\n    return RosettaNetworkStatusResponseFromJSONTyped(json, false);\n}\n\nexport function RosettaNetworkStatusResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaNetworkStatusResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'current_block_identifier': json['current_block_identifier'],\n        'current_block_timestamp': json['current_block_timestamp'],\n        'genesis_block_identifier': RosettaGenesisBlockIdentifierFromJSON(json['genesis_block_identifier']),\n        'oldest_block_identifier': !exists(json, 'oldest_block_identifier') ? undefined : RosettaOldestBlockIdentifierFromJSON(json['oldest_block_identifier']),\n        'sync_status': !exists(json, 'sync_status') ? undefined : RosettaSyncStatusFromJSON(json['sync_status']),\n        'peers': ((json['peers'] as Array<any>).map(RosettaPeersFromJSON)),\n    };\n}\n\nexport function RosettaNetworkStatusResponseToJSON(value?: RosettaNetworkStatusResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'current_block_identifier': value.current_block_identifier,\n        'current_block_timestamp': value.current_block_timestamp,\n        'genesis_block_identifier': RosettaGenesisBlockIdentifierToJSON(value.genesis_block_identifier),\n        'oldest_block_identifier': RosettaOldestBlockIdentifierToJSON(value.oldest_block_identifier),\n        'sync_status': RosettaSyncStatusToJSON(value.sync_status),\n        'peers': ((value.peers as Array<any>).map(RosettaPeersToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * The block_identifier uniquely identifies a block in a particular network.\n * @export\n * @interface RosettaOldestBlockIdentifier\n */\nexport interface RosettaOldestBlockIdentifier {\n    /**\n     * This is also known as the block height.\n     * @type {number}\n     * @memberof RosettaOldestBlockIdentifier\n     */\n    index: number;\n    /**\n     * Block hash\n     * @type {string}\n     * @memberof RosettaOldestBlockIdentifier\n     */\n    hash: string;\n}\n\nexport function RosettaOldestBlockIdentifierFromJSON(json: any): RosettaOldestBlockIdentifier {\n    return RosettaOldestBlockIdentifierFromJSONTyped(json, false);\n}\n\nexport function RosettaOldestBlockIdentifierFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaOldestBlockIdentifier {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'index': json['index'],\n        'hash': json['hash'],\n    };\n}\n\nexport function RosettaOldestBlockIdentifierToJSON(value?: RosettaOldestBlockIdentifier | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'index': value.index,\n        'hash': value.hash,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    RosettaAccount,\n    RosettaAccountFromJSON,\n    RosettaAccountFromJSONTyped,\n    RosettaAccountToJSON,\n    RosettaAmount,\n    RosettaAmountFromJSON,\n    RosettaAmountFromJSONTyped,\n    RosettaAmountToJSON,\n    RosettaCoinChange,\n    RosettaCoinChangeFromJSON,\n    RosettaCoinChangeFromJSONTyped,\n    RosettaCoinChangeToJSON,\n    RosettaOperationIdentifier,\n    RosettaOperationIdentifierFromJSON,\n    RosettaOperationIdentifierFromJSONTyped,\n    RosettaOperationIdentifierToJSON,\n    RosettaRelatedOperation,\n    RosettaRelatedOperationFromJSON,\n    RosettaRelatedOperationFromJSONTyped,\n    RosettaRelatedOperationToJSON,\n} from './';\n\n/**\n * Operations contain all balance-changing information within a transaction. They are always one-sided (only affect 1 AccountIdentifier) and can succeed or fail independently from a Transaction.\n * @export\n * @interface RosettaOperation\n */\nexport interface RosettaOperation {\n    /**\n     * \n     * @type {RosettaOperationIdentifier}\n     * @memberof RosettaOperation\n     */\n    operation_identifier: RosettaOperationIdentifier;\n    /**\n     * Restrict referenced related_operations to identifier indexes < the current operation_identifier.index. This ensures there exists a clear DAG-structure of relations. Since operations are one-sided, one could imagine relating operations in a single transfer or linking operations in a call tree.\n     * @type {Array<RosettaRelatedOperation>}\n     * @memberof RosettaOperation\n     */\n    related_operations?: Array<RosettaRelatedOperation>;\n    /**\n     * The network-specific type of the operation. Ensure that any type that can be returned here is also specified in the NetworkStatus. This can be very useful to downstream consumers that parse all block data.\n     * @type {string}\n     * @memberof RosettaOperation\n     */\n    type: string;\n    /**\n     * The network-specific status of the operation. Status is not defined on the transaction object because blockchains with smart contracts may have transactions that partially apply. Blockchains with atomic transactions (all operations succeed or all operations fail) will have the same status for each operation.\n     * @type {string}\n     * @memberof RosettaOperation\n     */\n    status?: string;\n    /**\n     * \n     * @type {RosettaAccount}\n     * @memberof RosettaOperation\n     */\n    account?: RosettaAccount;\n    /**\n     * \n     * @type {RosettaAmount}\n     * @memberof RosettaOperation\n     */\n    amount?: RosettaAmount;\n    /**\n     * \n     * @type {RosettaCoinChange}\n     * @memberof RosettaOperation\n     */\n    coin_change?: RosettaCoinChange;\n    /**\n     * Operations Meta Data\n     * @type {object}\n     * @memberof RosettaOperation\n     */\n    metadata?: object;\n}\n\nexport function RosettaOperationFromJSON(json: any): RosettaOperation {\n    return RosettaOperationFromJSONTyped(json, false);\n}\n\nexport function RosettaOperationFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaOperation {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'operation_identifier': RosettaOperationIdentifierFromJSON(json['operation_identifier']),\n        'related_operations': !exists(json, 'related_operations') ? undefined : ((json['related_operations'] as Array<any>).map(RosettaRelatedOperationFromJSON)),\n        'type': json['type'],\n        'status': !exists(json, 'status') ? undefined : json['status'],\n        'account': !exists(json, 'account') ? undefined : RosettaAccountFromJSON(json['account']),\n        'amount': !exists(json, 'amount') ? undefined : RosettaAmountFromJSON(json['amount']),\n        'coin_change': !exists(json, 'coin_change') ? undefined : RosettaCoinChangeFromJSON(json['coin_change']),\n        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\n\nexport function RosettaOperationToJSON(value?: RosettaOperation | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'operation_identifier': RosettaOperationIdentifierToJSON(value.operation_identifier),\n        'related_operations': value.related_operations === undefined ? undefined : ((value.related_operations as Array<any>).map(RosettaRelatedOperationToJSON)),\n        'type': value.type,\n        'status': value.status,\n        'account': RosettaAccountToJSON(value.account),\n        'amount': RosettaAmountToJSON(value.amount),\n        'coin_change': RosettaCoinChangeToJSON(value.coin_change),\n        'metadata': value.metadata,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * The operation_identifier uniquely identifies an operation within a transaction.\n * @export\n * @interface RosettaOperationIdentifier\n */\nexport interface RosettaOperationIdentifier {\n    /**\n     * The operation index is used to ensure each operation has a unique identifier within a transaction. This index is only relative to the transaction and NOT GLOBAL. The operations in each transaction should start from index 0. To clarify, there may not be any notion of an operation index in the blockchain being described.\n     * @type {number}\n     * @memberof RosettaOperationIdentifier\n     */\n    index: number;\n    /**\n     * Some blockchains specify an operation index that is essential for client use. For example, Bitcoin uses a network_index to identify which UTXO was used in a transaction. network_index should not be populated if there is no notion of an operation index in a blockchain (typically most account-based blockchains).\n     * @type {number}\n     * @memberof RosettaOperationIdentifier\n     */\n    network_index?: number;\n}\n\nexport function RosettaOperationIdentifierFromJSON(json: any): RosettaOperationIdentifier {\n    return RosettaOperationIdentifierFromJSONTyped(json, false);\n}\n\nexport function RosettaOperationIdentifierFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaOperationIdentifier {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'index': json['index'],\n        'network_index': !exists(json, 'network_index') ? undefined : json['network_index'],\n    };\n}\n\nexport function RosettaOperationIdentifierToJSON(value?: RosettaOperationIdentifier | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'index': value.index,\n        'network_index': value.network_index,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * OperationStatus is utilized to indicate which Operation status are considered successful.\n * @export\n * @interface RosettaOperationStatus\n */\nexport interface RosettaOperationStatus {\n    /**\n     * The status is the network-specific status of the operation.\n     * @type {string}\n     * @memberof RosettaOperationStatus\n     */\n    status: string;\n    /**\n     * An Operation is considered successful if the Operation.Amount should affect the Operation.Account. Some blockchains (like Bitcoin) only include successful operations in blocks but other blockchains (like Ethereum) include unsuccessful operations that incur a fee. To reconcile the computed balance from the stream of Operations, it is critical to understand which Operation.Status indicate an Operation is successful and should affect an Account.\n     * @type {boolean}\n     * @memberof RosettaOperationStatus\n     */\n    successful: boolean;\n}\n\nexport function RosettaOperationStatusFromJSON(json: any): RosettaOperationStatus {\n    return RosettaOperationStatusFromJSONTyped(json, false);\n}\n\nexport function RosettaOperationStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaOperationStatus {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'status': json['status'],\n        'successful': json['successful'],\n    };\n}\n\nexport function RosettaOperationStatusToJSON(value?: RosettaOperationStatus | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'status': value.status,\n        'successful': value.successful,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * The options that will be sent directly to /construction/metadata by the caller.\n * @export\n * @interface RosettaOptions\n */\nexport interface RosettaOptions {\n    /**\n     * sender's address \n     * @type {string}\n     * @memberof RosettaOptions\n     */\n    sender_address?: string;\n    /**\n     * Type of operation e.g transfer\n     * @type {string}\n     * @memberof RosettaOptions\n     */\n    type?: string;\n    /**\n     * This value indicates the state of the operations\n     * @type {string}\n     * @memberof RosettaOptions\n     */\n    status?: string;\n    /**\n     * Recipient's address\n     * @type {string}\n     * @memberof RosettaOptions\n     */\n    token_transfer_recipient_address?: string;\n    /**\n     * Amount to be transfered.\n     * @type {string}\n     * @memberof RosettaOptions\n     */\n    amount?: string;\n    /**\n     * Currency symbol e.g STX\n     * @type {string}\n     * @memberof RosettaOptions\n     */\n    symbol?: string;\n    /**\n     * Number of decimal places\n     * @type {number}\n     * @memberof RosettaOptions\n     */\n    decimals?: number;\n    /**\n     * Maximum price a user is willing to pay.\n     * @type {number}\n     * @memberof RosettaOptions\n     */\n    gas_limit?: number;\n    /**\n     * Cost necessary to perform a transaction on the network\n     * @type {number}\n     * @memberof RosettaOptions\n     */\n    gas_price?: number;\n    /**\n     *  A suggested fee multiplier to indicate that the suggested fee should be scaled. This may be used to set higher fees for urgent transactions or to pay lower fees when there is less urgency.\n     * @type {number}\n     * @memberof RosettaOptions\n     */\n    suggested_fee_multiplier?: number;\n    /**\n     * Maximum fee user is willing to pay\n     * @type {string}\n     * @memberof RosettaOptions\n     */\n    max_fee?: string;\n    /**\n     * Fee for this transaction\n     * @type {string}\n     * @memberof RosettaOptions\n     */\n    fee?: string;\n    /**\n     * Transaction approximative size (used to calculate total fee).\n     * @type {number}\n     * @memberof RosettaOptions\n     */\n    size?: number;\n    /**\n     * STX token transfer memo.\n     * @type {string}\n     * @memberof RosettaOptions\n     */\n    memo?: string;\n    /**\n     * Number of cycles when stacking.\n     * @type {number}\n     * @memberof RosettaOptions\n     */\n    number_of_cycles?: number;\n    /**\n     * Address of the contract to call.\n     * @type {string}\n     * @memberof RosettaOptions\n     */\n    contract_address?: string;\n    /**\n     * Name of the contract to call.\n     * @type {string}\n     * @memberof RosettaOptions\n     */\n    contract_name?: string;\n    /**\n     * Set the burnchain (BTC) block for stacking lock to start.\n     * @type {number}\n     * @memberof RosettaOptions\n     */\n    burn_block_height?: number;\n    /**\n     * Delegator address for when calling `delegate-stacking`.\n     * @type {string}\n     * @memberof RosettaOptions\n     */\n    delegate_to?: string;\n    /**\n     * The reward address for stacking transaction. It should be a valid Bitcoin address\n     * @type {string}\n     * @memberof RosettaOptions\n     */\n    pox_addr?: string;\n}\n\nexport function RosettaOptionsFromJSON(json: any): RosettaOptions {\n    return RosettaOptionsFromJSONTyped(json, false);\n}\n\nexport function RosettaOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaOptions {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'sender_address': !exists(json, 'sender_address') ? undefined : json['sender_address'],\n        'type': !exists(json, 'type') ? undefined : json['type'],\n        'status': !exists(json, 'status') ? undefined : json['status'],\n        'token_transfer_recipient_address': !exists(json, 'token_transfer_recipient_address') ? undefined : json['token_transfer_recipient_address'],\n        'amount': !exists(json, 'amount') ? undefined : json['amount'],\n        'symbol': !exists(json, 'symbol') ? undefined : json['symbol'],\n        'decimals': !exists(json, 'decimals') ? undefined : json['decimals'],\n        'gas_limit': !exists(json, 'gas_limit') ? undefined : json['gas_limit'],\n        'gas_price': !exists(json, 'gas_price') ? undefined : json['gas_price'],\n        'suggested_fee_multiplier': !exists(json, 'suggested_fee_multiplier') ? undefined : json['suggested_fee_multiplier'],\n        'max_fee': !exists(json, 'max_fee') ? undefined : json['max_fee'],\n        'fee': !exists(json, 'fee') ? undefined : json['fee'],\n        'size': !exists(json, 'size') ? undefined : json['size'],\n        'memo': !exists(json, 'memo') ? undefined : json['memo'],\n        'number_of_cycles': !exists(json, 'number_of_cycles') ? undefined : json['number_of_cycles'],\n        'contract_address': !exists(json, 'contract_address') ? undefined : json['contract_address'],\n        'contract_name': !exists(json, 'contract_name') ? undefined : json['contract_name'],\n        'burn_block_height': !exists(json, 'burn_block_height') ? undefined : json['burn_block_height'],\n        'delegate_to': !exists(json, 'delegate_to') ? undefined : json['delegate_to'],\n        'pox_addr': !exists(json, 'pox_addr') ? undefined : json['pox_addr'],\n    };\n}\n\nexport function RosettaOptionsToJSON(value?: RosettaOptions | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'sender_address': value.sender_address,\n        'type': value.type,\n        'status': value.status,\n        'token_transfer_recipient_address': value.token_transfer_recipient_address,\n        'amount': value.amount,\n        'symbol': value.symbol,\n        'decimals': value.decimals,\n        'gas_limit': value.gas_limit,\n        'gas_price': value.gas_price,\n        'suggested_fee_multiplier': value.suggested_fee_multiplier,\n        'max_fee': value.max_fee,\n        'fee': value.fee,\n        'size': value.size,\n        'memo': value.memo,\n        'number_of_cycles': value.number_of_cycles,\n        'contract_address': value.contract_address,\n        'contract_name': value.contract_name,\n        'burn_block_height': value.burn_block_height,\n        'delegate_to': value.delegate_to,\n        'pox_addr': value.pox_addr,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    NetworkIdentifier,\n    NetworkIdentifierFromJSON,\n    NetworkIdentifierFromJSONTyped,\n    NetworkIdentifierToJSON,\n} from './';\n\n/**\n * This endpoint returns the version information and allowed network-specific types for a NetworkIdentifier. Any NetworkIdentifier returned by /network/list should be accessible here. Because options are retrievable in the context of a NetworkIdentifier, it is possible to define unique options for each network.\n * @export\n * @interface RosettaOptionsRequest\n */\nexport interface RosettaOptionsRequest {\n    /**\n     * \n     * @type {NetworkIdentifier}\n     * @memberof RosettaOptionsRequest\n     */\n    network_identifier: NetworkIdentifier;\n    /**\n     * \n     * @type {object}\n     * @memberof RosettaOptionsRequest\n     */\n    metadata?: object;\n}\n\nexport function RosettaOptionsRequestFromJSON(json: any): RosettaOptionsRequest {\n    return RosettaOptionsRequestFromJSONTyped(json, false);\n}\n\nexport function RosettaOptionsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaOptionsRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierFromJSON(json['network_identifier']),\n        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\n\nexport function RosettaOptionsRequestToJSON(value?: RosettaOptionsRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierToJSON(value.network_identifier),\n        'metadata': value.metadata,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * The block_identifier uniquely identifies a block in a particular network.\n * @export\n * @interface RosettaParentBlockIdentifier\n */\nexport interface RosettaParentBlockIdentifier {\n    /**\n     * This is also known as the block height.\n     * @type {number}\n     * @memberof RosettaParentBlockIdentifier\n     */\n    index: number;\n    /**\n     * Block hash\n     * @type {string}\n     * @memberof RosettaParentBlockIdentifier\n     */\n    hash: string;\n}\n\nexport function RosettaParentBlockIdentifierFromJSON(json: any): RosettaParentBlockIdentifier {\n    return RosettaParentBlockIdentifierFromJSONTyped(json, false);\n}\n\nexport function RosettaParentBlockIdentifierFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaParentBlockIdentifier {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'index': json['index'],\n        'hash': json['hash'],\n    };\n}\n\nexport function RosettaParentBlockIdentifierToJSON(value?: RosettaParentBlockIdentifier | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'index': value.index,\n        'hash': value.hash,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * A Peer is a representation of a node's peer.\n * @export\n * @interface RosettaPeers\n */\nexport interface RosettaPeers {\n    /**\n     * peer id\n     * @type {string}\n     * @memberof RosettaPeers\n     */\n    peer_id: string;\n    /**\n     * meta data\n     * @type {object}\n     * @memberof RosettaPeers\n     */\n    metadata?: object;\n}\n\nexport function RosettaPeersFromJSON(json: any): RosettaPeers {\n    return RosettaPeersFromJSONTyped(json, false);\n}\n\nexport function RosettaPeersFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaPeers {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'peer_id': json['peer_id'],\n        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\n\nexport function RosettaPeersToJSON(value?: RosettaPeers | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'peer_id': value.peer_id,\n        'metadata': value.metadata,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * PublicKey contains a public key byte array for a particular CurveType encoded in hex. Note that there is no PrivateKey struct as this is NEVER the concern of an implementation.\n * @export\n * @interface RosettaPublicKey\n */\nexport interface RosettaPublicKey {\n    /**\n     * Hex-encoded public key bytes in the format specified by the CurveType.\n     * @type {string}\n     * @memberof RosettaPublicKey\n     */\n    hex_bytes: string;\n    /**\n     * CurveType is the type of cryptographic curve associated with a PublicKey.\n     * @type {string}\n     * @memberof RosettaPublicKey\n     */\n    curve_type: RosettaPublicKeyCurveTypeEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum RosettaPublicKeyCurveTypeEnum {\n    secp256k1 = 'secp256k1',\n    edwards25519 = 'edwards25519'\n}\n\nexport function RosettaPublicKeyFromJSON(json: any): RosettaPublicKey {\n    return RosettaPublicKeyFromJSONTyped(json, false);\n}\n\nexport function RosettaPublicKeyFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaPublicKey {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'hex_bytes': json['hex_bytes'],\n        'curve_type': json['curve_type'],\n    };\n}\n\nexport function RosettaPublicKeyToJSON(value?: RosettaPublicKey | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'hex_bytes': value.hex_bytes,\n        'curve_type': value.curve_type,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Restrict referenced related_operations to identifier indexes < the current operation_identifier.index. This ensures there exists a clear DAG-structure of relations. Since operations are one-sided, one could imagine relating operations in a single transfer or linking operations in a call tree.\n * @export\n * @interface RosettaRelatedOperation\n */\nexport interface RosettaRelatedOperation {\n    /**\n     * Describes the index of related operation.\n     * @type {number}\n     * @memberof RosettaRelatedOperation\n     */\n    index: number;\n    /**\n     * Some blockchains specify an operation index that is essential for client use. network_index should not be populated if there is no notion of an operation index in a blockchain (typically most account-based blockchains).\n     * @type {number}\n     * @memberof RosettaRelatedOperation\n     */\n    network_index?: number;\n}\n\nexport function RosettaRelatedOperationFromJSON(json: any): RosettaRelatedOperation {\n    return RosettaRelatedOperationFromJSONTyped(json, false);\n}\n\nexport function RosettaRelatedOperationFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaRelatedOperation {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'index': json['index'],\n        'network_index': !exists(json, 'network_index') ? undefined : json['network_index'],\n    };\n}\n\nexport function RosettaRelatedOperationToJSON(value?: RosettaRelatedOperation | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'index': value.index,\n        'network_index': value.network_index,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    RosettaPublicKey,\n    RosettaPublicKeyFromJSON,\n    RosettaPublicKeyFromJSONTyped,\n    RosettaPublicKeyToJSON,\n    SigningPayload,\n    SigningPayloadFromJSON,\n    SigningPayloadFromJSONTyped,\n    SigningPayloadToJSON,\n} from './';\n\n/**\n * Signature contains the payload that was signed, the public keys of the keypairs used to produce the signature, the signature (encoded in hex), and the SignatureType. PublicKey is often times not known during construction of the signing payloads but may be needed to combine signatures properly.\n * @export\n * @interface RosettaSignature\n */\nexport interface RosettaSignature {\n    /**\n     * \n     * @type {SigningPayload}\n     * @memberof RosettaSignature\n     */\n    signing_payload: SigningPayload;\n    /**\n     * \n     * @type {RosettaPublicKey}\n     * @memberof RosettaSignature\n     */\n    public_key: RosettaPublicKey;\n    /**\n     * SignatureType is the type of a cryptographic signature.\n     * @type {string}\n     * @memberof RosettaSignature\n     */\n    signature_type: RosettaSignatureSignatureTypeEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof RosettaSignature\n     */\n    hex_bytes: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum RosettaSignatureSignatureTypeEnum {\n    ecdsa = 'ecdsa',\n    ecdsa_recovery = 'ecdsa_recovery',\n    ed25519 = 'ed25519',\n    schnorr_1 = 'schnorr_1',\n    schnorr_poseidon = 'schnorr_poseidon'\n}\n\nexport function RosettaSignatureFromJSON(json: any): RosettaSignature {\n    return RosettaSignatureFromJSONTyped(json, false);\n}\n\nexport function RosettaSignatureFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaSignature {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'signing_payload': SigningPayloadFromJSON(json['signing_payload']),\n        'public_key': RosettaPublicKeyFromJSON(json['public_key']),\n        'signature_type': json['signature_type'],\n        'hex_bytes': json['hex_bytes'],\n    };\n}\n\nexport function RosettaSignatureToJSON(value?: RosettaSignature | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'signing_payload': SigningPayloadToJSON(value.signing_payload),\n        'public_key': RosettaPublicKeyToJSON(value.public_key),\n        'signature_type': value.signature_type,\n        'hex_bytes': value.hex_bytes,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    NetworkIdentifier,\n    NetworkIdentifierFromJSON,\n    NetworkIdentifierFromJSONTyped,\n    NetworkIdentifierToJSON,\n} from './';\n\n/**\n * This endpoint returns the current status of the network requested. Any NetworkIdentifier returned by /network/list should be accessible here.\n * @export\n * @interface RosettaStatusRequest\n */\nexport interface RosettaStatusRequest {\n    /**\n     * \n     * @type {NetworkIdentifier}\n     * @memberof RosettaStatusRequest\n     */\n    network_identifier: NetworkIdentifier;\n    /**\n     * \n     * @type {object}\n     * @memberof RosettaStatusRequest\n     */\n    metadata?: object;\n}\n\nexport function RosettaStatusRequestFromJSON(json: any): RosettaStatusRequest {\n    return RosettaStatusRequestFromJSONTyped(json, false);\n}\n\nexport function RosettaStatusRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaStatusRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierFromJSON(json['network_identifier']),\n        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\n\nexport function RosettaStatusRequestToJSON(value?: RosettaStatusRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'network_identifier': NetworkIdentifierToJSON(value.network_identifier),\n        'metadata': value.metadata,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * An account may have state specific to a contract address (ERC-20 token) and/or a stake (delegated balance). The sub_account_identifier should specify which state (if applicable) an account instantiation refers to.\n * @export\n * @interface RosettaSubAccount\n */\nexport interface RosettaSubAccount {\n    /**\n     * The address may be a cryptographic public key (or some encoding of it) or a provided username.\n     * @type {string}\n     * @memberof RosettaSubAccount\n     */\n    address: string;\n    /**\n     * If the SubAccount address is not sufficient to uniquely specify a SubAccount, any other identifying information can be stored here. It is important to note that two SubAccounts with identical addresses but differing metadata will not be considered equal by clients.\n     * @type {object}\n     * @memberof RosettaSubAccount\n     */\n    metadata?: object;\n}\n\nexport function RosettaSubAccountFromJSON(json: any): RosettaSubAccount {\n    return RosettaSubAccountFromJSONTyped(json, false);\n}\n\nexport function RosettaSubAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaSubAccount {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'address': json['address'],\n        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\n\nexport function RosettaSubAccountToJSON(value?: RosettaSubAccount | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'address': value.address,\n        'metadata': value.metadata,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * SyncStatus is used to provide additional context about an implementation's sync status. It is often used to indicate that an implementation is healthy when it cannot be queried until some sync phase occurs. If an implementation is immediately queryable, this model is often not populated.\n * @export\n * @interface RosettaSyncStatus\n */\nexport interface RosettaSyncStatus {\n    /**\n     * CurrentIndex is the index of the last synced block in the current stage.\n     * @type {number}\n     * @memberof RosettaSyncStatus\n     */\n    current_index: number;\n    /**\n     * TargetIndex is the index of the block that the implementation is attempting to sync to in the current stage.\n     * @type {number}\n     * @memberof RosettaSyncStatus\n     */\n    target_index?: number;\n    /**\n     * Stage is the phase of the sync process.\n     * @type {string}\n     * @memberof RosettaSyncStatus\n     */\n    stage?: string;\n    /**\n     * Synced indicates if an implementation has synced up to the most recent block.\n     * @type {boolean}\n     * @memberof RosettaSyncStatus\n     */\n    synced?: boolean;\n}\n\nexport function RosettaSyncStatusFromJSON(json: any): RosettaSyncStatus {\n    return RosettaSyncStatusFromJSONTyped(json, false);\n}\n\nexport function RosettaSyncStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaSyncStatus {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'current_index': json['current_index'],\n        'target_index': !exists(json, 'target_index') ? undefined : json['target_index'],\n        'stage': !exists(json, 'stage') ? undefined : json['stage'],\n        'synced': !exists(json, 'synced') ? undefined : json['synced'],\n    };\n}\n\nexport function RosettaSyncStatusToJSON(value?: RosettaSyncStatus | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'current_index': value.current_index,\n        'target_index': value.target_index,\n        'stage': value.stage,\n        'synced': value.synced,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    RosettaBlockMetadata,\n    RosettaBlockMetadataFromJSON,\n    RosettaBlockMetadataFromJSONTyped,\n    RosettaBlockMetadataToJSON,\n    RosettaOperation,\n    RosettaOperationFromJSON,\n    RosettaOperationFromJSONTyped,\n    RosettaOperationToJSON,\n    TransactionIdentifier,\n    TransactionIdentifierFromJSON,\n    TransactionIdentifierFromJSONTyped,\n    TransactionIdentifierToJSON,\n} from './';\n\n/**\n * Transactions contain an array of Operations that are attributable to the same TransactionIdentifier.\n * @export\n * @interface RosettaTransaction\n */\nexport interface RosettaTransaction {\n    /**\n     * \n     * @type {TransactionIdentifier}\n     * @memberof RosettaTransaction\n     */\n    transaction_identifier: TransactionIdentifier;\n    /**\n     * List of operations\n     * @type {Array<RosettaOperation>}\n     * @memberof RosettaTransaction\n     */\n    operations: Array<RosettaOperation>;\n    /**\n     * \n     * @type {RosettaBlockMetadata}\n     * @memberof RosettaTransaction\n     */\n    metadata?: RosettaBlockMetadata;\n}\n\nexport function RosettaTransactionFromJSON(json: any): RosettaTransaction {\n    return RosettaTransactionFromJSONTyped(json, false);\n}\n\nexport function RosettaTransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaTransaction {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'transaction_identifier': TransactionIdentifierFromJSON(json['transaction_identifier']),\n        'operations': ((json['operations'] as Array<any>).map(RosettaOperationFromJSON)),\n        'metadata': !exists(json, 'metadata') ? undefined : RosettaBlockMetadataFromJSON(json['metadata']),\n    };\n}\n\nexport function RosettaTransactionToJSON(value?: RosettaTransaction | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'transaction_identifier': TransactionIdentifierToJSON(value.transaction_identifier),\n        'operations': ((value.operations as Array<any>).map(RosettaOperationToJSON)),\n        'metadata': RosettaBlockMetadataToJSON(value.metadata),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * POST request that initiates a transfer of tokens to a specified testnet address\n * @export\n * @interface RunFaucetResponse\n */\nexport interface RunFaucetResponse {\n    /**\n     * Indicates if the faucet call was successful\n     * @type {boolean}\n     * @memberof RunFaucetResponse\n     */\n    success: boolean;\n    /**\n     * The transaction ID for the faucet call\n     * @type {string}\n     * @memberof RunFaucetResponse\n     */\n    txId?: string;\n    /**\n     * Raw transaction in hex string representation\n     * @type {string}\n     * @memberof RunFaucetResponse\n     */\n    txRaw?: string;\n}\n\nexport function RunFaucetResponseFromJSON(json: any): RunFaucetResponse {\n    return RunFaucetResponseFromJSONTyped(json, false);\n}\n\nexport function RunFaucetResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RunFaucetResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'success': json['success'],\n        'txId': !exists(json, 'txId') ? undefined : json['txId'],\n        'txRaw': !exists(json, 'txRaw') ? undefined : json['txRaw'],\n    };\n}\n\nexport function RunFaucetResponseToJSON(value?: RunFaucetResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'success': value.success,\n        'txId': value.txId,\n        'txRaw': value.txRaw,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    ChainTip,\n    ChainTipFromJSON,\n    ChainTipFromJSONTyped,\n    ChainTipToJSON,\n} from './';\n\n/**\n * GET blockchain API status\n * @export\n * @interface ServerStatusResponse\n */\nexport interface ServerStatusResponse {\n    /**\n     * the server version that is currently running\n     * @type {string}\n     * @memberof ServerStatusResponse\n     */\n    server_version?: string;\n    /**\n     * the current server status\n     * @type {string}\n     * @memberof ServerStatusResponse\n     */\n    status: string;\n    /**\n     * \n     * @type {number}\n     * @memberof ServerStatusResponse\n     */\n    pox_v1_unlock_height?: number | null;\n    /**\n     * \n     * @type {ChainTip}\n     * @memberof ServerStatusResponse\n     */\n    chain_tip?: ChainTip;\n}\n\nexport function ServerStatusResponseFromJSON(json: any): ServerStatusResponse {\n    return ServerStatusResponseFromJSONTyped(json, false);\n}\n\nexport function ServerStatusResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServerStatusResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'server_version': !exists(json, 'server_version') ? undefined : json['server_version'],\n        'status': json['status'],\n        'pox_v1_unlock_height': !exists(json, 'pox_v1_unlock_height') ? undefined : json['pox_v1_unlock_height'],\n        'chain_tip': !exists(json, 'chain_tip') ? undefined : ChainTipFromJSON(json['chain_tip']),\n    };\n}\n\nexport function ServerStatusResponseToJSON(value?: ServerStatusResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'server_version': value.server_version,\n        'status': value.status,\n        'pox_v1_unlock_height': value.pox_v1_unlock_height,\n        'chain_tip': ChainTipToJSON(value.chain_tip),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    RosettaAccount,\n    RosettaAccountFromJSON,\n    RosettaAccountFromJSONTyped,\n    RosettaAccountToJSON,\n} from './';\n\n/**\n * SigningPayload is signed by the client with the keypair associated with an address using the specified SignatureType. SignatureType can be optionally populated if there is a restriction on the signature scheme that can be used to sign the payload.\n * @export\n * @interface SigningPayload\n */\nexport interface SigningPayload {\n    /**\n     * [DEPRECATED by account_identifier in v1.4.4] The network-specific address of the account that should sign the payload.\n     * @type {string}\n     * @memberof SigningPayload\n     */\n    address?: string;\n    /**\n     * \n     * @type {RosettaAccount}\n     * @memberof SigningPayload\n     */\n    account_identifier?: RosettaAccount;\n    /**\n     * \n     * @type {string}\n     * @memberof SigningPayload\n     */\n    hex_bytes: string;\n    /**\n     * SignatureType is the type of a cryptographic signature.\n     * @type {string}\n     * @memberof SigningPayload\n     */\n    signature_type?: SigningPayloadSignatureTypeEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum SigningPayloadSignatureTypeEnum {\n    ecdsa = 'ecdsa',\n    ecdsa_recovery = 'ecdsa_recovery',\n    ed25519 = 'ed25519',\n    schnorr_1 = 'schnorr_1',\n    schnorr_poseidon = 'schnorr_poseidon'\n}\n\nexport function SigningPayloadFromJSON(json: any): SigningPayload {\n    return SigningPayloadFromJSONTyped(json, false);\n}\n\nexport function SigningPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): SigningPayload {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'address': !exists(json, 'address') ? undefined : json['address'],\n        'account_identifier': !exists(json, 'account_identifier') ? undefined : RosettaAccountFromJSON(json['account_identifier']),\n        'hex_bytes': json['hex_bytes'],\n        'signature_type': !exists(json, 'signature_type') ? undefined : json['signature_type'],\n    };\n}\n\nexport function SigningPayloadToJSON(value?: SigningPayload | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'address': value.address,\n        'account_identifier': RosettaAccountToJSON(value.account_identifier),\n        'hex_bytes': value.hex_bytes,\n        'signature_type': value.signature_type,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * A Smart Contract Detail\n * @export\n * @interface SmartContract\n */\nexport interface SmartContract {\n    /**\n     * \n     * @type {string}\n     * @memberof SmartContract\n     */\n    tx_id: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof SmartContract\n     */\n    canonical: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof SmartContract\n     */\n    contract_id: string;\n    /**\n     * \n     * @type {number}\n     * @memberof SmartContract\n     */\n    block_height: number;\n    /**\n     * \n     * @type {string}\n     * @memberof SmartContract\n     */\n    source_code: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SmartContract\n     */\n    abi: string;\n}\n\nexport function SmartContractFromJSON(json: any): SmartContract {\n    return SmartContractFromJSONTyped(json, false);\n}\n\nexport function SmartContractFromJSONTyped(json: any, ignoreDiscriminator: boolean): SmartContract {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'tx_id': json['tx_id'],\n        'canonical': json['canonical'],\n        'contract_id': json['contract_id'],\n        'block_height': json['block_height'],\n        'source_code': json['source_code'],\n        'abi': json['abi'],\n    };\n}\n\nexport function SmartContractToJSON(value?: SmartContract | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'tx_id': value.tx_id,\n        'canonical': value.canonical,\n        'contract_id': value.contract_id,\n        'block_height': value.block_height,\n        'source_code': value.source_code,\n        'abi': value.abi,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface StxBalance\n */\nexport interface StxBalance {\n    /**\n     * \n     * @type {string}\n     * @memberof StxBalance\n     */\n    balance: string;\n    /**\n     * \n     * @type {string}\n     * @memberof StxBalance\n     */\n    total_sent: string;\n    /**\n     * \n     * @type {string}\n     * @memberof StxBalance\n     */\n    total_received: string;\n    /**\n     * \n     * @type {string}\n     * @memberof StxBalance\n     */\n    total_fees_sent: string;\n    /**\n     * \n     * @type {string}\n     * @memberof StxBalance\n     */\n    total_miner_rewards_received: string;\n    /**\n     * The transaction where the lock event occurred. Empty if no tokens are locked.\n     * @type {string}\n     * @memberof StxBalance\n     */\n    lock_tx_id: string;\n    /**\n     * The amount of locked STX, as string quoted micro-STX. Zero if no tokens are locked.\n     * @type {string}\n     * @memberof StxBalance\n     */\n    locked: string;\n    /**\n     * The STX chain block height of when the lock event occurred. Zero if no tokens are locked.\n     * @type {number}\n     * @memberof StxBalance\n     */\n    lock_height: number;\n    /**\n     * The burnchain block height of when the lock event occurred. Zero if no tokens are locked.\n     * @type {number}\n     * @memberof StxBalance\n     */\n    burnchain_lock_height: number;\n    /**\n     * The burnchain block height of when the tokens unlock. Zero if no tokens are locked.\n     * @type {number}\n     * @memberof StxBalance\n     */\n    burnchain_unlock_height: number;\n}\n\nexport function StxBalanceFromJSON(json: any): StxBalance {\n    return StxBalanceFromJSONTyped(json, false);\n}\n\nexport function StxBalanceFromJSONTyped(json: any, ignoreDiscriminator: boolean): StxBalance {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'balance': json['balance'],\n        'total_sent': json['total_sent'],\n        'total_received': json['total_received'],\n        'total_fees_sent': json['total_fees_sent'],\n        'total_miner_rewards_received': json['total_miner_rewards_received'],\n        'lock_tx_id': json['lock_tx_id'],\n        'locked': json['locked'],\n        'lock_height': json['lock_height'],\n        'burnchain_lock_height': json['burnchain_lock_height'],\n        'burnchain_unlock_height': json['burnchain_unlock_height'],\n    };\n}\n\nexport function StxBalanceToJSON(value?: StxBalance | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'balance': value.balance,\n        'total_sent': value.total_sent,\n        'total_received': value.total_received,\n        'total_fees_sent': value.total_fees_sent,\n        'total_miner_rewards_received': value.total_miner_rewards_received,\n        'lock_tx_id': value.lock_tx_id,\n        'locked': value.locked,\n        'lock_height': value.lock_height,\n        'burnchain_lock_height': value.burnchain_lock_height,\n        'burnchain_unlock_height': value.burnchain_unlock_height,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TargetBlockTime\n */\nexport interface TargetBlockTime {\n    /**\n     * \n     * @type {number}\n     * @memberof TargetBlockTime\n     */\n    target_block_time: number;\n}\n\nexport function TargetBlockTimeFromJSON(json: any): TargetBlockTime {\n    return TargetBlockTimeFromJSONTyped(json, false);\n}\n\nexport function TargetBlockTimeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TargetBlockTime {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'target_block_time': json['target_block_time'],\n    };\n}\n\nexport function TargetBlockTimeToJSON(value?: TargetBlockTime | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'target_block_time': value.target_block_time,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * GET event for the given transaction\n * @export\n * @interface TransactionEventsResponse\n */\nexport interface TransactionEventsResponse {\n    /**\n     * \n     * @type {number}\n     * @memberof TransactionEventsResponse\n     */\n    limit: number;\n    /**\n     * \n     * @type {number}\n     * @memberof TransactionEventsResponse\n     */\n    offset: number;\n    /**\n     * \n     * @type {Array<object>}\n     * @memberof TransactionEventsResponse\n     */\n    results: Array<object>;\n}\n\nexport function TransactionEventsResponseFromJSON(json: any): TransactionEventsResponse {\n    return TransactionEventsResponseFromJSONTyped(json, false);\n}\n\nexport function TransactionEventsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionEventsResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'limit': json['limit'],\n        'offset': json['offset'],\n        'results': json['results'],\n    };\n}\n\nexport function TransactionEventsResponseToJSON(value?: TransactionEventsResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'limit': value.limit,\n        'offset': value.offset,\n        'results': value.results,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * POST request for estimated fee\n * @export\n * @interface TransactionFeeEstimateRequest\n */\nexport interface TransactionFeeEstimateRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof TransactionFeeEstimateRequest\n     */\n    transaction_payload: string;\n    /**\n     * \n     * @type {number}\n     * @memberof TransactionFeeEstimateRequest\n     */\n    estimated_len?: number;\n}\n\nexport function TransactionFeeEstimateRequestFromJSON(json: any): TransactionFeeEstimateRequest {\n    return TransactionFeeEstimateRequestFromJSONTyped(json, false);\n}\n\nexport function TransactionFeeEstimateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionFeeEstimateRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'transaction_payload': json['transaction_payload'],\n        'estimated_len': !exists(json, 'estimated_len') ? undefined : json['estimated_len'],\n    };\n}\n\nexport function TransactionFeeEstimateRequestToJSON(value?: TransactionFeeEstimateRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'transaction_payload': value.transaction_payload,\n        'estimated_len': value.estimated_len,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    TransactionFeeEstimateResponseEstimatedCost,\n    TransactionFeeEstimateResponseEstimatedCostFromJSON,\n    TransactionFeeEstimateResponseEstimatedCostFromJSONTyped,\n    TransactionFeeEstimateResponseEstimatedCostToJSON,\n    TransactionFeeEstimateResponseEstimations,\n    TransactionFeeEstimateResponseEstimationsFromJSON,\n    TransactionFeeEstimateResponseEstimationsFromJSONTyped,\n    TransactionFeeEstimateResponseEstimationsToJSON,\n} from './';\n\n/**\n * POST response for estimated fee\n * @export\n * @interface TransactionFeeEstimateResponse\n */\nexport interface TransactionFeeEstimateResponse {\n    /**\n     * \n     * @type {number}\n     * @memberof TransactionFeeEstimateResponse\n     */\n    estimated_cost_scalar: number;\n    /**\n     * \n     * @type {number}\n     * @memberof TransactionFeeEstimateResponse\n     */\n    cost_scalar_change_by_byte?: number;\n    /**\n     * \n     * @type {TransactionFeeEstimateResponseEstimatedCost}\n     * @memberof TransactionFeeEstimateResponse\n     */\n    estimated_cost: TransactionFeeEstimateResponseEstimatedCost;\n    /**\n     * \n     * @type {Array<TransactionFeeEstimateResponseEstimations>}\n     * @memberof TransactionFeeEstimateResponse\n     */\n    estimations?: Array<TransactionFeeEstimateResponseEstimations>;\n}\n\nexport function TransactionFeeEstimateResponseFromJSON(json: any): TransactionFeeEstimateResponse {\n    return TransactionFeeEstimateResponseFromJSONTyped(json, false);\n}\n\nexport function TransactionFeeEstimateResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionFeeEstimateResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'estimated_cost_scalar': json['estimated_cost_scalar'],\n        'cost_scalar_change_by_byte': !exists(json, 'cost_scalar_change_by_byte') ? undefined : json['cost_scalar_change_by_byte'],\n        'estimated_cost': TransactionFeeEstimateResponseEstimatedCostFromJSON(json['estimated_cost']),\n        'estimations': !exists(json, 'estimations') ? undefined : ((json['estimations'] as Array<any>).map(TransactionFeeEstimateResponseEstimationsFromJSON)),\n    };\n}\n\nexport function TransactionFeeEstimateResponseToJSON(value?: TransactionFeeEstimateResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'estimated_cost_scalar': value.estimated_cost_scalar,\n        'cost_scalar_change_by_byte': value.cost_scalar_change_by_byte,\n        'estimated_cost': TransactionFeeEstimateResponseEstimatedCostToJSON(value.estimated_cost),\n        'estimations': value.estimations === undefined ? undefined : ((value.estimations as Array<any>).map(TransactionFeeEstimateResponseEstimationsToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TransactionFeeEstimateResponseEstimatedCost\n */\nexport interface TransactionFeeEstimateResponseEstimatedCost {\n    /**\n     * \n     * @type {number}\n     * @memberof TransactionFeeEstimateResponseEstimatedCost\n     */\n    read_count: number;\n    /**\n     * \n     * @type {number}\n     * @memberof TransactionFeeEstimateResponseEstimatedCost\n     */\n    read_length: number;\n    /**\n     * \n     * @type {number}\n     * @memberof TransactionFeeEstimateResponseEstimatedCost\n     */\n    runtime: number;\n    /**\n     * \n     * @type {number}\n     * @memberof TransactionFeeEstimateResponseEstimatedCost\n     */\n    write_count: number;\n    /**\n     * \n     * @type {number}\n     * @memberof TransactionFeeEstimateResponseEstimatedCost\n     */\n    write_length: number;\n}\n\nexport function TransactionFeeEstimateResponseEstimatedCostFromJSON(json: any): TransactionFeeEstimateResponseEstimatedCost {\n    return TransactionFeeEstimateResponseEstimatedCostFromJSONTyped(json, false);\n}\n\nexport function TransactionFeeEstimateResponseEstimatedCostFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionFeeEstimateResponseEstimatedCost {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'read_count': json['read_count'],\n        'read_length': json['read_length'],\n        'runtime': json['runtime'],\n        'write_count': json['write_count'],\n        'write_length': json['write_length'],\n    };\n}\n\nexport function TransactionFeeEstimateResponseEstimatedCostToJSON(value?: TransactionFeeEstimateResponseEstimatedCost | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'read_count': value.read_count,\n        'read_length': value.read_length,\n        'runtime': value.runtime,\n        'write_count': value.write_count,\n        'write_length': value.write_length,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TransactionFeeEstimateResponseEstimations\n */\nexport interface TransactionFeeEstimateResponseEstimations {\n    /**\n     * \n     * @type {number}\n     * @memberof TransactionFeeEstimateResponseEstimations\n     */\n    fee_rate?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof TransactionFeeEstimateResponseEstimations\n     */\n    fee?: number;\n}\n\nexport function TransactionFeeEstimateResponseEstimationsFromJSON(json: any): TransactionFeeEstimateResponseEstimations {\n    return TransactionFeeEstimateResponseEstimationsFromJSONTyped(json, false);\n}\n\nexport function TransactionFeeEstimateResponseEstimationsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionFeeEstimateResponseEstimations {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'fee_rate': !exists(json, 'fee_rate') ? undefined : json['fee_rate'],\n        'fee': !exists(json, 'fee') ? undefined : json['fee'],\n    };\n}\n\nexport function TransactionFeeEstimateResponseEstimationsToJSON(value?: TransactionFeeEstimateResponseEstimations | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'fee_rate': value.fee_rate,\n        'fee': value.fee,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * The transaction_identifier uniquely identifies a transaction in a particular network and block or in the mempool.\n * @export\n * @interface TransactionIdentifier\n */\nexport interface TransactionIdentifier {\n    /**\n     * Any transactions that are attributable only to a block (ex: a block event) should use the hash of the block as the identifier.\n     * @type {string}\n     * @memberof TransactionIdentifier\n     */\n    hash: string;\n}\n\nexport function TransactionIdentifierFromJSON(json: any): TransactionIdentifier {\n    return TransactionIdentifierFromJSONTyped(json, false);\n}\n\nexport function TransactionIdentifierFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionIdentifier {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'hash': json['hash'],\n    };\n}\n\nexport function TransactionIdentifierToJSON(value?: TransactionIdentifier | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'hash': value.hash,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * GET request that returns transactions\n * @export\n * @interface TransactionResults\n */\nexport interface TransactionResults {\n    /**\n     * The number of transactions to return\n     * @type {number}\n     * @memberof TransactionResults\n     */\n    limit: number;\n    /**\n     * The number to transactions to skip (starting at `0`)\n     * @type {number}\n     * @memberof TransactionResults\n     */\n    offset: number;\n    /**\n     * The number of transactions available\n     * @type {number}\n     * @memberof TransactionResults\n     */\n    total: number;\n    /**\n     * \n     * @type {Array<object>}\n     * @memberof TransactionResults\n     */\n    results: Array<object>;\n}\n\nexport function TransactionResultsFromJSON(json: any): TransactionResults {\n    return TransactionResultsFromJSONTyped(json, false);\n}\n\nexport function TransactionResultsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionResults {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'limit': json['limit'],\n        'offset': json['offset'],\n        'total': json['total'],\n        'results': json['results'],\n    };\n}\n\nexport function TransactionResultsToJSON(value?: TransactionResults | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'limit': value.limit,\n        'offset': value.offset,\n        'total': value.total,\n        'results': value.results,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * GET request that returns unanchored transactions\n * @export\n * @interface UnanchoredTransactionListResponse\n */\nexport interface UnanchoredTransactionListResponse {\n    /**\n     * The number of unanchored transactions available\n     * @type {number}\n     * @memberof UnanchoredTransactionListResponse\n     */\n    total: number;\n    /**\n     * \n     * @type {Array<object>}\n     * @memberof UnanchoredTransactionListResponse\n     */\n    results: Array<object>;\n}\n\nexport function UnanchoredTransactionListResponseFromJSON(json: any): UnanchoredTransactionListResponse {\n    return UnanchoredTransactionListResponseFromJSONTyped(json, false);\n}\n\nexport function UnanchoredTransactionListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UnanchoredTransactionListResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'total': json['total'],\n        'results': json['results'],\n    };\n}\n\nexport function UnanchoredTransactionListResponseToJSON(value?: UnanchoredTransactionListResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'total': value.total,\n        'results': value.results,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    AccountDataResponse,\n    AccountDataResponseFromJSON,\n    AccountDataResponseToJSON,\n    AddressAssetsListResponse,\n    AddressAssetsListResponseFromJSON,\n    AddressAssetsListResponseToJSON,\n    AddressBalanceResponse,\n    AddressBalanceResponseFromJSON,\n    AddressBalanceResponseToJSON,\n    AddressNftListResponse,\n    AddressNftListResponseFromJSON,\n    AddressNftListResponseToJSON,\n    AddressNonces,\n    AddressNoncesFromJSON,\n    AddressNoncesToJSON,\n    AddressStxInboundListResponse,\n    AddressStxInboundListResponseFromJSON,\n    AddressStxInboundListResponseToJSON,\n    AddressTransactionWithTransfers,\n    AddressTransactionWithTransfersFromJSON,\n    AddressTransactionWithTransfersToJSON,\n    AddressTransactionsListResponse,\n    AddressTransactionsListResponseFromJSON,\n    AddressTransactionsListResponseToJSON,\n    AddressTransactionsWithTransfersListResponse,\n    AddressTransactionsWithTransfersListResponseFromJSON,\n    AddressTransactionsWithTransfersListResponseToJSON,\n} from '../models';\n\nexport interface GetAccountAssetsRequest {\n    principal: string;\n    limit?: number;\n    offset?: number;\n    unanchored?: boolean;\n    untilBlock?: string;\n}\n\nexport interface GetAccountBalanceRequest {\n    principal: string;\n    unanchored?: boolean;\n    untilBlock?: string;\n}\n\nexport interface GetAccountInboundRequest {\n    principal: string;\n    limit?: number;\n    offset?: number;\n    height?: number;\n    unanchored?: boolean;\n    untilBlock?: string;\n}\n\nexport interface GetAccountInfoRequest {\n    principal: string;\n    proof?: number;\n    tip?: string;\n}\n\nexport interface GetAccountNftRequest {\n    principal: string;\n    limit?: number;\n    offset?: number;\n    unanchored?: boolean;\n    untilBlock?: string;\n}\n\nexport interface GetAccountNoncesRequest {\n    principal: string;\n    blockHeight?: number;\n    blockHash?: string;\n}\n\nexport interface GetAccountStxBalanceRequest {\n    principal: string;\n    unanchored?: boolean;\n    untilBlock?: string;\n}\n\nexport interface GetAccountTransactionsRequest {\n    principal: string;\n    limit?: number;\n    offset?: number;\n    height?: number;\n    unanchored?: boolean;\n    untilBlock?: string;\n}\n\nexport interface GetAccountTransactionsWithTransfersRequest {\n    principal: string;\n    limit?: number;\n    offset?: number;\n    height?: number;\n    unanchored?: boolean;\n    untilBlock?: string;\n}\n\nexport interface GetSingleTransactionWithTransfersRequest {\n    principal: string;\n    txId: string;\n}\n\n/**\n * AccountsApi - interface\n * \n * @export\n * @interface AccountsApiInterface\n */\nexport interface AccountsApiInterface {\n    /**\n     * Retrieves a list of all assets events associated with an account or a Contract Identifier. This includes Transfers, Mints.\n     * @summary Get account assets\n     * @param {string} principal Stacks address or a Contract identifier\n     * @param {number} [limit] max number of account assets to fetch\n     * @param {number} [offset] index of first account assets to fetch\n     * @param {boolean} [unanchored] Include transaction data from unanchored (i.e. unconfirmed) microblocks\n     * @param {string} [untilBlock] returned data representing the state at that point in time, rather than the current block. Note - Use either of the query parameters but not both at a time.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountsApiInterface\n     */\n    getAccountAssetsRaw(requestParameters: GetAccountAssetsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<AddressAssetsListResponse>>;\n\n    /**\n     * Retrieves a list of all assets events associated with an account or a Contract Identifier. This includes Transfers, Mints.\n     * Get account assets\n     */\n    getAccountAssets(requestParameters: GetAccountAssetsRequest, initOverrides?: RequestInit): Promise<AddressAssetsListResponse>;\n\n    /**\n     * Retrieves total account balance information for a given Address or Contract Identifier. This includes the balances of  STX Tokens, Fungible Tokens and Non-Fungible Tokens for the account.\n     * @summary Get account balances\n     * @param {string} principal Stacks address or a Contract identifier\n     * @param {boolean} [unanchored] Include transaction data from unanchored (i.e. unconfirmed) microblocks\n     * @param {string} [untilBlock] returned data representing the state up until that point in time, rather than the current block.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountsApiInterface\n     */\n    getAccountBalanceRaw(requestParameters: GetAccountBalanceRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<AddressBalanceResponse>>;\n\n    /**\n     * Retrieves total account balance information for a given Address or Contract Identifier. This includes the balances of  STX Tokens, Fungible Tokens and Non-Fungible Tokens for the account.\n     * Get account balances\n     */\n    getAccountBalance(requestParameters: GetAccountBalanceRequest, initOverrides?: RequestInit): Promise<AddressBalanceResponse>;\n\n    /**\n     * Retrieves a list of STX transfers with memos to the given principal. This includes regular transfers from a stx-transfer transaction type, and transfers from contract-call transactions a the `send-many-memo` bulk sending contract. \n     * @summary Get inbound STX transfers\n     * @param {string} principal Stacks address or a Contract identifier\n     * @param {number} [limit] number of items to return\n     * @param {number} [offset] number of items to skip\n     * @param {number} [height] Filter for transfers only at this given block height\n     * @param {boolean} [unanchored] Include transaction data from unanchored (i.e. unconfirmed) microblocks\n     * @param {string} [untilBlock] returned data representing the state up until that point in time, rather than the current block. Note - Use either of the query parameters but not both at a time.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountsApiInterface\n     */\n    getAccountInboundRaw(requestParameters: GetAccountInboundRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<AddressStxInboundListResponse>>;\n\n    /**\n     * Retrieves a list of STX transfers with memos to the given principal. This includes regular transfers from a stx-transfer transaction type, and transfers from contract-call transactions a the `send-many-memo` bulk sending contract. \n     * Get inbound STX transfers\n     */\n    getAccountInbound(requestParameters: GetAccountInboundRequest, initOverrides?: RequestInit): Promise<AddressStxInboundListResponse>;\n\n    /**\n     * Retrieves the account data for a given Account or a Contract Identifier  Where balance is the hex encoding of a unsigned 128-bit integer (big-endian), nonce is an unsigned 64-bit integer, and the proofs are provided as hex strings.  For non-existent accounts, this does not return a 404 error, rather it returns an object with balance and nonce of 0. \n     * @summary Get account info\n     * @param {string} principal Stacks address or a Contract identifier\n     * @param {number} [proof] Returns object without the proof field if set to 0\n     * @param {string} [tip] The Stacks chain tip to query from\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountsApiInterface\n     */\n    getAccountInfoRaw(requestParameters: GetAccountInfoRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<AccountDataResponse>>;\n\n    /**\n     * Retrieves the account data for a given Account or a Contract Identifier  Where balance is the hex encoding of a unsigned 128-bit integer (big-endian), nonce is an unsigned 64-bit integer, and the proofs are provided as hex strings.  For non-existent accounts, this does not return a 404 error, rather it returns an object with balance and nonce of 0. \n     * Get account info\n     */\n    getAccountInfo(requestParameters: GetAccountInfoRequest, initOverrides?: RequestInit): Promise<AccountDataResponse>;\n\n    /**\n     * **NOTE:** This endpoint is deprecated in favor of [Non-Fungible Token holdings](#operation/get_nft_holdings).  Retrieves a list of all nfts owned by an address, contains the clarity value of the identifier of the nft. \n     * @summary Get nft events\n     * @param {string} principal Stacks address or a Contract identifier\n     * @param {number} [limit] number of items to return\n     * @param {number} [offset] number of items to skip\n     * @param {boolean} [unanchored] Include transaction data from unanchored (i.e. unconfirmed) microblocks\n     * @param {string} [untilBlock] returned data representing the state up until that point in time, rather than the current block. Note - Use either of the query parameters but not both at a time.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountsApiInterface\n     */\n    getAccountNftRaw(requestParameters: GetAccountNftRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<AddressNftListResponse>>;\n\n    /**\n     * **NOTE:** This endpoint is deprecated in favor of [Non-Fungible Token holdings](#operation/get_nft_holdings).  Retrieves a list of all nfts owned by an address, contains the clarity value of the identifier of the nft. \n     * Get nft events\n     */\n    getAccountNft(requestParameters: GetAccountNftRequest, initOverrides?: RequestInit): Promise<AddressNftListResponse>;\n\n    /**\n     * Retrieves the latest nonce values used by an account by inspecting the mempool, microblock transactions, and anchored transactions.\n     * @summary Get the latest nonce used by an account\n     * @param {string} principal Stacks address\n     * @param {number} [blockHeight] Optionally get the nonce at a given block height.\n     * @param {string} [blockHash] Optionally get the nonce at a given block hash. Note - Use either of the query parameters but not both at a time.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountsApiInterface\n     */\n    getAccountNoncesRaw(requestParameters: GetAccountNoncesRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<AddressNonces>>;\n\n    /**\n     * Retrieves the latest nonce values used by an account by inspecting the mempool, microblock transactions, and anchored transactions.\n     * Get the latest nonce used by an account\n     */\n    getAccountNonces(requestParameters: GetAccountNoncesRequest, initOverrides?: RequestInit): Promise<AddressNonces>;\n\n    /**\n     * Retrieves STX token balance for a given Address or Contract Identifier.\n     * @summary Get account STX balance\n     * @param {string} principal Stacks address or a Contract identifier.\n     * @param {boolean} [unanchored] Include transaction data from unanchored (i.e. unconfirmed) microblocks.\n     * @param {string} [untilBlock] returned data representing the state up until that point in time, rather than the current block. Note - Use either of the query parameters but not both at a time.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountsApiInterface\n     */\n    getAccountStxBalanceRaw(requestParameters: GetAccountStxBalanceRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<object>>;\n\n    /**\n     * Retrieves STX token balance for a given Address or Contract Identifier.\n     * Get account STX balance\n     */\n    getAccountStxBalance(requestParameters: GetAccountStxBalanceRequest, initOverrides?: RequestInit): Promise<object>;\n\n    /**\n     * Retrieves a list of all Transactions for a given Address or Contract Identifier. More information on Transaction types can be found [here](https://docs.stacks.co/understand-stacks/transactions#types).  If you need to actively monitor new transactions for an address or contract id, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates. \n     * @summary Get account transactions\n     * @param {string} principal Stacks address or a Contract identifier\n     * @param {number} [limit] max number of account transactions to fetch\n     * @param {number} [offset] index of first account transaction to fetch\n     * @param {number} [height] Filter for transactions only at this given block height\n     * @param {boolean} [unanchored] Include transaction data from unanchored (i.e. unconfirmed) microblocks\n     * @param {string} [untilBlock] returned data representing the state up until that point in time, rather than the current block. Note - Use either of the query parameters but not both at a time.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountsApiInterface\n     */\n    getAccountTransactionsRaw(requestParameters: GetAccountTransactionsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<AddressTransactionsListResponse>>;\n\n    /**\n     * Retrieves a list of all Transactions for a given Address or Contract Identifier. More information on Transaction types can be found [here](https://docs.stacks.co/understand-stacks/transactions#types).  If you need to actively monitor new transactions for an address or contract id, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates. \n     * Get account transactions\n     */\n    getAccountTransactions(requestParameters: GetAccountTransactionsRequest, initOverrides?: RequestInit): Promise<AddressTransactionsListResponse>;\n\n    /**\n     * Retrieve all transactions for an account or contract identifier including STX transfers for each transaction.\n     * @summary Get account transactions including STX transfers for each transaction.\n     * @param {string} principal Stacks address or a Contract identifier\n     * @param {number} [limit] max number of account transactions to fetch\n     * @param {number} [offset] index of first account transaction to fetch\n     * @param {number} [height] Filter for transactions only at this given block height\n     * @param {boolean} [unanchored] Include transaction data from unanchored (i.e. unconfirmed) microblocks\n     * @param {string} [untilBlock] returned data representing the state up until that point in time, rather than the current block.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountsApiInterface\n     */\n    getAccountTransactionsWithTransfersRaw(requestParameters: GetAccountTransactionsWithTransfersRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<AddressTransactionsWithTransfersListResponse>>;\n\n    /**\n     * Retrieve all transactions for an account or contract identifier including STX transfers for each transaction.\n     * Get account transactions including STX transfers for each transaction.\n     */\n    getAccountTransactionsWithTransfers(requestParameters: GetAccountTransactionsWithTransfersRequest, initOverrides?: RequestInit): Promise<AddressTransactionsWithTransfersListResponse>;\n\n    /**\n     * Retrieves transaction details for a given Transaction Id `tx_id`, for a given account or contract Identifier.\n     * @summary Get account transaction information for specific transaction\n     * @param {string} principal Stacks address or a contract identifier\n     * @param {string} txId Transaction id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountsApiInterface\n     */\n    getSingleTransactionWithTransfersRaw(requestParameters: GetSingleTransactionWithTransfersRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<AddressTransactionWithTransfers>>;\n\n    /**\n     * Retrieves transaction details for a given Transaction Id `tx_id`, for a given account or contract Identifier.\n     * Get account transaction information for specific transaction\n     */\n    getSingleTransactionWithTransfers(requestParameters: GetSingleTransactionWithTransfersRequest, initOverrides?: RequestInit): Promise<AddressTransactionWithTransfers>;\n\n}\n\n/**\n * \n */\nexport class AccountsApi extends runtime.BaseAPI implements AccountsApiInterface {\n\n    /**\n     * Retrieves a list of all assets events associated with an account or a Contract Identifier. This includes Transfers, Mints.\n     * Get account assets\n     */\n    async getAccountAssetsRaw(requestParameters: GetAccountAssetsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<AddressAssetsListResponse>> {\n        if (requestParameters.principal === null || requestParameters.principal === undefined) {\n            throw new runtime.RequiredError('principal','Required parameter requestParameters.principal was null or undefined when calling getAccountAssets.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        if (requestParameters.unanchored !== undefined) {\n            queryParameters['unanchored'] = requestParameters.unanchored;\n        }\n\n        if (requestParameters.untilBlock !== undefined) {\n            queryParameters['until_block'] = requestParameters.untilBlock;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/address/{principal}/assets`.replace(`{${\"principal\"}}`, encodeURIComponent(String(requestParameters.principal))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AddressAssetsListResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves a list of all assets events associated with an account or a Contract Identifier. This includes Transfers, Mints.\n     * Get account assets\n     */\n    async getAccountAssets(requestParameters: GetAccountAssetsRequest, initOverrides?: RequestInit): Promise<AddressAssetsListResponse> {\n        const response = await this.getAccountAssetsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves total account balance information for a given Address or Contract Identifier. This includes the balances of  STX Tokens, Fungible Tokens and Non-Fungible Tokens for the account.\n     * Get account balances\n     */\n    async getAccountBalanceRaw(requestParameters: GetAccountBalanceRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<AddressBalanceResponse>> {\n        if (requestParameters.principal === null || requestParameters.principal === undefined) {\n            throw new runtime.RequiredError('principal','Required parameter requestParameters.principal was null or undefined when calling getAccountBalance.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.unanchored !== undefined) {\n            queryParameters['unanchored'] = requestParameters.unanchored;\n        }\n\n        if (requestParameters.untilBlock !== undefined) {\n            queryParameters['until_block'] = requestParameters.untilBlock;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/address/{principal}/balances`.replace(`{${\"principal\"}}`, encodeURIComponent(String(requestParameters.principal))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AddressBalanceResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves total account balance information for a given Address or Contract Identifier. This includes the balances of  STX Tokens, Fungible Tokens and Non-Fungible Tokens for the account.\n     * Get account balances\n     */\n    async getAccountBalance(requestParameters: GetAccountBalanceRequest, initOverrides?: RequestInit): Promise<AddressBalanceResponse> {\n        const response = await this.getAccountBalanceRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves a list of STX transfers with memos to the given principal. This includes regular transfers from a stx-transfer transaction type, and transfers from contract-call transactions a the `send-many-memo` bulk sending contract. \n     * Get inbound STX transfers\n     */\n    async getAccountInboundRaw(requestParameters: GetAccountInboundRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<AddressStxInboundListResponse>> {\n        if (requestParameters.principal === null || requestParameters.principal === undefined) {\n            throw new runtime.RequiredError('principal','Required parameter requestParameters.principal was null or undefined when calling getAccountInbound.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        if (requestParameters.height !== undefined) {\n            queryParameters['height'] = requestParameters.height;\n        }\n\n        if (requestParameters.unanchored !== undefined) {\n            queryParameters['unanchored'] = requestParameters.unanchored;\n        }\n\n        if (requestParameters.untilBlock !== undefined) {\n            queryParameters['until_block'] = requestParameters.untilBlock;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/address/{principal}/stx_inbound`.replace(`{${\"principal\"}}`, encodeURIComponent(String(requestParameters.principal))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AddressStxInboundListResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves a list of STX transfers with memos to the given principal. This includes regular transfers from a stx-transfer transaction type, and transfers from contract-call transactions a the `send-many-memo` bulk sending contract. \n     * Get inbound STX transfers\n     */\n    async getAccountInbound(requestParameters: GetAccountInboundRequest, initOverrides?: RequestInit): Promise<AddressStxInboundListResponse> {\n        const response = await this.getAccountInboundRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves the account data for a given Account or a Contract Identifier  Where balance is the hex encoding of a unsigned 128-bit integer (big-endian), nonce is an unsigned 64-bit integer, and the proofs are provided as hex strings.  For non-existent accounts, this does not return a 404 error, rather it returns an object with balance and nonce of 0. \n     * Get account info\n     */\n    async getAccountInfoRaw(requestParameters: GetAccountInfoRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<AccountDataResponse>> {\n        if (requestParameters.principal === null || requestParameters.principal === undefined) {\n            throw new runtime.RequiredError('principal','Required parameter requestParameters.principal was null or undefined when calling getAccountInfo.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.proof !== undefined) {\n            queryParameters['proof'] = requestParameters.proof;\n        }\n\n        if (requestParameters.tip !== undefined) {\n            queryParameters['tip'] = requestParameters.tip;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2/accounts/{principal}`.replace(`{${\"principal\"}}`, encodeURIComponent(String(requestParameters.principal))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AccountDataResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves the account data for a given Account or a Contract Identifier  Where balance is the hex encoding of a unsigned 128-bit integer (big-endian), nonce is an unsigned 64-bit integer, and the proofs are provided as hex strings.  For non-existent accounts, this does not return a 404 error, rather it returns an object with balance and nonce of 0. \n     * Get account info\n     */\n    async getAccountInfo(requestParameters: GetAccountInfoRequest, initOverrides?: RequestInit): Promise<AccountDataResponse> {\n        const response = await this.getAccountInfoRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * **NOTE:** This endpoint is deprecated in favor of [Non-Fungible Token holdings](#operation/get_nft_holdings).  Retrieves a list of all nfts owned by an address, contains the clarity value of the identifier of the nft. \n     * Get nft events\n     */\n    async getAccountNftRaw(requestParameters: GetAccountNftRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<AddressNftListResponse>> {\n        if (requestParameters.principal === null || requestParameters.principal === undefined) {\n            throw new runtime.RequiredError('principal','Required parameter requestParameters.principal was null or undefined when calling getAccountNft.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        if (requestParameters.unanchored !== undefined) {\n            queryParameters['unanchored'] = requestParameters.unanchored;\n        }\n\n        if (requestParameters.untilBlock !== undefined) {\n            queryParameters['until_block'] = requestParameters.untilBlock;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/address/{principal}/nft_events`.replace(`{${\"principal\"}}`, encodeURIComponent(String(requestParameters.principal))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AddressNftListResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * **NOTE:** This endpoint is deprecated in favor of [Non-Fungible Token holdings](#operation/get_nft_holdings).  Retrieves a list of all nfts owned by an address, contains the clarity value of the identifier of the nft. \n     * Get nft events\n     */\n    async getAccountNft(requestParameters: GetAccountNftRequest, initOverrides?: RequestInit): Promise<AddressNftListResponse> {\n        const response = await this.getAccountNftRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves the latest nonce values used by an account by inspecting the mempool, microblock transactions, and anchored transactions.\n     * Get the latest nonce used by an account\n     */\n    async getAccountNoncesRaw(requestParameters: GetAccountNoncesRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<AddressNonces>> {\n        if (requestParameters.principal === null || requestParameters.principal === undefined) {\n            throw new runtime.RequiredError('principal','Required parameter requestParameters.principal was null or undefined when calling getAccountNonces.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.blockHeight !== undefined) {\n            queryParameters['block_height'] = requestParameters.blockHeight;\n        }\n\n        if (requestParameters.blockHash !== undefined) {\n            queryParameters['block_hash'] = requestParameters.blockHash;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/address/{principal}/nonces`.replace(`{${\"principal\"}}`, encodeURIComponent(String(requestParameters.principal))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AddressNoncesFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves the latest nonce values used by an account by inspecting the mempool, microblock transactions, and anchored transactions.\n     * Get the latest nonce used by an account\n     */\n    async getAccountNonces(requestParameters: GetAccountNoncesRequest, initOverrides?: RequestInit): Promise<AddressNonces> {\n        const response = await this.getAccountNoncesRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves STX token balance for a given Address or Contract Identifier.\n     * Get account STX balance\n     */\n    async getAccountStxBalanceRaw(requestParameters: GetAccountStxBalanceRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<object>> {\n        if (requestParameters.principal === null || requestParameters.principal === undefined) {\n            throw new runtime.RequiredError('principal','Required parameter requestParameters.principal was null or undefined when calling getAccountStxBalance.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.unanchored !== undefined) {\n            queryParameters['unanchored'] = requestParameters.unanchored;\n        }\n\n        if (requestParameters.untilBlock !== undefined) {\n            queryParameters['until_block'] = requestParameters.untilBlock;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/address/{principal}/stx`.replace(`{${\"principal\"}}`, encodeURIComponent(String(requestParameters.principal))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Retrieves STX token balance for a given Address or Contract Identifier.\n     * Get account STX balance\n     */\n    async getAccountStxBalance(requestParameters: GetAccountStxBalanceRequest, initOverrides?: RequestInit): Promise<object> {\n        const response = await this.getAccountStxBalanceRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves a list of all Transactions for a given Address or Contract Identifier. More information on Transaction types can be found [here](https://docs.stacks.co/understand-stacks/transactions#types).  If you need to actively monitor new transactions for an address or contract id, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates. \n     * Get account transactions\n     */\n    async getAccountTransactionsRaw(requestParameters: GetAccountTransactionsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<AddressTransactionsListResponse>> {\n        if (requestParameters.principal === null || requestParameters.principal === undefined) {\n            throw new runtime.RequiredError('principal','Required parameter requestParameters.principal was null or undefined when calling getAccountTransactions.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        if (requestParameters.height !== undefined) {\n            queryParameters['height'] = requestParameters.height;\n        }\n\n        if (requestParameters.unanchored !== undefined) {\n            queryParameters['unanchored'] = requestParameters.unanchored;\n        }\n\n        if (requestParameters.untilBlock !== undefined) {\n            queryParameters['until_block'] = requestParameters.untilBlock;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/address/{principal}/transactions`.replace(`{${\"principal\"}}`, encodeURIComponent(String(requestParameters.principal))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AddressTransactionsListResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves a list of all Transactions for a given Address or Contract Identifier. More information on Transaction types can be found [here](https://docs.stacks.co/understand-stacks/transactions#types).  If you need to actively monitor new transactions for an address or contract id, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates. \n     * Get account transactions\n     */\n    async getAccountTransactions(requestParameters: GetAccountTransactionsRequest, initOverrides?: RequestInit): Promise<AddressTransactionsListResponse> {\n        const response = await this.getAccountTransactionsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieve all transactions for an account or contract identifier including STX transfers for each transaction.\n     * Get account transactions including STX transfers for each transaction.\n     */\n    async getAccountTransactionsWithTransfersRaw(requestParameters: GetAccountTransactionsWithTransfersRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<AddressTransactionsWithTransfersListResponse>> {\n        if (requestParameters.principal === null || requestParameters.principal === undefined) {\n            throw new runtime.RequiredError('principal','Required parameter requestParameters.principal was null or undefined when calling getAccountTransactionsWithTransfers.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        if (requestParameters.height !== undefined) {\n            queryParameters['height'] = requestParameters.height;\n        }\n\n        if (requestParameters.unanchored !== undefined) {\n            queryParameters['unanchored'] = requestParameters.unanchored;\n        }\n\n        if (requestParameters.untilBlock !== undefined) {\n            queryParameters['until_block'] = requestParameters.untilBlock;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/address/{principal}/transactions_with_transfers`.replace(`{${\"principal\"}}`, encodeURIComponent(String(requestParameters.principal))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AddressTransactionsWithTransfersListResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieve all transactions for an account or contract identifier including STX transfers for each transaction.\n     * Get account transactions including STX transfers for each transaction.\n     */\n    async getAccountTransactionsWithTransfers(requestParameters: GetAccountTransactionsWithTransfersRequest, initOverrides?: RequestInit): Promise<AddressTransactionsWithTransfersListResponse> {\n        const response = await this.getAccountTransactionsWithTransfersRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves transaction details for a given Transaction Id `tx_id`, for a given account or contract Identifier.\n     * Get account transaction information for specific transaction\n     */\n    async getSingleTransactionWithTransfersRaw(requestParameters: GetSingleTransactionWithTransfersRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<AddressTransactionWithTransfers>> {\n        if (requestParameters.principal === null || requestParameters.principal === undefined) {\n            throw new runtime.RequiredError('principal','Required parameter requestParameters.principal was null or undefined when calling getSingleTransactionWithTransfers.');\n        }\n\n        if (requestParameters.txId === null || requestParameters.txId === undefined) {\n            throw new runtime.RequiredError('txId','Required parameter requestParameters.txId was null or undefined when calling getSingleTransactionWithTransfers.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/address/{principal}/{tx_id}/with_transfers`.replace(`{${\"principal\"}}`, encodeURIComponent(String(requestParameters.principal))).replace(`{${\"tx_id\"}}`, encodeURIComponent(String(requestParameters.txId))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AddressTransactionWithTransfersFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves transaction details for a given Transaction Id `tx_id`, for a given account or contract Identifier.\n     * Get account transaction information for specific transaction\n     */\n    async getSingleTransactionWithTransfers(requestParameters: GetSingleTransactionWithTransfersRequest, initOverrides?: RequestInit): Promise<AddressTransactionWithTransfers> {\n        const response = await this.getSingleTransactionWithTransfersRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    Block,\n    BlockFromJSON,\n    BlockToJSON,\n    BlockListResponse,\n    BlockListResponseFromJSON,\n    BlockListResponseToJSON,\n} from '../models';\n\nexport interface GetBlockByBurnBlockHashRequest {\n    burnBlockHash: string;\n}\n\nexport interface GetBlockByBurnBlockHeightRequest {\n    burnBlockHeight: number;\n}\n\nexport interface GetBlockByHashRequest {\n    hash: string;\n}\n\nexport interface GetBlockByHeightRequest {\n    height: number;\n}\n\nexport interface GetBlockListRequest {\n    limit?: number;\n    offset?: number;\n}\n\n/**\n * BlocksApi - interface\n * \n * @export\n * @interface BlocksApiInterface\n */\nexport interface BlocksApiInterface {\n    /**\n     * Retrieves block details of a specific block for a given burnchain block hash\n     * @summary Get block by burnchain block hash\n     * @param {string} burnBlockHash Hash of the burnchain block\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof BlocksApiInterface\n     */\n    getBlockByBurnBlockHashRaw(requestParameters: GetBlockByBurnBlockHashRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Block>>;\n\n    /**\n     * Retrieves block details of a specific block for a given burnchain block hash\n     * Get block by burnchain block hash\n     */\n    getBlockByBurnBlockHash(requestParameters: GetBlockByBurnBlockHashRequest, initOverrides?: RequestInit): Promise<Block>;\n\n    /**\n     * Retrieves block details of a specific block for a given burn chain height\n     * @summary Get block by burnchain height\n     * @param {number} burnBlockHeight Height of the burn chain block\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof BlocksApiInterface\n     */\n    getBlockByBurnBlockHeightRaw(requestParameters: GetBlockByBurnBlockHeightRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Block>>;\n\n    /**\n     * Retrieves block details of a specific block for a given burn chain height\n     * Get block by burnchain height\n     */\n    getBlockByBurnBlockHeight(requestParameters: GetBlockByBurnBlockHeightRequest, initOverrides?: RequestInit): Promise<Block>;\n\n    /**\n     * Retrieves block details of a specific block for a given chain height. You can use the hash from your latest block (\\'get_block_list\\' API) to get your block details.\n     * @summary Get block by hash\n     * @param {string} hash Hash of the block\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof BlocksApiInterface\n     */\n    getBlockByHashRaw(requestParameters: GetBlockByHashRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Block>>;\n\n    /**\n     * Retrieves block details of a specific block for a given chain height. You can use the hash from your latest block (\\'get_block_list\\' API) to get your block details.\n     * Get block by hash\n     */\n    getBlockByHash(requestParameters: GetBlockByHashRequest, initOverrides?: RequestInit): Promise<Block>;\n\n    /**\n     * Retrieves block details of a specific block at a given block height\n     * @summary Get block by height\n     * @param {number} height Height of the block\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof BlocksApiInterface\n     */\n    getBlockByHeightRaw(requestParameters: GetBlockByHeightRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Block>>;\n\n    /**\n     * Retrieves block details of a specific block at a given block height\n     * Get block by height\n     */\n    getBlockByHeight(requestParameters: GetBlockByHeightRequest, initOverrides?: RequestInit): Promise<Block>;\n\n    /**\n     * Retrieves a list of recently mined blocks  If you need to actively monitor new blocks, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates. \n     * @summary Get recent blocks\n     * @param {number} [limit] max number of blocks to fetch\n     * @param {number} [offset] index of first block to fetch\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof BlocksApiInterface\n     */\n    getBlockListRaw(requestParameters: GetBlockListRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BlockListResponse>>;\n\n    /**\n     * Retrieves a list of recently mined blocks  If you need to actively monitor new blocks, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates. \n     * Get recent blocks\n     */\n    getBlockList(requestParameters: GetBlockListRequest, initOverrides?: RequestInit): Promise<BlockListResponse>;\n\n}\n\n/**\n * \n */\nexport class BlocksApi extends runtime.BaseAPI implements BlocksApiInterface {\n\n    /**\n     * Retrieves block details of a specific block for a given burnchain block hash\n     * Get block by burnchain block hash\n     */\n    async getBlockByBurnBlockHashRaw(requestParameters: GetBlockByBurnBlockHashRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Block>> {\n        if (requestParameters.burnBlockHash === null || requestParameters.burnBlockHash === undefined) {\n            throw new runtime.RequiredError('burnBlockHash','Required parameter requestParameters.burnBlockHash was null or undefined when calling getBlockByBurnBlockHash.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/block/by_burn_block_hash/{burn_block_hash}`.replace(`{${\"burn_block_hash\"}}`, encodeURIComponent(String(requestParameters.burnBlockHash))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => BlockFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves block details of a specific block for a given burnchain block hash\n     * Get block by burnchain block hash\n     */\n    async getBlockByBurnBlockHash(requestParameters: GetBlockByBurnBlockHashRequest, initOverrides?: RequestInit): Promise<Block> {\n        const response = await this.getBlockByBurnBlockHashRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves block details of a specific block for a given burn chain height\n     * Get block by burnchain height\n     */\n    async getBlockByBurnBlockHeightRaw(requestParameters: GetBlockByBurnBlockHeightRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Block>> {\n        if (requestParameters.burnBlockHeight === null || requestParameters.burnBlockHeight === undefined) {\n            throw new runtime.RequiredError('burnBlockHeight','Required parameter requestParameters.burnBlockHeight was null or undefined when calling getBlockByBurnBlockHeight.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/block/by_burn_block_height/{burn_block_height}`.replace(`{${\"burn_block_height\"}}`, encodeURIComponent(String(requestParameters.burnBlockHeight))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => BlockFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves block details of a specific block for a given burn chain height\n     * Get block by burnchain height\n     */\n    async getBlockByBurnBlockHeight(requestParameters: GetBlockByBurnBlockHeightRequest, initOverrides?: RequestInit): Promise<Block> {\n        const response = await this.getBlockByBurnBlockHeightRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves block details of a specific block for a given chain height. You can use the hash from your latest block (\\'get_block_list\\' API) to get your block details.\n     * Get block by hash\n     */\n    async getBlockByHashRaw(requestParameters: GetBlockByHashRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Block>> {\n        if (requestParameters.hash === null || requestParameters.hash === undefined) {\n            throw new runtime.RequiredError('hash','Required parameter requestParameters.hash was null or undefined when calling getBlockByHash.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/block/{hash}`.replace(`{${\"hash\"}}`, encodeURIComponent(String(requestParameters.hash))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => BlockFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves block details of a specific block for a given chain height. You can use the hash from your latest block (\\'get_block_list\\' API) to get your block details.\n     * Get block by hash\n     */\n    async getBlockByHash(requestParameters: GetBlockByHashRequest, initOverrides?: RequestInit): Promise<Block> {\n        const response = await this.getBlockByHashRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves block details of a specific block at a given block height\n     * Get block by height\n     */\n    async getBlockByHeightRaw(requestParameters: GetBlockByHeightRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Block>> {\n        if (requestParameters.height === null || requestParameters.height === undefined) {\n            throw new runtime.RequiredError('height','Required parameter requestParameters.height was null or undefined when calling getBlockByHeight.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/block/by_height/{height}`.replace(`{${\"height\"}}`, encodeURIComponent(String(requestParameters.height))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => BlockFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves block details of a specific block at a given block height\n     * Get block by height\n     */\n    async getBlockByHeight(requestParameters: GetBlockByHeightRequest, initOverrides?: RequestInit): Promise<Block> {\n        const response = await this.getBlockByHeightRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves a list of recently mined blocks  If you need to actively monitor new blocks, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates. \n     * Get recent blocks\n     */\n    async getBlockListRaw(requestParameters: GetBlockListRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BlockListResponse>> {\n        const queryParameters: any = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/block`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => BlockListResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves a list of recently mined blocks  If you need to actively monitor new blocks, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates. \n     * Get recent blocks\n     */\n    async getBlockList(requestParameters: GetBlockListRequest, initOverrides?: RequestInit): Promise<BlockListResponse> {\n        const response = await this.getBlockListRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    InlineObject,\n    InlineObjectFromJSON,\n    InlineObjectToJSON,\n    InlineObject1,\n    InlineObject1FromJSON,\n    InlineObject1ToJSON,\n    RunFaucetResponse,\n    RunFaucetResponseFromJSON,\n    RunFaucetResponseToJSON,\n} from '../models';\n\nexport interface RunFaucetBtcRequest {\n    address: string;\n    inlineObject1?: InlineObject1;\n}\n\nexport interface RunFaucetStxRequest {\n    address: string;\n    stacking?: boolean;\n    inlineObject?: InlineObject;\n}\n\n/**\n * FaucetsApi - interface\n * \n * @export\n * @interface FaucetsApiInterface\n */\nexport interface FaucetsApiInterface {\n    /**\n     * Add 1 BTC token to the specified testnet BTC address.  The endpoint returns the transaction ID, which you can use to view the transaction in a testnet Bitcoin block explorer. The tokens are delivered once the transaction has been included in a block.  **Note:** This is a testnet only endpoint. This endpoint will not work on the mainnet. \n     * @summary Add testnet BTC tokens to address\n     * @param {string} address A valid testnet BTC address\n     * @param {InlineObject1} [inlineObject1] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FaucetsApiInterface\n     */\n    runFaucetBtcRaw(requestParameters: RunFaucetBtcRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RunFaucetResponse>>;\n\n    /**\n     * Add 1 BTC token to the specified testnet BTC address.  The endpoint returns the transaction ID, which you can use to view the transaction in a testnet Bitcoin block explorer. The tokens are delivered once the transaction has been included in a block.  **Note:** This is a testnet only endpoint. This endpoint will not work on the mainnet. \n     * Add testnet BTC tokens to address\n     */\n    runFaucetBtc(requestParameters: RunFaucetBtcRequest, initOverrides?: RequestInit): Promise<RunFaucetResponse>;\n\n    /**\n     * Add 500 STX tokens to the specified testnet address. Testnet STX addresses begin with `ST`. If the `stacking` parameter is set to `true`, the faucet will add the required number of tokens for individual stacking to the specified testnet address.  The endpoint returns the transaction ID, which you can use to view the transaction in the [Stacks Explorer](https://explorer.stacks.co/?chain=testnet). The tokens are delivered once the transaction has been included in an anchor block.  A common reason for failed faucet transactions is that the faucet has run out of tokens. If you are experiencing failed faucet transactions to a testnet address, you can get help in [Discord](https://stacks.chat).  **Note:** This is a testnet only endpoint. This endpoint will not work on the mainnet. \n     * @summary Get STX testnet tokens\n     * @param {string} address A valid testnet STX address\n     * @param {boolean} [stacking] Request the amount of STX tokens needed for individual address stacking\n     * @param {InlineObject} [inlineObject] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FaucetsApiInterface\n     */\n    runFaucetStxRaw(requestParameters: RunFaucetStxRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RunFaucetResponse>>;\n\n    /**\n     * Add 500 STX tokens to the specified testnet address. Testnet STX addresses begin with `ST`. If the `stacking` parameter is set to `true`, the faucet will add the required number of tokens for individual stacking to the specified testnet address.  The endpoint returns the transaction ID, which you can use to view the transaction in the [Stacks Explorer](https://explorer.stacks.co/?chain=testnet). The tokens are delivered once the transaction has been included in an anchor block.  A common reason for failed faucet transactions is that the faucet has run out of tokens. If you are experiencing failed faucet transactions to a testnet address, you can get help in [Discord](https://stacks.chat).  **Note:** This is a testnet only endpoint. This endpoint will not work on the mainnet. \n     * Get STX testnet tokens\n     */\n    runFaucetStx(requestParameters: RunFaucetStxRequest, initOverrides?: RequestInit): Promise<RunFaucetResponse>;\n\n}\n\n/**\n * \n */\nexport class FaucetsApi extends runtime.BaseAPI implements FaucetsApiInterface {\n\n    /**\n     * Add 1 BTC token to the specified testnet BTC address.  The endpoint returns the transaction ID, which you can use to view the transaction in a testnet Bitcoin block explorer. The tokens are delivered once the transaction has been included in a block.  **Note:** This is a testnet only endpoint. This endpoint will not work on the mainnet. \n     * Add testnet BTC tokens to address\n     */\n    async runFaucetBtcRaw(requestParameters: RunFaucetBtcRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RunFaucetResponse>> {\n        if (requestParameters.address === null || requestParameters.address === undefined) {\n            throw new runtime.RequiredError('address','Required parameter requestParameters.address was null or undefined when calling runFaucetBtc.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.address !== undefined) {\n            queryParameters['address'] = requestParameters.address;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/extended/v1/faucets/btc`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: InlineObject1ToJSON(requestParameters.inlineObject1),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RunFaucetResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Add 1 BTC token to the specified testnet BTC address.  The endpoint returns the transaction ID, which you can use to view the transaction in a testnet Bitcoin block explorer. The tokens are delivered once the transaction has been included in a block.  **Note:** This is a testnet only endpoint. This endpoint will not work on the mainnet. \n     * Add testnet BTC tokens to address\n     */\n    async runFaucetBtc(requestParameters: RunFaucetBtcRequest, initOverrides?: RequestInit): Promise<RunFaucetResponse> {\n        const response = await this.runFaucetBtcRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Add 500 STX tokens to the specified testnet address. Testnet STX addresses begin with `ST`. If the `stacking` parameter is set to `true`, the faucet will add the required number of tokens for individual stacking to the specified testnet address.  The endpoint returns the transaction ID, which you can use to view the transaction in the [Stacks Explorer](https://explorer.stacks.co/?chain=testnet). The tokens are delivered once the transaction has been included in an anchor block.  A common reason for failed faucet transactions is that the faucet has run out of tokens. If you are experiencing failed faucet transactions to a testnet address, you can get help in [Discord](https://stacks.chat).  **Note:** This is a testnet only endpoint. This endpoint will not work on the mainnet. \n     * Get STX testnet tokens\n     */\n    async runFaucetStxRaw(requestParameters: RunFaucetStxRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RunFaucetResponse>> {\n        if (requestParameters.address === null || requestParameters.address === undefined) {\n            throw new runtime.RequiredError('address','Required parameter requestParameters.address was null or undefined when calling runFaucetStx.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.address !== undefined) {\n            queryParameters['address'] = requestParameters.address;\n        }\n\n        if (requestParameters.stacking !== undefined) {\n            queryParameters['stacking'] = requestParameters.stacking;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/extended/v1/faucets/stx`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: InlineObjectToJSON(requestParameters.inlineObject),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RunFaucetResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Add 500 STX tokens to the specified testnet address. Testnet STX addresses begin with `ST`. If the `stacking` parameter is set to `true`, the faucet will add the required number of tokens for individual stacking to the specified testnet address.  The endpoint returns the transaction ID, which you can use to view the transaction in the [Stacks Explorer](https://explorer.stacks.co/?chain=testnet). The tokens are delivered once the transaction has been included in an anchor block.  A common reason for failed faucet transactions is that the faucet has run out of tokens. If you are experiencing failed faucet transactions to a testnet address, you can get help in [Discord](https://stacks.chat).  **Note:** This is a testnet only endpoint. This endpoint will not work on the mainnet. \n     * Get STX testnet tokens\n     */\n    async runFaucetStx(requestParameters: RunFaucetStxRequest, initOverrides?: RequestInit): Promise<RunFaucetResponse> {\n        const response = await this.runFaucetStxRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    FeeRate,\n    FeeRateFromJSON,\n    FeeRateToJSON,\n    FeeRateRequest,\n    FeeRateRequestFromJSON,\n    FeeRateRequestToJSON,\n    TransactionFeeEstimateRequest,\n    TransactionFeeEstimateRequestFromJSON,\n    TransactionFeeEstimateRequestToJSON,\n    TransactionFeeEstimateResponse,\n    TransactionFeeEstimateResponseFromJSON,\n    TransactionFeeEstimateResponseToJSON,\n} from '../models';\n\nexport interface FetchFeeRateRequest {\n    feeRateRequest: FeeRateRequest;\n}\n\nexport interface PostFeeTransactionRequest {\n    transactionFeeEstimateRequest?: TransactionFeeEstimateRequest;\n}\n\n/**\n * FeesApi - interface\n * \n * @export\n * @interface FeesApiInterface\n */\nexport interface FeesApiInterface {\n    /**\n     * **NOTE:** This endpoint is deprecated in favor of [Get approximate fees for a given transaction](#operation/post_fee_transaction).  Retrieves estimated fee rate. \n     * @summary Fetch fee rate\n     * @param {FeeRateRequest} feeRateRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FeesApiInterface\n     */\n    fetchFeeRateRaw(requestParameters: FetchFeeRateRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<FeeRate>>;\n\n    /**\n     * **NOTE:** This endpoint is deprecated in favor of [Get approximate fees for a given transaction](#operation/post_fee_transaction).  Retrieves estimated fee rate. \n     * Fetch fee rate\n     */\n    fetchFeeRate(requestParameters: FetchFeeRateRequest, initOverrides?: RequestInit): Promise<FeeRate>;\n\n    /**\n     * Retrieves an estimated fee rate for STX transfer transactions. This a a fee rate / byte, and is returned as a JSON integer\n     * @summary Get estimated fee\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FeesApiInterface\n     */\n    getFeeTransferRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<object>>;\n\n    /**\n     * Retrieves an estimated fee rate for STX transfer transactions. This a a fee rate / byte, and is returned as a JSON integer\n     * Get estimated fee\n     */\n    getFeeTransfer(initOverrides?: RequestInit): Promise<object>;\n\n    /**\n     * Get an estimated fee for the supplied transaction.  This estimates the execution cost of the transaction, the current fee rate of the network, and returns estimates for fee amounts. * `transaction_payload` is a hex-encoded serialization of   the TransactionPayload for the transaction. * `estimated_len` is an optional argument that provides the   endpoint with an estimation of the final length (in bytes)   of the transaction, including any post-conditions and   signatures If the node cannot provide an estimate for the transaction (e.g., if the node has never seen a contract-call for the given contract and function) or if estimation is not configured on this node, a 400 response is returned. The 400 response will be a JSON error containing a `reason` field which can be one of the following: * `DatabaseError` - this Stacks node has had an internal   database error while trying to estimate the costs of the   supplied transaction. * `NoEstimateAvailable` - this Stacks node has not seen this   kind of contract-call before, and it cannot provide an   estimate yet. * `CostEstimationDisabled` - this Stacks node does not perform   fee or cost estimation, and it cannot respond on this   endpoint. The 200 response contains the following data: * `estimated_cost` - the estimated multi-dimensional cost of   executing the Clarity VM on the provided transaction. * `estimated_cost_scalar` - a unitless integer that the Stacks   node uses to compare how much of the block limit is consumed   by different transactions. This value incorporates the   estimated length of the transaction and the estimated   execution cost of the transaction. The range of this integer   may vary between different Stacks nodes. In order to compute   an estimate of total fee amount for the transaction, this   value is multiplied by the same Stacks node\\'s estimated fee   rate. * `cost_scalar_change_by_byte` - a float value that indicates how   much the `estimated_cost_scalar` value would increase for every   additional byte in the final transaction. * `estimations` - an array of estimated fee rates and total fees to   pay in microSTX for the transaction. This array provides a range of   estimates (default: 3) that may be used. Each element of the array   contains the following fields:     * `fee_rate` - the estimated value for the current fee       rates in the network     * `fee` - the estimated value for the total fee in       microSTX that the given transaction should pay. These       values are the result of computing:       `fee_rate` x `estimated_cost_scalar`.       If the estimated fees are less than the minimum relay       fee `(1 ustx x estimated_len)`, then that minimum relay       fee will be returned here instead. Note: If the final transaction\\'s byte size is larger than supplied to `estimated_len`, then applications should increase this fee amount by:   `fee_rate` x `cost_scalar_change_by_byte` x (`final_size` - `estimated_size`) \n     * @summary Get approximate fees for a given transaction\n     * @param {TransactionFeeEstimateRequest} [transactionFeeEstimateRequest] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FeesApiInterface\n     */\n    postFeeTransactionRaw(requestParameters: PostFeeTransactionRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<TransactionFeeEstimateResponse>>;\n\n    /**\n     * Get an estimated fee for the supplied transaction.  This estimates the execution cost of the transaction, the current fee rate of the network, and returns estimates for fee amounts. * `transaction_payload` is a hex-encoded serialization of   the TransactionPayload for the transaction. * `estimated_len` is an optional argument that provides the   endpoint with an estimation of the final length (in bytes)   of the transaction, including any post-conditions and   signatures If the node cannot provide an estimate for the transaction (e.g., if the node has never seen a contract-call for the given contract and function) or if estimation is not configured on this node, a 400 response is returned. The 400 response will be a JSON error containing a `reason` field which can be one of the following: * `DatabaseError` - this Stacks node has had an internal   database error while trying to estimate the costs of the   supplied transaction. * `NoEstimateAvailable` - this Stacks node has not seen this   kind of contract-call before, and it cannot provide an   estimate yet. * `CostEstimationDisabled` - this Stacks node does not perform   fee or cost estimation, and it cannot respond on this   endpoint. The 200 response contains the following data: * `estimated_cost` - the estimated multi-dimensional cost of   executing the Clarity VM on the provided transaction. * `estimated_cost_scalar` - a unitless integer that the Stacks   node uses to compare how much of the block limit is consumed   by different transactions. This value incorporates the   estimated length of the transaction and the estimated   execution cost of the transaction. The range of this integer   may vary between different Stacks nodes. In order to compute   an estimate of total fee amount for the transaction, this   value is multiplied by the same Stacks node\\'s estimated fee   rate. * `cost_scalar_change_by_byte` - a float value that indicates how   much the `estimated_cost_scalar` value would increase for every   additional byte in the final transaction. * `estimations` - an array of estimated fee rates and total fees to   pay in microSTX for the transaction. This array provides a range of   estimates (default: 3) that may be used. Each element of the array   contains the following fields:     * `fee_rate` - the estimated value for the current fee       rates in the network     * `fee` - the estimated value for the total fee in       microSTX that the given transaction should pay. These       values are the result of computing:       `fee_rate` x `estimated_cost_scalar`.       If the estimated fees are less than the minimum relay       fee `(1 ustx x estimated_len)`, then that minimum relay       fee will be returned here instead. Note: If the final transaction\\'s byte size is larger than supplied to `estimated_len`, then applications should increase this fee amount by:   `fee_rate` x `cost_scalar_change_by_byte` x (`final_size` - `estimated_size`) \n     * Get approximate fees for a given transaction\n     */\n    postFeeTransaction(requestParameters: PostFeeTransactionRequest, initOverrides?: RequestInit): Promise<TransactionFeeEstimateResponse>;\n\n}\n\n/**\n * \n */\nexport class FeesApi extends runtime.BaseAPI implements FeesApiInterface {\n\n    /**\n     * **NOTE:** This endpoint is deprecated in favor of [Get approximate fees for a given transaction](#operation/post_fee_transaction).  Retrieves estimated fee rate. \n     * Fetch fee rate\n     */\n    async fetchFeeRateRaw(requestParameters: FetchFeeRateRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<FeeRate>> {\n        if (requestParameters.feeRateRequest === null || requestParameters.feeRateRequest === undefined) {\n            throw new runtime.RequiredError('feeRateRequest','Required parameter requestParameters.feeRateRequest was null or undefined when calling fetchFeeRate.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/extended/v1/fee_rate`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: FeeRateRequestToJSON(requestParameters.feeRateRequest),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => FeeRateFromJSON(jsonValue));\n    }\n\n    /**\n     * **NOTE:** This endpoint is deprecated in favor of [Get approximate fees for a given transaction](#operation/post_fee_transaction).  Retrieves estimated fee rate. \n     * Fetch fee rate\n     */\n    async fetchFeeRate(requestParameters: FetchFeeRateRequest, initOverrides?: RequestInit): Promise<FeeRate> {\n        const response = await this.fetchFeeRateRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves an estimated fee rate for STX transfer transactions. This a a fee rate / byte, and is returned as a JSON integer\n     * Get estimated fee\n     */\n    async getFeeTransferRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<object>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2/fees/transfer`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Retrieves an estimated fee rate for STX transfer transactions. This a a fee rate / byte, and is returned as a JSON integer\n     * Get estimated fee\n     */\n    async getFeeTransfer(initOverrides?: RequestInit): Promise<object> {\n        const response = await this.getFeeTransferRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get an estimated fee for the supplied transaction.  This estimates the execution cost of the transaction, the current fee rate of the network, and returns estimates for fee amounts. * `transaction_payload` is a hex-encoded serialization of   the TransactionPayload for the transaction. * `estimated_len` is an optional argument that provides the   endpoint with an estimation of the final length (in bytes)   of the transaction, including any post-conditions and   signatures If the node cannot provide an estimate for the transaction (e.g., if the node has never seen a contract-call for the given contract and function) or if estimation is not configured on this node, a 400 response is returned. The 400 response will be a JSON error containing a `reason` field which can be one of the following: * `DatabaseError` - this Stacks node has had an internal   database error while trying to estimate the costs of the   supplied transaction. * `NoEstimateAvailable` - this Stacks node has not seen this   kind of contract-call before, and it cannot provide an   estimate yet. * `CostEstimationDisabled` - this Stacks node does not perform   fee or cost estimation, and it cannot respond on this   endpoint. The 200 response contains the following data: * `estimated_cost` - the estimated multi-dimensional cost of   executing the Clarity VM on the provided transaction. * `estimated_cost_scalar` - a unitless integer that the Stacks   node uses to compare how much of the block limit is consumed   by different transactions. This value incorporates the   estimated length of the transaction and the estimated   execution cost of the transaction. The range of this integer   may vary between different Stacks nodes. In order to compute   an estimate of total fee amount for the transaction, this   value is multiplied by the same Stacks node\\'s estimated fee   rate. * `cost_scalar_change_by_byte` - a float value that indicates how   much the `estimated_cost_scalar` value would increase for every   additional byte in the final transaction. * `estimations` - an array of estimated fee rates and total fees to   pay in microSTX for the transaction. This array provides a range of   estimates (default: 3) that may be used. Each element of the array   contains the following fields:     * `fee_rate` - the estimated value for the current fee       rates in the network     * `fee` - the estimated value for the total fee in       microSTX that the given transaction should pay. These       values are the result of computing:       `fee_rate` x `estimated_cost_scalar`.       If the estimated fees are less than the minimum relay       fee `(1 ustx x estimated_len)`, then that minimum relay       fee will be returned here instead. Note: If the final transaction\\'s byte size is larger than supplied to `estimated_len`, then applications should increase this fee amount by:   `fee_rate` x `cost_scalar_change_by_byte` x (`final_size` - `estimated_size`) \n     * Get approximate fees for a given transaction\n     */\n    async postFeeTransactionRaw(requestParameters: PostFeeTransactionRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<TransactionFeeEstimateResponse>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/v2/fees/transaction`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: TransactionFeeEstimateRequestToJSON(requestParameters.transactionFeeEstimateRequest),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => TransactionFeeEstimateResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Get an estimated fee for the supplied transaction.  This estimates the execution cost of the transaction, the current fee rate of the network, and returns estimates for fee amounts. * `transaction_payload` is a hex-encoded serialization of   the TransactionPayload for the transaction. * `estimated_len` is an optional argument that provides the   endpoint with an estimation of the final length (in bytes)   of the transaction, including any post-conditions and   signatures If the node cannot provide an estimate for the transaction (e.g., if the node has never seen a contract-call for the given contract and function) or if estimation is not configured on this node, a 400 response is returned. The 400 response will be a JSON error containing a `reason` field which can be one of the following: * `DatabaseError` - this Stacks node has had an internal   database error while trying to estimate the costs of the   supplied transaction. * `NoEstimateAvailable` - this Stacks node has not seen this   kind of contract-call before, and it cannot provide an   estimate yet. * `CostEstimationDisabled` - this Stacks node does not perform   fee or cost estimation, and it cannot respond on this   endpoint. The 200 response contains the following data: * `estimated_cost` - the estimated multi-dimensional cost of   executing the Clarity VM on the provided transaction. * `estimated_cost_scalar` - a unitless integer that the Stacks   node uses to compare how much of the block limit is consumed   by different transactions. This value incorporates the   estimated length of the transaction and the estimated   execution cost of the transaction. The range of this integer   may vary between different Stacks nodes. In order to compute   an estimate of total fee amount for the transaction, this   value is multiplied by the same Stacks node\\'s estimated fee   rate. * `cost_scalar_change_by_byte` - a float value that indicates how   much the `estimated_cost_scalar` value would increase for every   additional byte in the final transaction. * `estimations` - an array of estimated fee rates and total fees to   pay in microSTX for the transaction. This array provides a range of   estimates (default: 3) that may be used. Each element of the array   contains the following fields:     * `fee_rate` - the estimated value for the current fee       rates in the network     * `fee` - the estimated value for the total fee in       microSTX that the given transaction should pay. These       values are the result of computing:       `fee_rate` x `estimated_cost_scalar`.       If the estimated fees are less than the minimum relay       fee `(1 ustx x estimated_len)`, then that minimum relay       fee will be returned here instead. Note: If the final transaction\\'s byte size is larger than supplied to `estimated_len`, then applications should increase this fee amount by:   `fee_rate` x `cost_scalar_change_by_byte` x (`final_size` - `estimated_size`) \n     * Get approximate fees for a given transaction\n     */\n    async postFeeTransaction(requestParameters: PostFeeTransactionRequest, initOverrides?: RequestInit): Promise<TransactionFeeEstimateResponse> {\n        const response = await this.postFeeTransactionRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    FungibleTokenMetadata,\n    FungibleTokenMetadataFromJSON,\n    FungibleTokenMetadataToJSON,\n    FungibleTokensMetadataList,\n    FungibleTokensMetadataListFromJSON,\n    FungibleTokensMetadataListToJSON,\n} from '../models';\n\nexport interface GetContractFtMetadataRequest {\n    contractId: string;\n}\n\nexport interface GetFtMetadataListRequest {\n    limit?: number;\n    offset?: number;\n}\n\n/**\n * FungibleTokensApi - interface\n * \n * @export\n * @interface FungibleTokensApiInterface\n */\nexport interface FungibleTokensApiInterface {\n    /**\n     * Retrieves the metadata for fungible tokens for a given contract id\n     * @summary Fungible tokens metadata for contract id\n     * @param {string} contractId token\\&#39;s contract id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FungibleTokensApiInterface\n     */\n    getContractFtMetadataRaw(requestParameters: GetContractFtMetadataRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<FungibleTokenMetadata>>;\n\n    /**\n     * Retrieves the metadata for fungible tokens for a given contract id\n     * Fungible tokens metadata for contract id\n     */\n    getContractFtMetadata(requestParameters: GetContractFtMetadataRequest, initOverrides?: RequestInit): Promise<FungibleTokenMetadata>;\n\n    /**\n     * Retrieves list of fungible tokens with their metadata. More information on Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#fungible-tokens).\n     * @summary Fungible tokens metadata list\n     * @param {number} [limit] max number of tokens to fetch.\n     * @param {number} [offset] index of first tokens to fetch\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FungibleTokensApiInterface\n     */\n    getFtMetadataListRaw(requestParameters: GetFtMetadataListRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<FungibleTokensMetadataList>>;\n\n    /**\n     * Retrieves list of fungible tokens with their metadata. More information on Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#fungible-tokens).\n     * Fungible tokens metadata list\n     */\n    getFtMetadataList(requestParameters: GetFtMetadataListRequest, initOverrides?: RequestInit): Promise<FungibleTokensMetadataList>;\n\n}\n\n/**\n * \n */\nexport class FungibleTokensApi extends runtime.BaseAPI implements FungibleTokensApiInterface {\n\n    /**\n     * Retrieves the metadata for fungible tokens for a given contract id\n     * Fungible tokens metadata for contract id\n     */\n    async getContractFtMetadataRaw(requestParameters: GetContractFtMetadataRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<FungibleTokenMetadata>> {\n        if (requestParameters.contractId === null || requestParameters.contractId === undefined) {\n            throw new runtime.RequiredError('contractId','Required parameter requestParameters.contractId was null or undefined when calling getContractFtMetadata.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/tokens/{contractId}/ft/metadata`.replace(`{${\"contractId\"}}`, encodeURIComponent(String(requestParameters.contractId))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => FungibleTokenMetadataFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves the metadata for fungible tokens for a given contract id\n     * Fungible tokens metadata for contract id\n     */\n    async getContractFtMetadata(requestParameters: GetContractFtMetadataRequest, initOverrides?: RequestInit): Promise<FungibleTokenMetadata> {\n        const response = await this.getContractFtMetadataRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves list of fungible tokens with their metadata. More information on Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#fungible-tokens).\n     * Fungible tokens metadata list\n     */\n    async getFtMetadataListRaw(requestParameters: GetFtMetadataListRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<FungibleTokensMetadataList>> {\n        const queryParameters: any = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/tokens/ft/metadata`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => FungibleTokensMetadataListFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves list of fungible tokens with their metadata. More information on Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#fungible-tokens).\n     * Fungible tokens metadata list\n     */\n    async getFtMetadataList(requestParameters: GetFtMetadataListRequest, initOverrides?: RequestInit): Promise<FungibleTokensMetadataList> {\n        const response = await this.getFtMetadataListRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    CoreNodeInfoResponse,\n    CoreNodeInfoResponseFromJSON,\n    CoreNodeInfoResponseToJSON,\n    CoreNodePoxResponse,\n    CoreNodePoxResponseFromJSON,\n    CoreNodePoxResponseToJSON,\n    GetStxSupplyLegacyFormatResponse,\n    GetStxSupplyLegacyFormatResponseFromJSON,\n    GetStxSupplyLegacyFormatResponseToJSON,\n    GetStxSupplyResponse,\n    GetStxSupplyResponseFromJSON,\n    GetStxSupplyResponseToJSON,\n    NetworkBlockTimeResponse,\n    NetworkBlockTimeResponseFromJSON,\n    NetworkBlockTimeResponseToJSON,\n    NetworkBlockTimesResponse,\n    NetworkBlockTimesResponseFromJSON,\n    NetworkBlockTimesResponseToJSON,\n    ServerStatusResponse,\n    ServerStatusResponseFromJSON,\n    ServerStatusResponseToJSON,\n} from '../models';\n\nexport interface GetNetworkBlockTimeByNetworkRequest {\n    network: GetNetworkBlockTimeByNetworkNetworkEnum;\n}\n\nexport interface GetStxSupplyRequest {\n    height?: number;\n}\n\nexport interface GetTotalStxSupplyLegacyFormatRequest {\n    height?: number;\n}\n\n/**\n * InfoApi - interface\n * \n * @export\n * @interface InfoApiInterface\n */\nexport interface InfoApiInterface {\n    /**\n     * Retrieves information about the Core API including the server version\n     * @summary Get Core API info\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof InfoApiInterface\n     */\n    getCoreApiInfoRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<CoreNodeInfoResponse>>;\n\n    /**\n     * Retrieves information about the Core API including the server version\n     * Get Core API info\n     */\n    getCoreApiInfo(initOverrides?: RequestInit): Promise<CoreNodeInfoResponse>;\n\n    /**\n     * Retrieves the target block time for a given network. The network can be mainnet or testnet. The block time is hardcoded and will change throughout the implementation phases of the testnet.\n     * @summary Get a given network\\'s target block time\n     * @param {'testnet' | 'mainnet'} network the target block time for a given network (testnet, mainnet).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof InfoApiInterface\n     */\n    getNetworkBlockTimeByNetworkRaw(requestParameters: GetNetworkBlockTimeByNetworkRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<NetworkBlockTimeResponse>>;\n\n    /**\n     * Retrieves the target block time for a given network. The network can be mainnet or testnet. The block time is hardcoded and will change throughout the implementation phases of the testnet.\n     * Get a given network\\'s target block time\n     */\n    getNetworkBlockTimeByNetwork(requestParameters: GetNetworkBlockTimeByNetworkRequest, initOverrides?: RequestInit): Promise<NetworkBlockTimeResponse>;\n\n    /**\n     * Retrieves the target block times for mainnet and testnet. The block time is hardcoded and will change throughout the implementation phases of the testnet.\n     * @summary Get the network target block time\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof InfoApiInterface\n     */\n    getNetworkBlockTimesRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<NetworkBlockTimesResponse>>;\n\n    /**\n     * Retrieves the target block times for mainnet and testnet. The block time is hardcoded and will change throughout the implementation phases of the testnet.\n     * Get the network target block time\n     */\n    getNetworkBlockTimes(initOverrides?: RequestInit): Promise<NetworkBlockTimesResponse>;\n\n    /**\n     * Retrieves Proof-of-Transfer (PoX) information. Can be used for Stacking.\n     * @summary Get Proof-of-Transfer details\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof InfoApiInterface\n     */\n    getPoxInfoRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<CoreNodePoxResponse>>;\n\n    /**\n     * Retrieves Proof-of-Transfer (PoX) information. Can be used for Stacking.\n     * Get Proof-of-Transfer details\n     */\n    getPoxInfo(initOverrides?: RequestInit): Promise<CoreNodePoxResponse>;\n\n    /**\n     * Retrieves the running status of the Stacks Blockchain API, including the server version and current chain tip information.\n     * @summary API status\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof InfoApiInterface\n     */\n    getStatusRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<ServerStatusResponse>>;\n\n    /**\n     * Retrieves the running status of the Stacks Blockchain API, including the server version and current chain tip information.\n     * API status\n     */\n    getStatus(initOverrides?: RequestInit): Promise<ServerStatusResponse>;\n\n    /**\n     * Retrieves the total and unlocked STX supply. More information on Stacking can be found [here] (https://docs.stacks.co/understand-stacks/stacking). **Note:** This uses the estimated future total supply for the year 2050. \n     * @summary Get total and unlocked STX supply\n     * @param {number} [height] Supply details are queried from specified block height. If the block height is not specified, the latest block height is taken as default value. Note that the &#x60;block height&#x60; is referred to the stacks blockchain.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof InfoApiInterface\n     */\n    getStxSupplyRaw(requestParameters: GetStxSupplyRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetStxSupplyResponse>>;\n\n    /**\n     * Retrieves the total and unlocked STX supply. More information on Stacking can be found [here] (https://docs.stacks.co/understand-stacks/stacking). **Note:** This uses the estimated future total supply for the year 2050. \n     * Get total and unlocked STX supply\n     */\n    getStxSupply(requestParameters: GetStxSupplyRequest, initOverrides?: RequestInit): Promise<GetStxSupplyResponse>;\n\n    /**\n     * Retrieves the STX tokens currently in circulation that have been unlocked as plain text.\n     * @summary Get circulating STX supply in plain text format\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof InfoApiInterface\n     */\n    getStxSupplyCirculatingPlainRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<string>>;\n\n    /**\n     * Retrieves the STX tokens currently in circulation that have been unlocked as plain text.\n     * Get circulating STX supply in plain text format\n     */\n    getStxSupplyCirculatingPlain(initOverrides?: RequestInit): Promise<string>;\n\n    /**\n     * Retrieves the total supply for STX tokens as plain text. **Note:** this uses the estimated future total supply for the year 2050. \n     * @summary Get total STX supply in plain text format\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof InfoApiInterface\n     */\n    getStxSupplyTotalSupplyPlainRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<string>>;\n\n    /**\n     * Retrieves the total supply for STX tokens as plain text. **Note:** this uses the estimated future total supply for the year 2050. \n     * Get total STX supply in plain text format\n     */\n    getStxSupplyTotalSupplyPlain(initOverrides?: RequestInit): Promise<string>;\n\n    /**\n     * Retrieves total supply of STX tokens including those currently in circulation that have been unlocked. **Note:** this uses the estimated future total supply for the year 2050. \n     * @summary Get total and unlocked STX supply (results formatted the same as the legacy 1.0 API)\n     * @param {number} [height] Supply details are queried from specified block height. If the block height is not specified, the latest block height is taken as default value.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof InfoApiInterface\n     */\n    getTotalStxSupplyLegacyFormatRaw(requestParameters: GetTotalStxSupplyLegacyFormatRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetStxSupplyLegacyFormatResponse>>;\n\n    /**\n     * Retrieves total supply of STX tokens including those currently in circulation that have been unlocked. **Note:** this uses the estimated future total supply for the year 2050. \n     * Get total and unlocked STX supply (results formatted the same as the legacy 1.0 API)\n     */\n    getTotalStxSupplyLegacyFormat(requestParameters: GetTotalStxSupplyLegacyFormatRequest, initOverrides?: RequestInit): Promise<GetStxSupplyLegacyFormatResponse>;\n\n}\n\n/**\n * \n */\nexport class InfoApi extends runtime.BaseAPI implements InfoApiInterface {\n\n    /**\n     * Retrieves information about the Core API including the server version\n     * Get Core API info\n     */\n    async getCoreApiInfoRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<CoreNodeInfoResponse>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2/info`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => CoreNodeInfoResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves information about the Core API including the server version\n     * Get Core API info\n     */\n    async getCoreApiInfo(initOverrides?: RequestInit): Promise<CoreNodeInfoResponse> {\n        const response = await this.getCoreApiInfoRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves the target block time for a given network. The network can be mainnet or testnet. The block time is hardcoded and will change throughout the implementation phases of the testnet.\n     * Get a given network\\'s target block time\n     */\n    async getNetworkBlockTimeByNetworkRaw(requestParameters: GetNetworkBlockTimeByNetworkRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<NetworkBlockTimeResponse>> {\n        if (requestParameters.network === null || requestParameters.network === undefined) {\n            throw new runtime.RequiredError('network','Required parameter requestParameters.network was null or undefined when calling getNetworkBlockTimeByNetwork.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/info/network_block_time/{network}`.replace(`{${\"network\"}}`, encodeURIComponent(String(requestParameters.network))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => NetworkBlockTimeResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves the target block time for a given network. The network can be mainnet or testnet. The block time is hardcoded and will change throughout the implementation phases of the testnet.\n     * Get a given network\\'s target block time\n     */\n    async getNetworkBlockTimeByNetwork(requestParameters: GetNetworkBlockTimeByNetworkRequest, initOverrides?: RequestInit): Promise<NetworkBlockTimeResponse> {\n        const response = await this.getNetworkBlockTimeByNetworkRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves the target block times for mainnet and testnet. The block time is hardcoded and will change throughout the implementation phases of the testnet.\n     * Get the network target block time\n     */\n    async getNetworkBlockTimesRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<NetworkBlockTimesResponse>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/info/network_block_times`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => NetworkBlockTimesResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves the target block times for mainnet and testnet. The block time is hardcoded and will change throughout the implementation phases of the testnet.\n     * Get the network target block time\n     */\n    async getNetworkBlockTimes(initOverrides?: RequestInit): Promise<NetworkBlockTimesResponse> {\n        const response = await this.getNetworkBlockTimesRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves Proof-of-Transfer (PoX) information. Can be used for Stacking.\n     * Get Proof-of-Transfer details\n     */\n    async getPoxInfoRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<CoreNodePoxResponse>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2/pox`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => CoreNodePoxResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves Proof-of-Transfer (PoX) information. Can be used for Stacking.\n     * Get Proof-of-Transfer details\n     */\n    async getPoxInfo(initOverrides?: RequestInit): Promise<CoreNodePoxResponse> {\n        const response = await this.getPoxInfoRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves the running status of the Stacks Blockchain API, including the server version and current chain tip information.\n     * API status\n     */\n    async getStatusRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<ServerStatusResponse>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/status`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ServerStatusResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves the running status of the Stacks Blockchain API, including the server version and current chain tip information.\n     * API status\n     */\n    async getStatus(initOverrides?: RequestInit): Promise<ServerStatusResponse> {\n        const response = await this.getStatusRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves the total and unlocked STX supply. More information on Stacking can be found [here] (https://docs.stacks.co/understand-stacks/stacking). **Note:** This uses the estimated future total supply for the year 2050. \n     * Get total and unlocked STX supply\n     */\n    async getStxSupplyRaw(requestParameters: GetStxSupplyRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetStxSupplyResponse>> {\n        const queryParameters: any = {};\n\n        if (requestParameters.height !== undefined) {\n            queryParameters['height'] = requestParameters.height;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/stx_supply`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => GetStxSupplyResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves the total and unlocked STX supply. More information on Stacking can be found [here] (https://docs.stacks.co/understand-stacks/stacking). **Note:** This uses the estimated future total supply for the year 2050. \n     * Get total and unlocked STX supply\n     */\n    async getStxSupply(requestParameters: GetStxSupplyRequest, initOverrides?: RequestInit): Promise<GetStxSupplyResponse> {\n        const response = await this.getStxSupplyRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves the STX tokens currently in circulation that have been unlocked as plain text.\n     * Get circulating STX supply in plain text format\n     */\n    async getStxSupplyCirculatingPlainRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<string>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/stx_supply/circulating/plain`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.TextApiResponse(response) as any;\n    }\n\n    /**\n     * Retrieves the STX tokens currently in circulation that have been unlocked as plain text.\n     * Get circulating STX supply in plain text format\n     */\n    async getStxSupplyCirculatingPlain(initOverrides?: RequestInit): Promise<string> {\n        const response = await this.getStxSupplyCirculatingPlainRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves the total supply for STX tokens as plain text. **Note:** this uses the estimated future total supply for the year 2050. \n     * Get total STX supply in plain text format\n     */\n    async getStxSupplyTotalSupplyPlainRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<string>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/stx_supply/total/plain`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.TextApiResponse(response) as any;\n    }\n\n    /**\n     * Retrieves the total supply for STX tokens as plain text. **Note:** this uses the estimated future total supply for the year 2050. \n     * Get total STX supply in plain text format\n     */\n    async getStxSupplyTotalSupplyPlain(initOverrides?: RequestInit): Promise<string> {\n        const response = await this.getStxSupplyTotalSupplyPlainRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves total supply of STX tokens including those currently in circulation that have been unlocked. **Note:** this uses the estimated future total supply for the year 2050. \n     * Get total and unlocked STX supply (results formatted the same as the legacy 1.0 API)\n     */\n    async getTotalStxSupplyLegacyFormatRaw(requestParameters: GetTotalStxSupplyLegacyFormatRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetStxSupplyLegacyFormatResponse>> {\n        const queryParameters: any = {};\n\n        if (requestParameters.height !== undefined) {\n            queryParameters['height'] = requestParameters.height;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/stx_supply/legacy_format`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => GetStxSupplyLegacyFormatResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves total supply of STX tokens including those currently in circulation that have been unlocked. **Note:** this uses the estimated future total supply for the year 2050. \n     * Get total and unlocked STX supply (results formatted the same as the legacy 1.0 API)\n     */\n    async getTotalStxSupplyLegacyFormat(requestParameters: GetTotalStxSupplyLegacyFormatRequest, initOverrides?: RequestInit): Promise<GetStxSupplyLegacyFormatResponse> {\n        const response = await this.getTotalStxSupplyLegacyFormatRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n\n/**\n    * @export\n    * @enum {string}\n    */\nexport enum GetNetworkBlockTimeByNetworkNetworkEnum {\n    testnet = 'testnet',\n    mainnet = 'mainnet'\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    Microblock,\n    MicroblockFromJSON,\n    MicroblockToJSON,\n    MicroblockListResponse,\n    MicroblockListResponseFromJSON,\n    MicroblockListResponseToJSON,\n    UnanchoredTransactionListResponse,\n    UnanchoredTransactionListResponseFromJSON,\n    UnanchoredTransactionListResponseToJSON,\n} from '../models';\n\nexport interface GetMicroblockByHashRequest {\n    hash: string;\n}\n\nexport interface GetMicroblockListRequest {\n    limit?: number;\n    offset?: number;\n}\n\n/**\n * MicroblocksApi - interface\n * \n * @export\n * @interface MicroblocksApiInterface\n */\nexport interface MicroblocksApiInterface {\n    /**\n     * Retrieves a specific microblock by `hash`\n     * @summary Get microblock\n     * @param {string} hash Hash of the microblock\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof MicroblocksApiInterface\n     */\n    getMicroblockByHashRaw(requestParameters: GetMicroblockByHashRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Microblock>>;\n\n    /**\n     * Retrieves a specific microblock by `hash`\n     * Get microblock\n     */\n    getMicroblockByHash(requestParameters: GetMicroblockByHashRequest, initOverrides?: RequestInit): Promise<Microblock>;\n\n    /**\n     * Retrieves a list of microblocks.  If you need to actively monitor new microblocks, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates. \n     * @summary Get recent microblocks\n     * @param {number} [limit] Max number of microblocks to fetch\n     * @param {number} [offset] Index of the first microblock to fetch\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof MicroblocksApiInterface\n     */\n    getMicroblockListRaw(requestParameters: GetMicroblockListRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<MicroblockListResponse>>;\n\n    /**\n     * Retrieves a list of microblocks.  If you need to actively monitor new microblocks, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates. \n     * Get recent microblocks\n     */\n    getMicroblockList(requestParameters: GetMicroblockListRequest, initOverrides?: RequestInit): Promise<MicroblockListResponse>;\n\n    /**\n     * Retrieves transactions that have been streamed in microblocks but not yet accepted or rejected in an anchor block\n     * @summary Get the list of current transactions that belong to unanchored microblocks\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof MicroblocksApiInterface\n     */\n    getUnanchoredTxsRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<UnanchoredTransactionListResponse>>;\n\n    /**\n     * Retrieves transactions that have been streamed in microblocks but not yet accepted or rejected in an anchor block\n     * Get the list of current transactions that belong to unanchored microblocks\n     */\n    getUnanchoredTxs(initOverrides?: RequestInit): Promise<UnanchoredTransactionListResponse>;\n\n}\n\n/**\n * \n */\nexport class MicroblocksApi extends runtime.BaseAPI implements MicroblocksApiInterface {\n\n    /**\n     * Retrieves a specific microblock by `hash`\n     * Get microblock\n     */\n    async getMicroblockByHashRaw(requestParameters: GetMicroblockByHashRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Microblock>> {\n        if (requestParameters.hash === null || requestParameters.hash === undefined) {\n            throw new runtime.RequiredError('hash','Required parameter requestParameters.hash was null or undefined when calling getMicroblockByHash.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/microblock/{hash}`.replace(`{${\"hash\"}}`, encodeURIComponent(String(requestParameters.hash))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => MicroblockFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves a specific microblock by `hash`\n     * Get microblock\n     */\n    async getMicroblockByHash(requestParameters: GetMicroblockByHashRequest, initOverrides?: RequestInit): Promise<Microblock> {\n        const response = await this.getMicroblockByHashRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves a list of microblocks.  If you need to actively monitor new microblocks, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates. \n     * Get recent microblocks\n     */\n    async getMicroblockListRaw(requestParameters: GetMicroblockListRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<MicroblockListResponse>> {\n        const queryParameters: any = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/microblock`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => MicroblockListResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves a list of microblocks.  If you need to actively monitor new microblocks, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates. \n     * Get recent microblocks\n     */\n    async getMicroblockList(requestParameters: GetMicroblockListRequest, initOverrides?: RequestInit): Promise<MicroblockListResponse> {\n        const response = await this.getMicroblockListRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves transactions that have been streamed in microblocks but not yet accepted or rejected in an anchor block\n     * Get the list of current transactions that belong to unanchored microblocks\n     */\n    async getUnanchoredTxsRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<UnanchoredTransactionListResponse>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/microblock/unanchored/txs`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => UnanchoredTransactionListResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves transactions that have been streamed in microblocks but not yet accepted or rejected in an anchor block\n     * Get the list of current transactions that belong to unanchored microblocks\n     */\n    async getUnanchoredTxs(initOverrides?: RequestInit): Promise<UnanchoredTransactionListResponse> {\n        const response = await this.getUnanchoredTxsRaw(initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    BnsError,\n    BnsErrorFromJSON,\n    BnsErrorToJSON,\n    BnsGetAllNamespacesResponse,\n    BnsGetAllNamespacesResponseFromJSON,\n    BnsGetAllNamespacesResponseToJSON,\n    BnsGetNameInfoResponse,\n    BnsGetNameInfoResponseFromJSON,\n    BnsGetNameInfoResponseToJSON,\n    BnsGetNamePriceResponse,\n    BnsGetNamePriceResponseFromJSON,\n    BnsGetNamePriceResponseToJSON,\n    BnsGetNamespacePriceResponse,\n    BnsGetNamespacePriceResponseFromJSON,\n    BnsGetNamespacePriceResponseToJSON,\n    BnsNamesOwnByAddressResponse,\n    BnsNamesOwnByAddressResponseFromJSON,\n    BnsNamesOwnByAddressResponseToJSON,\n} from '../models';\n\nexport interface FetchSubdomainsListForNameRequest {\n    name: string;\n}\n\nexport interface FetchZoneFileRequest {\n    name: string;\n}\n\nexport interface GetAllNamesRequest {\n    page?: number;\n}\n\nexport interface GetHistoricalZoneFileRequest {\n    name: string;\n    zoneFileHash: string;\n}\n\nexport interface GetNameInfoRequest {\n    name: string;\n}\n\nexport interface GetNamePriceRequest {\n    name: string;\n}\n\nexport interface GetNamesOwnedByAddressRequest {\n    blockchain: string;\n    address: string;\n}\n\nexport interface GetNamespaceNamesRequest {\n    tld: string;\n    page?: number;\n}\n\nexport interface GetNamespacePriceRequest {\n    tld: string;\n}\n\n/**\n * NamesApi - interface\n * \n * @export\n * @interface NamesApiInterface\n */\nexport interface NamesApiInterface {\n    /**\n     * Retrieves the list of subdomains for a specific name\n     * @summary Get Name Subdomains\n     * @param {string} name fully-qualified name\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof NamesApiInterface\n     */\n    fetchSubdomainsListForNameRaw(requestParameters: FetchSubdomainsListForNameRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<string>>>;\n\n    /**\n     * Retrieves the list of subdomains for a specific name\n     * Get Name Subdomains\n     */\n    fetchSubdomainsListForName(requestParameters: FetchSubdomainsListForNameRequest, initOverrides?: RequestInit): Promise<Array<string>>;\n\n    /**\n     * Retrieves a user’s raw zone file. This only works for RFC-compliant zone files. This method returns an error for names that have non-standard zone files.\n     * @summary Get Zone File\n     * @param {string} name fully-qualified name\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof NamesApiInterface\n     */\n    fetchZoneFileRaw(requestParameters: FetchZoneFileRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<object>>;\n\n    /**\n     * Retrieves a user’s raw zone file. This only works for RFC-compliant zone files. This method returns an error for names that have non-standard zone files.\n     * Get Zone File\n     */\n    fetchZoneFile(requestParameters: FetchZoneFileRequest, initOverrides?: RequestInit): Promise<object>;\n\n    /**\n     * Retrieves a list of all names known to the node.\n     * @summary Get All Names\n     * @param {number} [page] names are defaulted to page 1 with 100 results. You can query specific page results by using the \\&#39;page\\&#39; query parameter.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof NamesApiInterface\n     */\n    getAllNamesRaw(requestParameters: GetAllNamesRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<string>>>;\n\n    /**\n     * Retrieves a list of all names known to the node.\n     * Get All Names\n     */\n    getAllNames(requestParameters: GetAllNamesRequest, initOverrides?: RequestInit): Promise<Array<string>>;\n\n    /**\n     * Retrieves a list of all namespaces known to the node.\n     * @summary Get All Namespaces\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof NamesApiInterface\n     */\n    getAllNamespacesRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<BnsGetAllNamespacesResponse>>;\n\n    /**\n     * Retrieves a list of all namespaces known to the node.\n     * Get All Namespaces\n     */\n    getAllNamespaces(initOverrides?: RequestInit): Promise<BnsGetAllNamespacesResponse>;\n\n    /**\n     * Retrieves the historical zonefile specified by the username and zone hash.\n     * @summary Get Historical Zone File\n     * @param {string} name fully-qualified name\n     * @param {string} zoneFileHash zone file hash\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof NamesApiInterface\n     */\n    getHistoricalZoneFileRaw(requestParameters: GetHistoricalZoneFileRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<object>>;\n\n    /**\n     * Retrieves the historical zonefile specified by the username and zone hash.\n     * Get Historical Zone File\n     */\n    getHistoricalZoneFile(requestParameters: GetHistoricalZoneFileRequest, initOverrides?: RequestInit): Promise<object>;\n\n    /**\n     * Retrieves details of a given name including the `address`, `status` and last transaction id - `last_txid`.\n     * @summary Get Name Details\n     * @param {string} name fully-qualified name\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof NamesApiInterface\n     */\n    getNameInfoRaw(requestParameters: GetNameInfoRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BnsGetNameInfoResponse>>;\n\n    /**\n     * Retrieves details of a given name including the `address`, `status` and last transaction id - `last_txid`.\n     * Get Name Details\n     */\n    getNameInfo(requestParameters: GetNameInfoRequest, initOverrides?: RequestInit): Promise<BnsGetNameInfoResponse>;\n\n    /**\n     * Retrieves the price of a name. The `amount` given will be in the smallest possible units of the currency.\n     * @summary Get Name Price\n     * @param {string} name the name to query price information for\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof NamesApiInterface\n     */\n    getNamePriceRaw(requestParameters: GetNamePriceRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BnsGetNamePriceResponse>>;\n\n    /**\n     * Retrieves the price of a name. The `amount` given will be in the smallest possible units of the currency.\n     * Get Name Price\n     */\n    getNamePrice(requestParameters: GetNamePriceRequest, initOverrides?: RequestInit): Promise<BnsGetNamePriceResponse>;\n\n    /**\n     * Retrieves a list of names owned by the address provided.\n     * @summary Get Names Owned by Address\n     * @param {string} blockchain the layer-1 blockchain for the address\n     * @param {string} address the address to lookup\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof NamesApiInterface\n     */\n    getNamesOwnedByAddressRaw(requestParameters: GetNamesOwnedByAddressRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BnsNamesOwnByAddressResponse>>;\n\n    /**\n     * Retrieves a list of names owned by the address provided.\n     * Get Names Owned by Address\n     */\n    getNamesOwnedByAddress(requestParameters: GetNamesOwnedByAddressRequest, initOverrides?: RequestInit): Promise<BnsNamesOwnByAddressResponse>;\n\n    /**\n     * Retrieves a list of names within a given namespace.\n     * @summary Get Namespace Names\n     * @param {string} tld the namespace to fetch names from.\n     * @param {number} [page] namespace values are defaulted to page 1 with 100 results. You can query specific page results by using the \\&#39;page\\&#39; query parameter.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof NamesApiInterface\n     */\n    getNamespaceNamesRaw(requestParameters: GetNamespaceNamesRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<string>>>;\n\n    /**\n     * Retrieves a list of names within a given namespace.\n     * Get Namespace Names\n     */\n    getNamespaceNames(requestParameters: GetNamespaceNamesRequest, initOverrides?: RequestInit): Promise<Array<string>>;\n\n    /**\n     * Retrieves the price of a namespace. The `amount` given will be in the smallest possible units of the currency.\n     * @summary Get Namespace Price\n     * @param {string} tld the namespace to fetch price for\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof NamesApiInterface\n     */\n    getNamespacePriceRaw(requestParameters: GetNamespacePriceRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BnsGetNamespacePriceResponse>>;\n\n    /**\n     * Retrieves the price of a namespace. The `amount` given will be in the smallest possible units of the currency.\n     * Get Namespace Price\n     */\n    getNamespacePrice(requestParameters: GetNamespacePriceRequest, initOverrides?: RequestInit): Promise<BnsGetNamespacePriceResponse>;\n\n}\n\n/**\n * \n */\nexport class NamesApi extends runtime.BaseAPI implements NamesApiInterface {\n\n    /**\n     * Retrieves the list of subdomains for a specific name\n     * Get Name Subdomains\n     */\n    async fetchSubdomainsListForNameRaw(requestParameters: FetchSubdomainsListForNameRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<string>>> {\n        if (requestParameters.name === null || requestParameters.name === undefined) {\n            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling fetchSubdomainsListForName.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v1/names/{name}/subdomains`.replace(`{${\"name\"}}`, encodeURIComponent(String(requestParameters.name))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Retrieves the list of subdomains for a specific name\n     * Get Name Subdomains\n     */\n    async fetchSubdomainsListForName(requestParameters: FetchSubdomainsListForNameRequest, initOverrides?: RequestInit): Promise<Array<string>> {\n        const response = await this.fetchSubdomainsListForNameRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves a user’s raw zone file. This only works for RFC-compliant zone files. This method returns an error for names that have non-standard zone files.\n     * Get Zone File\n     */\n    async fetchZoneFileRaw(requestParameters: FetchZoneFileRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<object>> {\n        if (requestParameters.name === null || requestParameters.name === undefined) {\n            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling fetchZoneFile.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v1/names/{name}/zonefile`.replace(`{${\"name\"}}`, encodeURIComponent(String(requestParameters.name))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Retrieves a user’s raw zone file. This only works for RFC-compliant zone files. This method returns an error for names that have non-standard zone files.\n     * Get Zone File\n     */\n    async fetchZoneFile(requestParameters: FetchZoneFileRequest, initOverrides?: RequestInit): Promise<object> {\n        const response = await this.fetchZoneFileRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves a list of all names known to the node.\n     * Get All Names\n     */\n    async getAllNamesRaw(requestParameters: GetAllNamesRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<string>>> {\n        const queryParameters: any = {};\n\n        if (requestParameters.page !== undefined) {\n            queryParameters['page'] = requestParameters.page;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v1/names`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Retrieves a list of all names known to the node.\n     * Get All Names\n     */\n    async getAllNames(requestParameters: GetAllNamesRequest, initOverrides?: RequestInit): Promise<Array<string>> {\n        const response = await this.getAllNamesRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves a list of all namespaces known to the node.\n     * Get All Namespaces\n     */\n    async getAllNamespacesRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<BnsGetAllNamespacesResponse>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v1/namespaces`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => BnsGetAllNamespacesResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves a list of all namespaces known to the node.\n     * Get All Namespaces\n     */\n    async getAllNamespaces(initOverrides?: RequestInit): Promise<BnsGetAllNamespacesResponse> {\n        const response = await this.getAllNamespacesRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves the historical zonefile specified by the username and zone hash.\n     * Get Historical Zone File\n     */\n    async getHistoricalZoneFileRaw(requestParameters: GetHistoricalZoneFileRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<object>> {\n        if (requestParameters.name === null || requestParameters.name === undefined) {\n            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling getHistoricalZoneFile.');\n        }\n\n        if (requestParameters.zoneFileHash === null || requestParameters.zoneFileHash === undefined) {\n            throw new runtime.RequiredError('zoneFileHash','Required parameter requestParameters.zoneFileHash was null or undefined when calling getHistoricalZoneFile.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v1/names/{name}/zonefile/{zoneFileHash}`.replace(`{${\"name\"}}`, encodeURIComponent(String(requestParameters.name))).replace(`{${\"zoneFileHash\"}}`, encodeURIComponent(String(requestParameters.zoneFileHash))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Retrieves the historical zonefile specified by the username and zone hash.\n     * Get Historical Zone File\n     */\n    async getHistoricalZoneFile(requestParameters: GetHistoricalZoneFileRequest, initOverrides?: RequestInit): Promise<object> {\n        const response = await this.getHistoricalZoneFileRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves details of a given name including the `address`, `status` and last transaction id - `last_txid`.\n     * Get Name Details\n     */\n    async getNameInfoRaw(requestParameters: GetNameInfoRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BnsGetNameInfoResponse>> {\n        if (requestParameters.name === null || requestParameters.name === undefined) {\n            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling getNameInfo.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v1/names/{name}`.replace(`{${\"name\"}}`, encodeURIComponent(String(requestParameters.name))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => BnsGetNameInfoResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves details of a given name including the `address`, `status` and last transaction id - `last_txid`.\n     * Get Name Details\n     */\n    async getNameInfo(requestParameters: GetNameInfoRequest, initOverrides?: RequestInit): Promise<BnsGetNameInfoResponse> {\n        const response = await this.getNameInfoRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves the price of a name. The `amount` given will be in the smallest possible units of the currency.\n     * Get Name Price\n     */\n    async getNamePriceRaw(requestParameters: GetNamePriceRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BnsGetNamePriceResponse>> {\n        if (requestParameters.name === null || requestParameters.name === undefined) {\n            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling getNamePrice.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2/prices/names/{name}`.replace(`{${\"name\"}}`, encodeURIComponent(String(requestParameters.name))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => BnsGetNamePriceResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves the price of a name. The `amount` given will be in the smallest possible units of the currency.\n     * Get Name Price\n     */\n    async getNamePrice(requestParameters: GetNamePriceRequest, initOverrides?: RequestInit): Promise<BnsGetNamePriceResponse> {\n        const response = await this.getNamePriceRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves a list of names owned by the address provided.\n     * Get Names Owned by Address\n     */\n    async getNamesOwnedByAddressRaw(requestParameters: GetNamesOwnedByAddressRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BnsNamesOwnByAddressResponse>> {\n        if (requestParameters.blockchain === null || requestParameters.blockchain === undefined) {\n            throw new runtime.RequiredError('blockchain','Required parameter requestParameters.blockchain was null or undefined when calling getNamesOwnedByAddress.');\n        }\n\n        if (requestParameters.address === null || requestParameters.address === undefined) {\n            throw new runtime.RequiredError('address','Required parameter requestParameters.address was null or undefined when calling getNamesOwnedByAddress.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v1/addresses/{blockchain}/{address}`.replace(`{${\"blockchain\"}}`, encodeURIComponent(String(requestParameters.blockchain))).replace(`{${\"address\"}}`, encodeURIComponent(String(requestParameters.address))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => BnsNamesOwnByAddressResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves a list of names owned by the address provided.\n     * Get Names Owned by Address\n     */\n    async getNamesOwnedByAddress(requestParameters: GetNamesOwnedByAddressRequest, initOverrides?: RequestInit): Promise<BnsNamesOwnByAddressResponse> {\n        const response = await this.getNamesOwnedByAddressRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves a list of names within a given namespace.\n     * Get Namespace Names\n     */\n    async getNamespaceNamesRaw(requestParameters: GetNamespaceNamesRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<string>>> {\n        if (requestParameters.tld === null || requestParameters.tld === undefined) {\n            throw new runtime.RequiredError('tld','Required parameter requestParameters.tld was null or undefined when calling getNamespaceNames.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.page !== undefined) {\n            queryParameters['page'] = requestParameters.page;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v1/namespaces/{tld}/names`.replace(`{${\"tld\"}}`, encodeURIComponent(String(requestParameters.tld))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Retrieves a list of names within a given namespace.\n     * Get Namespace Names\n     */\n    async getNamespaceNames(requestParameters: GetNamespaceNamesRequest, initOverrides?: RequestInit): Promise<Array<string>> {\n        const response = await this.getNamespaceNamesRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves the price of a namespace. The `amount` given will be in the smallest possible units of the currency.\n     * Get Namespace Price\n     */\n    async getNamespacePriceRaw(requestParameters: GetNamespacePriceRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BnsGetNamespacePriceResponse>> {\n        if (requestParameters.tld === null || requestParameters.tld === undefined) {\n            throw new runtime.RequiredError('tld','Required parameter requestParameters.tld was null or undefined when calling getNamespacePrice.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2/prices/namespaces/{tld}`.replace(`{${\"tld\"}}`, encodeURIComponent(String(requestParameters.tld))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => BnsGetNamespacePriceResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves the price of a namespace. The `amount` given will be in the smallest possible units of the currency.\n     * Get Namespace Price\n     */\n    async getNamespacePrice(requestParameters: GetNamespacePriceRequest, initOverrides?: RequestInit): Promise<BnsGetNamespacePriceResponse> {\n        const response = await this.getNamespacePriceRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    NonFungibleTokenHistoryEventList,\n    NonFungibleTokenHistoryEventListFromJSON,\n    NonFungibleTokenHistoryEventListToJSON,\n    NonFungibleTokenHoldingsList,\n    NonFungibleTokenHoldingsListFromJSON,\n    NonFungibleTokenHoldingsListToJSON,\n    NonFungibleTokenMetadata,\n    NonFungibleTokenMetadataFromJSON,\n    NonFungibleTokenMetadataToJSON,\n    NonFungibleTokenMintList,\n    NonFungibleTokenMintListFromJSON,\n    NonFungibleTokenMintListToJSON,\n    NonFungibleTokensMetadataList,\n    NonFungibleTokensMetadataListFromJSON,\n    NonFungibleTokensMetadataListToJSON,\n} from '../models';\n\nexport interface GetContractNftMetadataRequest {\n    contractId: string;\n}\n\nexport interface GetNftHistoryRequest {\n    assetIdentifier: string;\n    value: string;\n    limit?: number;\n    offset?: number;\n    unanchored?: boolean;\n    txMetadata?: boolean;\n}\n\nexport interface GetNftHoldingsRequest {\n    principal: string;\n    assetIdentifiers?: Array<string>;\n    limit?: number;\n    offset?: number;\n    unanchored?: boolean;\n    txMetadata?: boolean;\n}\n\nexport interface GetNftMetadataListRequest {\n    limit?: number;\n    offset?: number;\n}\n\nexport interface GetNftMintsRequest {\n    assetIdentifier: string;\n    limit?: number;\n    offset?: number;\n    unanchored?: boolean;\n    txMetadata?: boolean;\n}\n\n/**\n * NonFungibleTokensApi - interface\n * \n * @export\n * @interface NonFungibleTokensApiInterface\n */\nexport interface NonFungibleTokensApiInterface {\n    /**\n     * Retrieves metadata for non fungible tokens for a given contract id. More information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts).\n     * @summary Non fungible tokens metadata for contract ID\n     * @param {string} contractId token\\&#39;s contract id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof NonFungibleTokensApiInterface\n     */\n    getContractNftMetadataRaw(requestParameters: GetContractNftMetadataRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<NonFungibleTokenMetadata>>;\n\n    /**\n     * Retrieves metadata for non fungible tokens for a given contract id. More information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts).\n     * Non fungible tokens metadata for contract ID\n     */\n    getContractNftMetadata(requestParameters: GetContractNftMetadataRequest, initOverrides?: RequestInit): Promise<NonFungibleTokenMetadata>;\n\n    /**\n     * Retrieves all events relevant to a Non-Fungible Token. Useful to determine the ownership history of a particular asset.  More information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts). \n     * @summary Non-Fungible Token history\n     * @param {string} assetIdentifier token asset class identifier\n     * @param {string} value hex representation of the token\\&#39;s unique value\n     * @param {number} [limit] max number of events to fetch\n     * @param {number} [offset] index of first event to fetch\n     * @param {boolean} [unanchored] whether or not to include events from unconfirmed transactions\n     * @param {boolean} [txMetadata] whether or not to include the complete transaction metadata instead of just &#x60;tx_id&#x60;. Enabling this option can affect performance and response times.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof NonFungibleTokensApiInterface\n     */\n    getNftHistoryRaw(requestParameters: GetNftHistoryRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<NonFungibleTokenHistoryEventList>>;\n\n    /**\n     * Retrieves all events relevant to a Non-Fungible Token. Useful to determine the ownership history of a particular asset.  More information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts). \n     * Non-Fungible Token history\n     */\n    getNftHistory(requestParameters: GetNftHistoryRequest, initOverrides?: RequestInit): Promise<NonFungibleTokenHistoryEventList>;\n\n    /**\n     * Retrieves the list of Non-Fungible Tokens owned by the given principal (STX address or Smart Contract ID). Results can be filtered by one or more asset identifiers and can include metadata about the transaction that made the principal own each token.  More information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts). \n     * @summary Non-Fungible Token holdings\n     * @param {string} principal token owner\\&#39;s STX address or Smart Contract ID\n     * @param {Array<string>} [assetIdentifiers] identifiers of the token asset classes to filter for\n     * @param {number} [limit] max number of tokens to fetch\n     * @param {number} [offset] index of first tokens to fetch\n     * @param {boolean} [unanchored] whether or not to include tokens from unconfirmed transactions\n     * @param {boolean} [txMetadata] whether or not to include the complete transaction metadata instead of just &#x60;tx_id&#x60;. Enabling this option can affect performance and response times.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof NonFungibleTokensApiInterface\n     */\n    getNftHoldingsRaw(requestParameters: GetNftHoldingsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<NonFungibleTokenHoldingsList>>;\n\n    /**\n     * Retrieves the list of Non-Fungible Tokens owned by the given principal (STX address or Smart Contract ID). Results can be filtered by one or more asset identifiers and can include metadata about the transaction that made the principal own each token.  More information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts). \n     * Non-Fungible Token holdings\n     */\n    getNftHoldings(requestParameters: GetNftHoldingsRequest, initOverrides?: RequestInit): Promise<NonFungibleTokenHoldingsList>;\n\n    /**\n     * Retrieves a list of non fungible tokens with their metadata. More information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts).\n     * @summary Non fungible tokens metadata list\n     * @param {number} [limit] max number of tokens to fetch\n     * @param {number} [offset] index of first tokens to fetch\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof NonFungibleTokensApiInterface\n     */\n    getNftMetadataListRaw(requestParameters: GetNftMetadataListRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<NonFungibleTokensMetadataList>>;\n\n    /**\n     * Retrieves a list of non fungible tokens with their metadata. More information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts).\n     * Non fungible tokens metadata list\n     */\n    getNftMetadataList(requestParameters: GetNftMetadataListRequest, initOverrides?: RequestInit): Promise<NonFungibleTokensMetadataList>;\n\n    /**\n     * Retrieves all mint events for a Non-Fungible Token asset class. Useful to determine which NFTs of a particular collection have been claimed.  More information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts). \n     * @summary Non-Fungible Token mints\n     * @param {string} assetIdentifier token asset class identifier\n     * @param {number} [limit] max number of events to fetch\n     * @param {number} [offset] index of first event to fetch\n     * @param {boolean} [unanchored] whether or not to include events from unconfirmed transactions\n     * @param {boolean} [txMetadata] whether or not to include the complete transaction metadata instead of just &#x60;tx_id&#x60;. Enabling this option can affect performance and response times.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof NonFungibleTokensApiInterface\n     */\n    getNftMintsRaw(requestParameters: GetNftMintsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<NonFungibleTokenMintList>>;\n\n    /**\n     * Retrieves all mint events for a Non-Fungible Token asset class. Useful to determine which NFTs of a particular collection have been claimed.  More information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts). \n     * Non-Fungible Token mints\n     */\n    getNftMints(requestParameters: GetNftMintsRequest, initOverrides?: RequestInit): Promise<NonFungibleTokenMintList>;\n\n}\n\n/**\n * \n */\nexport class NonFungibleTokensApi extends runtime.BaseAPI implements NonFungibleTokensApiInterface {\n\n    /**\n     * Retrieves metadata for non fungible tokens for a given contract id. More information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts).\n     * Non fungible tokens metadata for contract ID\n     */\n    async getContractNftMetadataRaw(requestParameters: GetContractNftMetadataRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<NonFungibleTokenMetadata>> {\n        if (requestParameters.contractId === null || requestParameters.contractId === undefined) {\n            throw new runtime.RequiredError('contractId','Required parameter requestParameters.contractId was null or undefined when calling getContractNftMetadata.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/tokens/{contractId}/nft/metadata`.replace(`{${\"contractId\"}}`, encodeURIComponent(String(requestParameters.contractId))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => NonFungibleTokenMetadataFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves metadata for non fungible tokens for a given contract id. More information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts).\n     * Non fungible tokens metadata for contract ID\n     */\n    async getContractNftMetadata(requestParameters: GetContractNftMetadataRequest, initOverrides?: RequestInit): Promise<NonFungibleTokenMetadata> {\n        const response = await this.getContractNftMetadataRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves all events relevant to a Non-Fungible Token. Useful to determine the ownership history of a particular asset.  More information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts). \n     * Non-Fungible Token history\n     */\n    async getNftHistoryRaw(requestParameters: GetNftHistoryRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<NonFungibleTokenHistoryEventList>> {\n        if (requestParameters.assetIdentifier === null || requestParameters.assetIdentifier === undefined) {\n            throw new runtime.RequiredError('assetIdentifier','Required parameter requestParameters.assetIdentifier was null or undefined when calling getNftHistory.');\n        }\n\n        if (requestParameters.value === null || requestParameters.value === undefined) {\n            throw new runtime.RequiredError('value','Required parameter requestParameters.value was null or undefined when calling getNftHistory.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.assetIdentifier !== undefined) {\n            queryParameters['asset_identifier'] = requestParameters.assetIdentifier;\n        }\n\n        if (requestParameters.value !== undefined) {\n            queryParameters['value'] = requestParameters.value;\n        }\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        if (requestParameters.unanchored !== undefined) {\n            queryParameters['unanchored'] = requestParameters.unanchored;\n        }\n\n        if (requestParameters.txMetadata !== undefined) {\n            queryParameters['tx_metadata'] = requestParameters.txMetadata;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/tokens/nft/history`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => NonFungibleTokenHistoryEventListFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves all events relevant to a Non-Fungible Token. Useful to determine the ownership history of a particular asset.  More information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts). \n     * Non-Fungible Token history\n     */\n    async getNftHistory(requestParameters: GetNftHistoryRequest, initOverrides?: RequestInit): Promise<NonFungibleTokenHistoryEventList> {\n        const response = await this.getNftHistoryRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves the list of Non-Fungible Tokens owned by the given principal (STX address or Smart Contract ID). Results can be filtered by one or more asset identifiers and can include metadata about the transaction that made the principal own each token.  More information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts). \n     * Non-Fungible Token holdings\n     */\n    async getNftHoldingsRaw(requestParameters: GetNftHoldingsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<NonFungibleTokenHoldingsList>> {\n        if (requestParameters.principal === null || requestParameters.principal === undefined) {\n            throw new runtime.RequiredError('principal','Required parameter requestParameters.principal was null or undefined when calling getNftHoldings.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.principal !== undefined) {\n            queryParameters['principal'] = requestParameters.principal;\n        }\n\n        if (requestParameters.assetIdentifiers) {\n            queryParameters['asset_identifiers'] = requestParameters.assetIdentifiers;\n        }\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        if (requestParameters.unanchored !== undefined) {\n            queryParameters['unanchored'] = requestParameters.unanchored;\n        }\n\n        if (requestParameters.txMetadata !== undefined) {\n            queryParameters['tx_metadata'] = requestParameters.txMetadata;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/tokens/nft/holdings`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => NonFungibleTokenHoldingsListFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves the list of Non-Fungible Tokens owned by the given principal (STX address or Smart Contract ID). Results can be filtered by one or more asset identifiers and can include metadata about the transaction that made the principal own each token.  More information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts). \n     * Non-Fungible Token holdings\n     */\n    async getNftHoldings(requestParameters: GetNftHoldingsRequest, initOverrides?: RequestInit): Promise<NonFungibleTokenHoldingsList> {\n        const response = await this.getNftHoldingsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves a list of non fungible tokens with their metadata. More information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts).\n     * Non fungible tokens metadata list\n     */\n    async getNftMetadataListRaw(requestParameters: GetNftMetadataListRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<NonFungibleTokensMetadataList>> {\n        const queryParameters: any = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/tokens/nft/metadata`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => NonFungibleTokensMetadataListFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves a list of non fungible tokens with their metadata. More information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts).\n     * Non fungible tokens metadata list\n     */\n    async getNftMetadataList(requestParameters: GetNftMetadataListRequest, initOverrides?: RequestInit): Promise<NonFungibleTokensMetadataList> {\n        const response = await this.getNftMetadataListRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves all mint events for a Non-Fungible Token asset class. Useful to determine which NFTs of a particular collection have been claimed.  More information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts). \n     * Non-Fungible Token mints\n     */\n    async getNftMintsRaw(requestParameters: GetNftMintsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<NonFungibleTokenMintList>> {\n        if (requestParameters.assetIdentifier === null || requestParameters.assetIdentifier === undefined) {\n            throw new runtime.RequiredError('assetIdentifier','Required parameter requestParameters.assetIdentifier was null or undefined when calling getNftMints.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.assetIdentifier !== undefined) {\n            queryParameters['asset_identifier'] = requestParameters.assetIdentifier;\n        }\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        if (requestParameters.unanchored !== undefined) {\n            queryParameters['unanchored'] = requestParameters.unanchored;\n        }\n\n        if (requestParameters.txMetadata !== undefined) {\n            queryParameters['tx_metadata'] = requestParameters.txMetadata;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/tokens/nft/mints`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => NonFungibleTokenMintListFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves all mint events for a Non-Fungible Token asset class. Useful to determine which NFTs of a particular collection have been claimed.  More information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts). \n     * Non-Fungible Token mints\n     */\n    async getNftMints(requestParameters: GetNftMintsRequest, initOverrides?: RequestInit): Promise<NonFungibleTokenMintList> {\n        const response = await this.getNftMintsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    RosettaAccountBalanceRequest,\n    RosettaAccountBalanceRequestFromJSON,\n    RosettaAccountBalanceRequestToJSON,\n    RosettaAccountBalanceResponse,\n    RosettaAccountBalanceResponseFromJSON,\n    RosettaAccountBalanceResponseToJSON,\n    RosettaBlockRequest,\n    RosettaBlockRequestFromJSON,\n    RosettaBlockRequestToJSON,\n    RosettaBlockResponse,\n    RosettaBlockResponseFromJSON,\n    RosettaBlockResponseToJSON,\n    RosettaBlockTransactionRequest,\n    RosettaBlockTransactionRequestFromJSON,\n    RosettaBlockTransactionRequestToJSON,\n    RosettaBlockTransactionResponse,\n    RosettaBlockTransactionResponseFromJSON,\n    RosettaBlockTransactionResponseToJSON,\n    RosettaConstructionCombineRequest,\n    RosettaConstructionCombineRequestFromJSON,\n    RosettaConstructionCombineRequestToJSON,\n    RosettaConstructionCombineResponse,\n    RosettaConstructionCombineResponseFromJSON,\n    RosettaConstructionCombineResponseToJSON,\n    RosettaConstructionDeriveRequest,\n    RosettaConstructionDeriveRequestFromJSON,\n    RosettaConstructionDeriveRequestToJSON,\n    RosettaConstructionDeriveResponse,\n    RosettaConstructionDeriveResponseFromJSON,\n    RosettaConstructionDeriveResponseToJSON,\n    RosettaConstructionHashRequest,\n    RosettaConstructionHashRequestFromJSON,\n    RosettaConstructionHashRequestToJSON,\n    RosettaConstructionHashResponse,\n    RosettaConstructionHashResponseFromJSON,\n    RosettaConstructionHashResponseToJSON,\n    RosettaConstructionMetadataRequest,\n    RosettaConstructionMetadataRequestFromJSON,\n    RosettaConstructionMetadataRequestToJSON,\n    RosettaConstructionMetadataResponse,\n    RosettaConstructionMetadataResponseFromJSON,\n    RosettaConstructionMetadataResponseToJSON,\n    RosettaConstructionParseRequest,\n    RosettaConstructionParseRequestFromJSON,\n    RosettaConstructionParseRequestToJSON,\n    RosettaConstructionParseResponse,\n    RosettaConstructionParseResponseFromJSON,\n    RosettaConstructionParseResponseToJSON,\n    RosettaConstructionPayloadResponse,\n    RosettaConstructionPayloadResponseFromJSON,\n    RosettaConstructionPayloadResponseToJSON,\n    RosettaConstructionPayloadsRequest,\n    RosettaConstructionPayloadsRequestFromJSON,\n    RosettaConstructionPayloadsRequestToJSON,\n    RosettaConstructionPreprocessRequest,\n    RosettaConstructionPreprocessRequestFromJSON,\n    RosettaConstructionPreprocessRequestToJSON,\n    RosettaConstructionPreprocessResponse,\n    RosettaConstructionPreprocessResponseFromJSON,\n    RosettaConstructionPreprocessResponseToJSON,\n    RosettaConstructionSubmitRequest,\n    RosettaConstructionSubmitRequestFromJSON,\n    RosettaConstructionSubmitRequestToJSON,\n    RosettaConstructionSubmitResponse,\n    RosettaConstructionSubmitResponseFromJSON,\n    RosettaConstructionSubmitResponseToJSON,\n    RosettaError,\n    RosettaErrorFromJSON,\n    RosettaErrorToJSON,\n    RosettaMempoolRequest,\n    RosettaMempoolRequestFromJSON,\n    RosettaMempoolRequestToJSON,\n    RosettaMempoolResponse,\n    RosettaMempoolResponseFromJSON,\n    RosettaMempoolResponseToJSON,\n    RosettaMempoolTransactionRequest,\n    RosettaMempoolTransactionRequestFromJSON,\n    RosettaMempoolTransactionRequestToJSON,\n    RosettaMempoolTransactionResponse,\n    RosettaMempoolTransactionResponseFromJSON,\n    RosettaMempoolTransactionResponseToJSON,\n    RosettaNetworkListResponse,\n    RosettaNetworkListResponseFromJSON,\n    RosettaNetworkListResponseToJSON,\n    RosettaNetworkOptionsResponse,\n    RosettaNetworkOptionsResponseFromJSON,\n    RosettaNetworkOptionsResponseToJSON,\n    RosettaNetworkStatusResponse,\n    RosettaNetworkStatusResponseFromJSON,\n    RosettaNetworkStatusResponseToJSON,\n    RosettaOptionsRequest,\n    RosettaOptionsRequestFromJSON,\n    RosettaOptionsRequestToJSON,\n    RosettaStatusRequest,\n    RosettaStatusRequestFromJSON,\n    RosettaStatusRequestToJSON,\n} from '../models';\n\nexport interface RosettaAccountBalanceOperationRequest {\n    rosettaAccountBalanceRequest: RosettaAccountBalanceRequest;\n}\n\nexport interface RosettaBlockOperationRequest {\n    rosettaBlockRequest: RosettaBlockRequest;\n}\n\nexport interface RosettaBlockTransactionOperationRequest {\n    rosettaBlockTransactionRequest: RosettaBlockTransactionRequest;\n}\n\nexport interface RosettaConstructionCombineOperationRequest {\n    rosettaConstructionCombineRequest: RosettaConstructionCombineRequest;\n}\n\nexport interface RosettaConstructionDeriveOperationRequest {\n    rosettaConstructionDeriveRequest: RosettaConstructionDeriveRequest;\n}\n\nexport interface RosettaConstructionHashOperationRequest {\n    rosettaConstructionHashRequest: RosettaConstructionHashRequest;\n}\n\nexport interface RosettaConstructionMetadataOperationRequest {\n    rosettaConstructionMetadataRequest: RosettaConstructionMetadataRequest;\n}\n\nexport interface RosettaConstructionParseOperationRequest {\n    rosettaConstructionParseRequest: RosettaConstructionParseRequest;\n}\n\nexport interface RosettaConstructionPayloadsOperationRequest {\n    rosettaConstructionPayloadsRequest: RosettaConstructionPayloadsRequest;\n}\n\nexport interface RosettaConstructionPreprocessOperationRequest {\n    rosettaConstructionPreprocessRequest: RosettaConstructionPreprocessRequest;\n}\n\nexport interface RosettaConstructionSubmitOperationRequest {\n    rosettaConstructionSubmitRequest: RosettaConstructionSubmitRequest;\n}\n\nexport interface RosettaMempoolOperationRequest {\n    rosettaMempoolRequest: RosettaMempoolRequest;\n}\n\nexport interface RosettaMempoolTransactionOperationRequest {\n    rosettaMempoolTransactionRequest: RosettaMempoolTransactionRequest;\n}\n\nexport interface RosettaNetworkOptionsRequest {\n    rosettaOptionsRequest: RosettaOptionsRequest;\n}\n\nexport interface RosettaNetworkStatusRequest {\n    rosettaStatusRequest: RosettaStatusRequest;\n}\n\n/**\n * RosettaApi - interface\n * \n * @export\n * @interface RosettaApiInterface\n */\nexport interface RosettaApiInterface {\n    /**\n     * An AccountBalanceRequest is utilized to make a balance request on the /account/balance endpoint. If the block_identifier is populated, a historical balance query should be performed. \n     * @summary Get an Account Balance\n     * @param {RosettaAccountBalanceRequest} rosettaAccountBalanceRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RosettaApiInterface\n     */\n    rosettaAccountBalanceRaw(requestParameters: RosettaAccountBalanceOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaAccountBalanceResponse>>;\n\n    /**\n     * An AccountBalanceRequest is utilized to make a balance request on the /account/balance endpoint. If the block_identifier is populated, a historical balance query should be performed. \n     * Get an Account Balance\n     */\n    rosettaAccountBalance(requestParameters: RosettaAccountBalanceOperationRequest, initOverrides?: RequestInit): Promise<RosettaAccountBalanceResponse>;\n\n    /**\n     * Retrieves the Block information for a given block identifier including a list of all transactions in the block.\n     * @summary Get a Block\n     * @param {RosettaBlockRequest} rosettaBlockRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RosettaApiInterface\n     */\n    rosettaBlockRaw(requestParameters: RosettaBlockOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaBlockResponse>>;\n\n    /**\n     * Retrieves the Block information for a given block identifier including a list of all transactions in the block.\n     * Get a Block\n     */\n    rosettaBlock(requestParameters: RosettaBlockOperationRequest, initOverrides?: RequestInit): Promise<RosettaBlockResponse>;\n\n    /**\n     * Retrieves a Transaction included in a block that is not returned in a BlockResponse.\n     * @summary Get a Block Transaction\n     * @param {RosettaBlockTransactionRequest} rosettaBlockTransactionRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RosettaApiInterface\n     */\n    rosettaBlockTransactionRaw(requestParameters: RosettaBlockTransactionOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaBlockTransactionResponse>>;\n\n    /**\n     * Retrieves a Transaction included in a block that is not returned in a BlockResponse.\n     * Get a Block Transaction\n     */\n    rosettaBlockTransaction(requestParameters: RosettaBlockTransactionOperationRequest, initOverrides?: RequestInit): Promise<RosettaBlockTransactionResponse>;\n\n    /**\n     * Take unsigned transaction and signature, combine both and return signed transaction. The examples below are illustrative only. You\\'ll need to use your wallet to generate actual values to use them in the request payload.\n     * @summary Create Network Transaction from Signatures\n     * @param {RosettaConstructionCombineRequest} rosettaConstructionCombineRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RosettaApiInterface\n     */\n    rosettaConstructionCombineRaw(requestParameters: RosettaConstructionCombineOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaConstructionCombineResponse>>;\n\n    /**\n     * Take unsigned transaction and signature, combine both and return signed transaction. The examples below are illustrative only. You\\'ll need to use your wallet to generate actual values to use them in the request payload.\n     * Create Network Transaction from Signatures\n     */\n    rosettaConstructionCombine(requestParameters: RosettaConstructionCombineOperationRequest, initOverrides?: RequestInit): Promise<RosettaConstructionCombineResponse>;\n\n    /**\n     * Retrieves the Account Identifier information based on a Public Key for a given network\n     * @summary Derive an AccountIdentifier from a PublicKey\n     * @param {RosettaConstructionDeriveRequest} rosettaConstructionDeriveRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RosettaApiInterface\n     */\n    rosettaConstructionDeriveRaw(requestParameters: RosettaConstructionDeriveOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaConstructionDeriveResponse>>;\n\n    /**\n     * Retrieves the Account Identifier information based on a Public Key for a given network\n     * Derive an AccountIdentifier from a PublicKey\n     */\n    rosettaConstructionDerive(requestParameters: RosettaConstructionDeriveOperationRequest, initOverrides?: RequestInit): Promise<RosettaConstructionDeriveResponse>;\n\n    /**\n     * Retrieves the network-specific transaction hash for a signed transaction.\n     * @summary Get the Hash of a Signed Transaction\n     * @param {RosettaConstructionHashRequest} rosettaConstructionHashRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RosettaApiInterface\n     */\n    rosettaConstructionHashRaw(requestParameters: RosettaConstructionHashOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaConstructionHashResponse>>;\n\n    /**\n     * Retrieves the network-specific transaction hash for a signed transaction.\n     * Get the Hash of a Signed Transaction\n     */\n    rosettaConstructionHash(requestParameters: RosettaConstructionHashOperationRequest, initOverrides?: RequestInit): Promise<RosettaConstructionHashResponse>;\n\n    /**\n     * To Do\n     * @summary Get Metadata for Transaction Construction\n     * @param {RosettaConstructionMetadataRequest} rosettaConstructionMetadataRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RosettaApiInterface\n     */\n    rosettaConstructionMetadataRaw(requestParameters: RosettaConstructionMetadataOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaConstructionMetadataResponse>>;\n\n    /**\n     * To Do\n     * Get Metadata for Transaction Construction\n     */\n    rosettaConstructionMetadata(requestParameters: RosettaConstructionMetadataOperationRequest, initOverrides?: RequestInit): Promise<RosettaConstructionMetadataResponse>;\n\n    /**\n     * TODO\n     * @summary Parse a Transaction\n     * @param {RosettaConstructionParseRequest} rosettaConstructionParseRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RosettaApiInterface\n     */\n    rosettaConstructionParseRaw(requestParameters: RosettaConstructionParseOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaConstructionParseResponse>>;\n\n    /**\n     * TODO\n     * Parse a Transaction\n     */\n    rosettaConstructionParse(requestParameters: RosettaConstructionParseOperationRequest, initOverrides?: RequestInit): Promise<RosettaConstructionParseResponse>;\n\n    /**\n     * Generate an unsigned transaction from operations and metadata. The examples below are illustrative only. You\\'ll need to use your wallet to generate actual values to use them in the request payload.\n     * @summary Generate an Unsigned Transaction and Signing Payloads\n     * @param {RosettaConstructionPayloadsRequest} rosettaConstructionPayloadsRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RosettaApiInterface\n     */\n    rosettaConstructionPayloadsRaw(requestParameters: RosettaConstructionPayloadsOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaConstructionPayloadResponse>>;\n\n    /**\n     * Generate an unsigned transaction from operations and metadata. The examples below are illustrative only. You\\'ll need to use your wallet to generate actual values to use them in the request payload.\n     * Generate an Unsigned Transaction and Signing Payloads\n     */\n    rosettaConstructionPayloads(requestParameters: RosettaConstructionPayloadsOperationRequest, initOverrides?: RequestInit): Promise<RosettaConstructionPayloadResponse>;\n\n    /**\n     * TODO\n     * @summary Create a Request to Fetch Metadata\n     * @param {RosettaConstructionPreprocessRequest} rosettaConstructionPreprocessRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RosettaApiInterface\n     */\n    rosettaConstructionPreprocessRaw(requestParameters: RosettaConstructionPreprocessOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaConstructionPreprocessResponse>>;\n\n    /**\n     * TODO\n     * Create a Request to Fetch Metadata\n     */\n    rosettaConstructionPreprocess(requestParameters: RosettaConstructionPreprocessOperationRequest, initOverrides?: RequestInit): Promise<RosettaConstructionPreprocessResponse>;\n\n    /**\n     * Submit a pre-signed transaction to the node. The examples below are illustrative only. You\\'ll need to use your wallet to generate actual values to use them in the request payload.\n     * @summary Submit a Signed Transaction\n     * @param {RosettaConstructionSubmitRequest} rosettaConstructionSubmitRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RosettaApiInterface\n     */\n    rosettaConstructionSubmitRaw(requestParameters: RosettaConstructionSubmitOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaConstructionSubmitResponse>>;\n\n    /**\n     * Submit a pre-signed transaction to the node. The examples below are illustrative only. You\\'ll need to use your wallet to generate actual values to use them in the request payload.\n     * Submit a Signed Transaction\n     */\n    rosettaConstructionSubmit(requestParameters: RosettaConstructionSubmitOperationRequest, initOverrides?: RequestInit): Promise<RosettaConstructionSubmitResponse>;\n\n    /**\n     * Retrieves a list of transactions currently in the mempool for a given network.\n     * @summary Get All Mempool Transactions\n     * @param {RosettaMempoolRequest} rosettaMempoolRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RosettaApiInterface\n     */\n    rosettaMempoolRaw(requestParameters: RosettaMempoolOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaMempoolResponse>>;\n\n    /**\n     * Retrieves a list of transactions currently in the mempool for a given network.\n     * Get All Mempool Transactions\n     */\n    rosettaMempool(requestParameters: RosettaMempoolOperationRequest, initOverrides?: RequestInit): Promise<RosettaMempoolResponse>;\n\n    /**\n     * Retrieves transaction details from the mempool for a given transaction id from a given network.\n     * @summary Get a Mempool Transaction\n     * @param {RosettaMempoolTransactionRequest} rosettaMempoolTransactionRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RosettaApiInterface\n     */\n    rosettaMempoolTransactionRaw(requestParameters: RosettaMempoolTransactionOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaMempoolTransactionResponse>>;\n\n    /**\n     * Retrieves transaction details from the mempool for a given transaction id from a given network.\n     * Get a Mempool Transaction\n     */\n    rosettaMempoolTransaction(requestParameters: RosettaMempoolTransactionOperationRequest, initOverrides?: RequestInit): Promise<RosettaMempoolTransactionResponse>;\n\n    /**\n     * Retrieves a list of NetworkIdentifiers that the Rosetta server supports.\n     * @summary Get List of Available Networks\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RosettaApiInterface\n     */\n    rosettaNetworkListRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaNetworkListResponse>>;\n\n    /**\n     * Retrieves a list of NetworkIdentifiers that the Rosetta server supports.\n     * Get List of Available Networks\n     */\n    rosettaNetworkList(initOverrides?: RequestInit): Promise<RosettaNetworkListResponse>;\n\n    /**\n     * Retrieves the version information and allowed network-specific types for a NetworkIdentifier. Any NetworkIdentifier returned by /network/list should be accessible here. Because options are retrievable in the context of a NetworkIdentifier, it is possible to define unique options for each network. \n     * @summary Get Network Options\n     * @param {RosettaOptionsRequest} rosettaOptionsRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RosettaApiInterface\n     */\n    rosettaNetworkOptionsRaw(requestParameters: RosettaNetworkOptionsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaNetworkOptionsResponse>>;\n\n    /**\n     * Retrieves the version information and allowed network-specific types for a NetworkIdentifier. Any NetworkIdentifier returned by /network/list should be accessible here. Because options are retrievable in the context of a NetworkIdentifier, it is possible to define unique options for each network. \n     * Get Network Options\n     */\n    rosettaNetworkOptions(requestParameters: RosettaNetworkOptionsRequest, initOverrides?: RequestInit): Promise<RosettaNetworkOptionsResponse>;\n\n    /**\n     * Retrieves the current status of the network requested. Any NetworkIdentifier returned by /network/list should be accessible here. \n     * @summary Get Network Status\n     * @param {RosettaStatusRequest} rosettaStatusRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RosettaApiInterface\n     */\n    rosettaNetworkStatusRaw(requestParameters: RosettaNetworkStatusRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaNetworkStatusResponse>>;\n\n    /**\n     * Retrieves the current status of the network requested. Any NetworkIdentifier returned by /network/list should be accessible here. \n     * Get Network Status\n     */\n    rosettaNetworkStatus(requestParameters: RosettaNetworkStatusRequest, initOverrides?: RequestInit): Promise<RosettaNetworkStatusResponse>;\n\n}\n\n/**\n * \n */\nexport class RosettaApi extends runtime.BaseAPI implements RosettaApiInterface {\n\n    /**\n     * An AccountBalanceRequest is utilized to make a balance request on the /account/balance endpoint. If the block_identifier is populated, a historical balance query should be performed. \n     * Get an Account Balance\n     */\n    async rosettaAccountBalanceRaw(requestParameters: RosettaAccountBalanceOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaAccountBalanceResponse>> {\n        if (requestParameters.rosettaAccountBalanceRequest === null || requestParameters.rosettaAccountBalanceRequest === undefined) {\n            throw new runtime.RequiredError('rosettaAccountBalanceRequest','Required parameter requestParameters.rosettaAccountBalanceRequest was null or undefined when calling rosettaAccountBalance.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rosetta/v1/account/balance`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RosettaAccountBalanceRequestToJSON(requestParameters.rosettaAccountBalanceRequest),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RosettaAccountBalanceResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * An AccountBalanceRequest is utilized to make a balance request on the /account/balance endpoint. If the block_identifier is populated, a historical balance query should be performed. \n     * Get an Account Balance\n     */\n    async rosettaAccountBalance(requestParameters: RosettaAccountBalanceOperationRequest, initOverrides?: RequestInit): Promise<RosettaAccountBalanceResponse> {\n        const response = await this.rosettaAccountBalanceRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves the Block information for a given block identifier including a list of all transactions in the block.\n     * Get a Block\n     */\n    async rosettaBlockRaw(requestParameters: RosettaBlockOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaBlockResponse>> {\n        if (requestParameters.rosettaBlockRequest === null || requestParameters.rosettaBlockRequest === undefined) {\n            throw new runtime.RequiredError('rosettaBlockRequest','Required parameter requestParameters.rosettaBlockRequest was null or undefined when calling rosettaBlock.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rosetta/v1/block`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RosettaBlockRequestToJSON(requestParameters.rosettaBlockRequest),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RosettaBlockResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves the Block information for a given block identifier including a list of all transactions in the block.\n     * Get a Block\n     */\n    async rosettaBlock(requestParameters: RosettaBlockOperationRequest, initOverrides?: RequestInit): Promise<RosettaBlockResponse> {\n        const response = await this.rosettaBlockRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves a Transaction included in a block that is not returned in a BlockResponse.\n     * Get a Block Transaction\n     */\n    async rosettaBlockTransactionRaw(requestParameters: RosettaBlockTransactionOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaBlockTransactionResponse>> {\n        if (requestParameters.rosettaBlockTransactionRequest === null || requestParameters.rosettaBlockTransactionRequest === undefined) {\n            throw new runtime.RequiredError('rosettaBlockTransactionRequest','Required parameter requestParameters.rosettaBlockTransactionRequest was null or undefined when calling rosettaBlockTransaction.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rosetta/v1/block/transaction`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RosettaBlockTransactionRequestToJSON(requestParameters.rosettaBlockTransactionRequest),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RosettaBlockTransactionResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves a Transaction included in a block that is not returned in a BlockResponse.\n     * Get a Block Transaction\n     */\n    async rosettaBlockTransaction(requestParameters: RosettaBlockTransactionOperationRequest, initOverrides?: RequestInit): Promise<RosettaBlockTransactionResponse> {\n        const response = await this.rosettaBlockTransactionRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Take unsigned transaction and signature, combine both and return signed transaction. The examples below are illustrative only. You\\'ll need to use your wallet to generate actual values to use them in the request payload.\n     * Create Network Transaction from Signatures\n     */\n    async rosettaConstructionCombineRaw(requestParameters: RosettaConstructionCombineOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaConstructionCombineResponse>> {\n        if (requestParameters.rosettaConstructionCombineRequest === null || requestParameters.rosettaConstructionCombineRequest === undefined) {\n            throw new runtime.RequiredError('rosettaConstructionCombineRequest','Required parameter requestParameters.rosettaConstructionCombineRequest was null or undefined when calling rosettaConstructionCombine.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rosetta/v1/construction/combine`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RosettaConstructionCombineRequestToJSON(requestParameters.rosettaConstructionCombineRequest),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RosettaConstructionCombineResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Take unsigned transaction and signature, combine both and return signed transaction. The examples below are illustrative only. You\\'ll need to use your wallet to generate actual values to use them in the request payload.\n     * Create Network Transaction from Signatures\n     */\n    async rosettaConstructionCombine(requestParameters: RosettaConstructionCombineOperationRequest, initOverrides?: RequestInit): Promise<RosettaConstructionCombineResponse> {\n        const response = await this.rosettaConstructionCombineRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves the Account Identifier information based on a Public Key for a given network\n     * Derive an AccountIdentifier from a PublicKey\n     */\n    async rosettaConstructionDeriveRaw(requestParameters: RosettaConstructionDeriveOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaConstructionDeriveResponse>> {\n        if (requestParameters.rosettaConstructionDeriveRequest === null || requestParameters.rosettaConstructionDeriveRequest === undefined) {\n            throw new runtime.RequiredError('rosettaConstructionDeriveRequest','Required parameter requestParameters.rosettaConstructionDeriveRequest was null or undefined when calling rosettaConstructionDerive.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rosetta/v1/construction/derive`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RosettaConstructionDeriveRequestToJSON(requestParameters.rosettaConstructionDeriveRequest),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RosettaConstructionDeriveResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves the Account Identifier information based on a Public Key for a given network\n     * Derive an AccountIdentifier from a PublicKey\n     */\n    async rosettaConstructionDerive(requestParameters: RosettaConstructionDeriveOperationRequest, initOverrides?: RequestInit): Promise<RosettaConstructionDeriveResponse> {\n        const response = await this.rosettaConstructionDeriveRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves the network-specific transaction hash for a signed transaction.\n     * Get the Hash of a Signed Transaction\n     */\n    async rosettaConstructionHashRaw(requestParameters: RosettaConstructionHashOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaConstructionHashResponse>> {\n        if (requestParameters.rosettaConstructionHashRequest === null || requestParameters.rosettaConstructionHashRequest === undefined) {\n            throw new runtime.RequiredError('rosettaConstructionHashRequest','Required parameter requestParameters.rosettaConstructionHashRequest was null or undefined when calling rosettaConstructionHash.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rosetta/v1/construction/hash`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RosettaConstructionHashRequestToJSON(requestParameters.rosettaConstructionHashRequest),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RosettaConstructionHashResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves the network-specific transaction hash for a signed transaction.\n     * Get the Hash of a Signed Transaction\n     */\n    async rosettaConstructionHash(requestParameters: RosettaConstructionHashOperationRequest, initOverrides?: RequestInit): Promise<RosettaConstructionHashResponse> {\n        const response = await this.rosettaConstructionHashRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * To Do\n     * Get Metadata for Transaction Construction\n     */\n    async rosettaConstructionMetadataRaw(requestParameters: RosettaConstructionMetadataOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaConstructionMetadataResponse>> {\n        if (requestParameters.rosettaConstructionMetadataRequest === null || requestParameters.rosettaConstructionMetadataRequest === undefined) {\n            throw new runtime.RequiredError('rosettaConstructionMetadataRequest','Required parameter requestParameters.rosettaConstructionMetadataRequest was null or undefined when calling rosettaConstructionMetadata.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rosetta/v1/construction/metadata`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RosettaConstructionMetadataRequestToJSON(requestParameters.rosettaConstructionMetadataRequest),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RosettaConstructionMetadataResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * To Do\n     * Get Metadata for Transaction Construction\n     */\n    async rosettaConstructionMetadata(requestParameters: RosettaConstructionMetadataOperationRequest, initOverrides?: RequestInit): Promise<RosettaConstructionMetadataResponse> {\n        const response = await this.rosettaConstructionMetadataRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * TODO\n     * Parse a Transaction\n     */\n    async rosettaConstructionParseRaw(requestParameters: RosettaConstructionParseOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaConstructionParseResponse>> {\n        if (requestParameters.rosettaConstructionParseRequest === null || requestParameters.rosettaConstructionParseRequest === undefined) {\n            throw new runtime.RequiredError('rosettaConstructionParseRequest','Required parameter requestParameters.rosettaConstructionParseRequest was null or undefined when calling rosettaConstructionParse.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rosetta/v1/construction/parse`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RosettaConstructionParseRequestToJSON(requestParameters.rosettaConstructionParseRequest),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RosettaConstructionParseResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * TODO\n     * Parse a Transaction\n     */\n    async rosettaConstructionParse(requestParameters: RosettaConstructionParseOperationRequest, initOverrides?: RequestInit): Promise<RosettaConstructionParseResponse> {\n        const response = await this.rosettaConstructionParseRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Generate an unsigned transaction from operations and metadata. The examples below are illustrative only. You\\'ll need to use your wallet to generate actual values to use them in the request payload.\n     * Generate an Unsigned Transaction and Signing Payloads\n     */\n    async rosettaConstructionPayloadsRaw(requestParameters: RosettaConstructionPayloadsOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaConstructionPayloadResponse>> {\n        if (requestParameters.rosettaConstructionPayloadsRequest === null || requestParameters.rosettaConstructionPayloadsRequest === undefined) {\n            throw new runtime.RequiredError('rosettaConstructionPayloadsRequest','Required parameter requestParameters.rosettaConstructionPayloadsRequest was null or undefined when calling rosettaConstructionPayloads.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rosetta/v1/construction/payloads`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RosettaConstructionPayloadsRequestToJSON(requestParameters.rosettaConstructionPayloadsRequest),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RosettaConstructionPayloadResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Generate an unsigned transaction from operations and metadata. The examples below are illustrative only. You\\'ll need to use your wallet to generate actual values to use them in the request payload.\n     * Generate an Unsigned Transaction and Signing Payloads\n     */\n    async rosettaConstructionPayloads(requestParameters: RosettaConstructionPayloadsOperationRequest, initOverrides?: RequestInit): Promise<RosettaConstructionPayloadResponse> {\n        const response = await this.rosettaConstructionPayloadsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * TODO\n     * Create a Request to Fetch Metadata\n     */\n    async rosettaConstructionPreprocessRaw(requestParameters: RosettaConstructionPreprocessOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaConstructionPreprocessResponse>> {\n        if (requestParameters.rosettaConstructionPreprocessRequest === null || requestParameters.rosettaConstructionPreprocessRequest === undefined) {\n            throw new runtime.RequiredError('rosettaConstructionPreprocessRequest','Required parameter requestParameters.rosettaConstructionPreprocessRequest was null or undefined when calling rosettaConstructionPreprocess.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rosetta/v1/construction/preprocess`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RosettaConstructionPreprocessRequestToJSON(requestParameters.rosettaConstructionPreprocessRequest),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RosettaConstructionPreprocessResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * TODO\n     * Create a Request to Fetch Metadata\n     */\n    async rosettaConstructionPreprocess(requestParameters: RosettaConstructionPreprocessOperationRequest, initOverrides?: RequestInit): Promise<RosettaConstructionPreprocessResponse> {\n        const response = await this.rosettaConstructionPreprocessRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Submit a pre-signed transaction to the node. The examples below are illustrative only. You\\'ll need to use your wallet to generate actual values to use them in the request payload.\n     * Submit a Signed Transaction\n     */\n    async rosettaConstructionSubmitRaw(requestParameters: RosettaConstructionSubmitOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaConstructionSubmitResponse>> {\n        if (requestParameters.rosettaConstructionSubmitRequest === null || requestParameters.rosettaConstructionSubmitRequest === undefined) {\n            throw new runtime.RequiredError('rosettaConstructionSubmitRequest','Required parameter requestParameters.rosettaConstructionSubmitRequest was null or undefined when calling rosettaConstructionSubmit.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rosetta/v1/construction/submit`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RosettaConstructionSubmitRequestToJSON(requestParameters.rosettaConstructionSubmitRequest),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RosettaConstructionSubmitResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Submit a pre-signed transaction to the node. The examples below are illustrative only. You\\'ll need to use your wallet to generate actual values to use them in the request payload.\n     * Submit a Signed Transaction\n     */\n    async rosettaConstructionSubmit(requestParameters: RosettaConstructionSubmitOperationRequest, initOverrides?: RequestInit): Promise<RosettaConstructionSubmitResponse> {\n        const response = await this.rosettaConstructionSubmitRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves a list of transactions currently in the mempool for a given network.\n     * Get All Mempool Transactions\n     */\n    async rosettaMempoolRaw(requestParameters: RosettaMempoolOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaMempoolResponse>> {\n        if (requestParameters.rosettaMempoolRequest === null || requestParameters.rosettaMempoolRequest === undefined) {\n            throw new runtime.RequiredError('rosettaMempoolRequest','Required parameter requestParameters.rosettaMempoolRequest was null or undefined when calling rosettaMempool.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rosetta/v1/mempool`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RosettaMempoolRequestToJSON(requestParameters.rosettaMempoolRequest),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RosettaMempoolResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves a list of transactions currently in the mempool for a given network.\n     * Get All Mempool Transactions\n     */\n    async rosettaMempool(requestParameters: RosettaMempoolOperationRequest, initOverrides?: RequestInit): Promise<RosettaMempoolResponse> {\n        const response = await this.rosettaMempoolRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves transaction details from the mempool for a given transaction id from a given network.\n     * Get a Mempool Transaction\n     */\n    async rosettaMempoolTransactionRaw(requestParameters: RosettaMempoolTransactionOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaMempoolTransactionResponse>> {\n        if (requestParameters.rosettaMempoolTransactionRequest === null || requestParameters.rosettaMempoolTransactionRequest === undefined) {\n            throw new runtime.RequiredError('rosettaMempoolTransactionRequest','Required parameter requestParameters.rosettaMempoolTransactionRequest was null or undefined when calling rosettaMempoolTransaction.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rosetta/v1/mempool/transaction`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RosettaMempoolTransactionRequestToJSON(requestParameters.rosettaMempoolTransactionRequest),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RosettaMempoolTransactionResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves transaction details from the mempool for a given transaction id from a given network.\n     * Get a Mempool Transaction\n     */\n    async rosettaMempoolTransaction(requestParameters: RosettaMempoolTransactionOperationRequest, initOverrides?: RequestInit): Promise<RosettaMempoolTransactionResponse> {\n        const response = await this.rosettaMempoolTransactionRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves a list of NetworkIdentifiers that the Rosetta server supports.\n     * Get List of Available Networks\n     */\n    async rosettaNetworkListRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaNetworkListResponse>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rosetta/v1/network/list`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RosettaNetworkListResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves a list of NetworkIdentifiers that the Rosetta server supports.\n     * Get List of Available Networks\n     */\n    async rosettaNetworkList(initOverrides?: RequestInit): Promise<RosettaNetworkListResponse> {\n        const response = await this.rosettaNetworkListRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves the version information and allowed network-specific types for a NetworkIdentifier. Any NetworkIdentifier returned by /network/list should be accessible here. Because options are retrievable in the context of a NetworkIdentifier, it is possible to define unique options for each network. \n     * Get Network Options\n     */\n    async rosettaNetworkOptionsRaw(requestParameters: RosettaNetworkOptionsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaNetworkOptionsResponse>> {\n        if (requestParameters.rosettaOptionsRequest === null || requestParameters.rosettaOptionsRequest === undefined) {\n            throw new runtime.RequiredError('rosettaOptionsRequest','Required parameter requestParameters.rosettaOptionsRequest was null or undefined when calling rosettaNetworkOptions.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rosetta/v1/network/options`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RosettaOptionsRequestToJSON(requestParameters.rosettaOptionsRequest),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RosettaNetworkOptionsResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves the version information and allowed network-specific types for a NetworkIdentifier. Any NetworkIdentifier returned by /network/list should be accessible here. Because options are retrievable in the context of a NetworkIdentifier, it is possible to define unique options for each network. \n     * Get Network Options\n     */\n    async rosettaNetworkOptions(requestParameters: RosettaNetworkOptionsRequest, initOverrides?: RequestInit): Promise<RosettaNetworkOptionsResponse> {\n        const response = await this.rosettaNetworkOptionsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves the current status of the network requested. Any NetworkIdentifier returned by /network/list should be accessible here. \n     * Get Network Status\n     */\n    async rosettaNetworkStatusRaw(requestParameters: RosettaNetworkStatusRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RosettaNetworkStatusResponse>> {\n        if (requestParameters.rosettaStatusRequest === null || requestParameters.rosettaStatusRequest === undefined) {\n            throw new runtime.RequiredError('rosettaStatusRequest','Required parameter requestParameters.rosettaStatusRequest was null or undefined when calling rosettaNetworkStatus.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rosetta/v1/network/status`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RosettaStatusRequestToJSON(requestParameters.rosettaStatusRequest),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RosettaNetworkStatusResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves the current status of the network requested. Any NetworkIdentifier returned by /network/list should be accessible here. \n     * Get Network Status\n     */\n    async rosettaNetworkStatus(requestParameters: RosettaNetworkStatusRequest, initOverrides?: RequestInit): Promise<RosettaNetworkStatusResponse> {\n        const response = await this.rosettaNetworkStatusRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\n\nexport interface SearchByIdRequest {\n    id: string;\n    includeMetadata?: boolean;\n}\n\n/**\n * SearchApi - interface\n * \n * @export\n * @interface SearchApiInterface\n */\nexport interface SearchApiInterface {\n    /**\n     * Search blocks, transactions, contracts, or accounts by hash/ID\n     * @summary Search\n     * @param {string} id The hex hash string for a block or transaction, account address, or contract address\n     * @param {boolean} [includeMetadata] This includes the detailed data for purticular hash in the response\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SearchApiInterface\n     */\n    searchByIdRaw(requestParameters: SearchByIdRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<object>>;\n\n    /**\n     * Search blocks, transactions, contracts, or accounts by hash/ID\n     * Search\n     */\n    searchById(requestParameters: SearchByIdRequest, initOverrides?: RequestInit): Promise<object>;\n\n}\n\n/**\n * \n */\nexport class SearchApi extends runtime.BaseAPI implements SearchApiInterface {\n\n    /**\n     * Search blocks, transactions, contracts, or accounts by hash/ID\n     * Search\n     */\n    async searchByIdRaw(requestParameters: SearchByIdRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<object>> {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling searchById.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.includeMetadata !== undefined) {\n            queryParameters['include_metadata'] = requestParameters.includeMetadata;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/search/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Search blocks, transactions, contracts, or accounts by hash/ID\n     * Search\n     */\n    async searchById(requestParameters: SearchByIdRequest, initOverrides?: RequestInit): Promise<object> {\n        const response = await this.searchByIdRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    ContractInterfaceResponse,\n    ContractInterfaceResponseFromJSON,\n    ContractInterfaceResponseToJSON,\n    ContractListResponse,\n    ContractListResponseFromJSON,\n    ContractListResponseToJSON,\n    ContractSourceResponse,\n    ContractSourceResponseFromJSON,\n    ContractSourceResponseToJSON,\n    MapEntryResponse,\n    MapEntryResponseFromJSON,\n    MapEntryResponseToJSON,\n    ReadOnlyFunctionArgs,\n    ReadOnlyFunctionArgsFromJSON,\n    ReadOnlyFunctionArgsToJSON,\n    ReadOnlyFunctionSuccessResponse,\n    ReadOnlyFunctionSuccessResponseFromJSON,\n    ReadOnlyFunctionSuccessResponseToJSON,\n    SmartContract,\n    SmartContractFromJSON,\n    SmartContractToJSON,\n} from '../models';\n\nexport interface CallReadOnlyFunctionRequest {\n    contractAddress: string;\n    contractName: string;\n    functionName: string;\n    readOnlyFunctionArgs: ReadOnlyFunctionArgs;\n    tip?: string;\n}\n\nexport interface GetContractByIdRequest {\n    contractId: string;\n    unanchored?: boolean;\n}\n\nexport interface GetContractDataMapEntryRequest {\n    contractAddress: string;\n    contractName: string;\n    mapName: string;\n    key: string;\n    proof?: number;\n    tip?: string;\n}\n\nexport interface GetContractEventsByIdRequest {\n    contractId: string;\n    limit?: number;\n    offset?: number;\n    unanchored?: boolean;\n}\n\nexport interface GetContractInterfaceRequest {\n    contractAddress: string;\n    contractName: string;\n    tip?: string;\n}\n\nexport interface GetContractSourceRequest {\n    contractAddress: string;\n    contractName: string;\n    proof?: number;\n    tip?: string;\n}\n\nexport interface GetContractsByTraitRequest {\n    traitAbi: string;\n    limit?: number;\n    offset?: number;\n}\n\n/**\n * SmartContractsApi - interface\n * \n * @export\n * @interface SmartContractsApiInterface\n */\nexport interface SmartContractsApiInterface {\n    /**\n     * Call a read-only public function on a given smart contract.  The smart contract and function are specified using the URL path. The arguments and the simulated tx-sender are supplied via the POST body in the following JSON format: \n     * @summary Call read-only function\n     * @param {string} contractAddress Stacks address\n     * @param {string} contractName Contract name\n     * @param {string} functionName Function name\n     * @param {ReadOnlyFunctionArgs} readOnlyFunctionArgs \n     * @param {string} [tip] The Stacks chain tip to query from\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SmartContractsApiInterface\n     */\n    callReadOnlyFunctionRaw(requestParameters: CallReadOnlyFunctionRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ReadOnlyFunctionSuccessResponse>>;\n\n    /**\n     * Call a read-only public function on a given smart contract.  The smart contract and function are specified using the URL path. The arguments and the simulated tx-sender are supplied via the POST body in the following JSON format: \n     * Call read-only function\n     */\n    callReadOnlyFunction(requestParameters: CallReadOnlyFunctionRequest, initOverrides?: RequestInit): Promise<ReadOnlyFunctionSuccessResponse>;\n\n    /**\n     * Retrieves details of a contract with a given `contract_id`\n     * @summary Get contract info\n     * @param {string} contractId Contract identifier formatted as &#x60;&lt;contract_address&gt;.&lt;contract_name&gt;&#x60;\n     * @param {boolean} [unanchored] Include transaction data from unanchored (i.e. unconfirmed) microblocks\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SmartContractsApiInterface\n     */\n    getContractByIdRaw(requestParameters: GetContractByIdRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<SmartContract>>;\n\n    /**\n     * Retrieves details of a contract with a given `contract_id`\n     * Get contract info\n     */\n    getContractById(requestParameters: GetContractByIdRequest, initOverrides?: RequestInit): Promise<SmartContract>;\n\n    /**\n     * Attempt to fetch data from a contract data map. The contract is identified with Stacks Address `contract_address` and Contract Name `contract_address` in the URL path. The map is identified with [Map Name].  The key to lookup in the map is supplied via the POST body. This should be supplied as the hex string serialization of the key (which should be a Clarity value). Note, this is a JSON string atom.  In the response, `data` is the hex serialization of the map response. Note that map responses are Clarity option types, for non-existent values, this is a serialized none, and for all other responses, it is a serialized (some ...) object. \n     * @summary Get specific data-map inside a contract\n     * @param {string} contractAddress Stacks address\n     * @param {string} contractName Contract name\n     * @param {string} mapName Map name\n     * @param {string} key Hex string serialization of the lookup key (which should be a Clarity value)\n     * @param {number} [proof] Returns object without the proof field when set to 0\n     * @param {string} [tip] The Stacks chain tip to query from\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SmartContractsApiInterface\n     */\n    getContractDataMapEntryRaw(requestParameters: GetContractDataMapEntryRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<MapEntryResponse>>;\n\n    /**\n     * Attempt to fetch data from a contract data map. The contract is identified with Stacks Address `contract_address` and Contract Name `contract_address` in the URL path. The map is identified with [Map Name].  The key to lookup in the map is supplied via the POST body. This should be supplied as the hex string serialization of the key (which should be a Clarity value). Note, this is a JSON string atom.  In the response, `data` is the hex serialization of the map response. Note that map responses are Clarity option types, for non-existent values, this is a serialized none, and for all other responses, it is a serialized (some ...) object. \n     * Get specific data-map inside a contract\n     */\n    getContractDataMapEntry(requestParameters: GetContractDataMapEntryRequest, initOverrides?: RequestInit): Promise<MapEntryResponse>;\n\n    /**\n     * Retrieves a list of events that have been triggered by a given `contract_id`\n     * @summary Get contract events\n     * @param {string} contractId Contract identifier formatted as &#x60;&lt;contract_address&gt;.&lt;contract_name&gt;&#x60;\n     * @param {number} [limit] max number of contract events to fetch\n     * @param {number} [offset] index of first contract event to fetch\n     * @param {boolean} [unanchored] Include transaction data from unanchored (i.e. unconfirmed) microblocks\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SmartContractsApiInterface\n     */\n    getContractEventsByIdRaw(requestParameters: GetContractEventsByIdRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<object>>;\n\n    /**\n     * Retrieves a list of events that have been triggered by a given `contract_id`\n     * Get contract events\n     */\n    getContractEventsById(requestParameters: GetContractEventsByIdRequest, initOverrides?: RequestInit): Promise<object>;\n\n    /**\n     * Retrieves a contract interface with a given `contract_address` and `contract name`\n     * @summary Get contract interface\n     * @param {string} contractAddress Stacks address\n     * @param {string} contractName Contract name\n     * @param {string} [tip] The Stacks chain tip to query from\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SmartContractsApiInterface\n     */\n    getContractInterfaceRaw(requestParameters: GetContractInterfaceRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ContractInterfaceResponse>>;\n\n    /**\n     * Retrieves a contract interface with a given `contract_address` and `contract name`\n     * Get contract interface\n     */\n    getContractInterface(requestParameters: GetContractInterfaceRequest, initOverrides?: RequestInit): Promise<ContractInterfaceResponse>;\n\n    /**\n     * Retrieves the Clarity source code of a given contract, along with the block height it was published in, and the MARF proof for the data\n     * @summary Get contract source\n     * @param {string} contractAddress Stacks address\n     * @param {string} contractName Contract name\n     * @param {number} [proof] Returns object without the proof field if set to 0\n     * @param {string} [tip] The Stacks chain tip to query from\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SmartContractsApiInterface\n     */\n    getContractSourceRaw(requestParameters: GetContractSourceRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ContractSourceResponse>>;\n\n    /**\n     * Retrieves the Clarity source code of a given contract, along with the block height it was published in, and the MARF proof for the data\n     * Get contract source\n     */\n    getContractSource(requestParameters: GetContractSourceRequest, initOverrides?: RequestInit): Promise<ContractSourceResponse>;\n\n    /**\n     * Retrieves a list of contracts based on the following traits listed in JSON format -  functions, variables, maps, fungible tokens and non-fungible tokens\n     * @summary Get contracts by trait\n     * @param {string} traitAbi JSON abi of the trait.\n     * @param {number} [limit] max number of contracts fetch\n     * @param {number} [offset] index of first contract event to fetch\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SmartContractsApiInterface\n     */\n    getContractsByTraitRaw(requestParameters: GetContractsByTraitRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ContractListResponse>>;\n\n    /**\n     * Retrieves a list of contracts based on the following traits listed in JSON format -  functions, variables, maps, fungible tokens and non-fungible tokens\n     * Get contracts by trait\n     */\n    getContractsByTrait(requestParameters: GetContractsByTraitRequest, initOverrides?: RequestInit): Promise<ContractListResponse>;\n\n}\n\n/**\n * \n */\nexport class SmartContractsApi extends runtime.BaseAPI implements SmartContractsApiInterface {\n\n    /**\n     * Call a read-only public function on a given smart contract.  The smart contract and function are specified using the URL path. The arguments and the simulated tx-sender are supplied via the POST body in the following JSON format: \n     * Call read-only function\n     */\n    async callReadOnlyFunctionRaw(requestParameters: CallReadOnlyFunctionRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ReadOnlyFunctionSuccessResponse>> {\n        if (requestParameters.contractAddress === null || requestParameters.contractAddress === undefined) {\n            throw new runtime.RequiredError('contractAddress','Required parameter requestParameters.contractAddress was null or undefined when calling callReadOnlyFunction.');\n        }\n\n        if (requestParameters.contractName === null || requestParameters.contractName === undefined) {\n            throw new runtime.RequiredError('contractName','Required parameter requestParameters.contractName was null or undefined when calling callReadOnlyFunction.');\n        }\n\n        if (requestParameters.functionName === null || requestParameters.functionName === undefined) {\n            throw new runtime.RequiredError('functionName','Required parameter requestParameters.functionName was null or undefined when calling callReadOnlyFunction.');\n        }\n\n        if (requestParameters.readOnlyFunctionArgs === null || requestParameters.readOnlyFunctionArgs === undefined) {\n            throw new runtime.RequiredError('readOnlyFunctionArgs','Required parameter requestParameters.readOnlyFunctionArgs was null or undefined when calling callReadOnlyFunction.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.tip !== undefined) {\n            queryParameters['tip'] = requestParameters.tip;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/v2/contracts/call-read/{contract_address}/{contract_name}/{function_name}`.replace(`{${\"contract_address\"}}`, encodeURIComponent(String(requestParameters.contractAddress))).replace(`{${\"contract_name\"}}`, encodeURIComponent(String(requestParameters.contractName))).replace(`{${\"function_name\"}}`, encodeURIComponent(String(requestParameters.functionName))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: ReadOnlyFunctionArgsToJSON(requestParameters.readOnlyFunctionArgs),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ReadOnlyFunctionSuccessResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Call a read-only public function on a given smart contract.  The smart contract and function are specified using the URL path. The arguments and the simulated tx-sender are supplied via the POST body in the following JSON format: \n     * Call read-only function\n     */\n    async callReadOnlyFunction(requestParameters: CallReadOnlyFunctionRequest, initOverrides?: RequestInit): Promise<ReadOnlyFunctionSuccessResponse> {\n        const response = await this.callReadOnlyFunctionRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves details of a contract with a given `contract_id`\n     * Get contract info\n     */\n    async getContractByIdRaw(requestParameters: GetContractByIdRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<SmartContract>> {\n        if (requestParameters.contractId === null || requestParameters.contractId === undefined) {\n            throw new runtime.RequiredError('contractId','Required parameter requestParameters.contractId was null or undefined when calling getContractById.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.unanchored !== undefined) {\n            queryParameters['unanchored'] = requestParameters.unanchored;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/contract/{contract_id}`.replace(`{${\"contract_id\"}}`, encodeURIComponent(String(requestParameters.contractId))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SmartContractFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves details of a contract with a given `contract_id`\n     * Get contract info\n     */\n    async getContractById(requestParameters: GetContractByIdRequest, initOverrides?: RequestInit): Promise<SmartContract> {\n        const response = await this.getContractByIdRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Attempt to fetch data from a contract data map. The contract is identified with Stacks Address `contract_address` and Contract Name `contract_address` in the URL path. The map is identified with [Map Name].  The key to lookup in the map is supplied via the POST body. This should be supplied as the hex string serialization of the key (which should be a Clarity value). Note, this is a JSON string atom.  In the response, `data` is the hex serialization of the map response. Note that map responses are Clarity option types, for non-existent values, this is a serialized none, and for all other responses, it is a serialized (some ...) object. \n     * Get specific data-map inside a contract\n     */\n    async getContractDataMapEntryRaw(requestParameters: GetContractDataMapEntryRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<MapEntryResponse>> {\n        if (requestParameters.contractAddress === null || requestParameters.contractAddress === undefined) {\n            throw new runtime.RequiredError('contractAddress','Required parameter requestParameters.contractAddress was null or undefined when calling getContractDataMapEntry.');\n        }\n\n        if (requestParameters.contractName === null || requestParameters.contractName === undefined) {\n            throw new runtime.RequiredError('contractName','Required parameter requestParameters.contractName was null or undefined when calling getContractDataMapEntry.');\n        }\n\n        if (requestParameters.mapName === null || requestParameters.mapName === undefined) {\n            throw new runtime.RequiredError('mapName','Required parameter requestParameters.mapName was null or undefined when calling getContractDataMapEntry.');\n        }\n\n        if (requestParameters.key === null || requestParameters.key === undefined) {\n            throw new runtime.RequiredError('key','Required parameter requestParameters.key was null or undefined when calling getContractDataMapEntry.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.proof !== undefined) {\n            queryParameters['proof'] = requestParameters.proof;\n        }\n\n        if (requestParameters.tip !== undefined) {\n            queryParameters['tip'] = requestParameters.tip;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/v2/map_entry/{contract_address}/{contract_name}/{map_name}`.replace(`{${\"contract_address\"}}`, encodeURIComponent(String(requestParameters.contractAddress))).replace(`{${\"contract_name\"}}`, encodeURIComponent(String(requestParameters.contractName))).replace(`{${\"map_name\"}}`, encodeURIComponent(String(requestParameters.mapName))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: requestParameters.key as any,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => MapEntryResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Attempt to fetch data from a contract data map. The contract is identified with Stacks Address `contract_address` and Contract Name `contract_address` in the URL path. The map is identified with [Map Name].  The key to lookup in the map is supplied via the POST body. This should be supplied as the hex string serialization of the key (which should be a Clarity value). Note, this is a JSON string atom.  In the response, `data` is the hex serialization of the map response. Note that map responses are Clarity option types, for non-existent values, this is a serialized none, and for all other responses, it is a serialized (some ...) object. \n     * Get specific data-map inside a contract\n     */\n    async getContractDataMapEntry(requestParameters: GetContractDataMapEntryRequest, initOverrides?: RequestInit): Promise<MapEntryResponse> {\n        const response = await this.getContractDataMapEntryRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves a list of events that have been triggered by a given `contract_id`\n     * Get contract events\n     */\n    async getContractEventsByIdRaw(requestParameters: GetContractEventsByIdRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<object>> {\n        if (requestParameters.contractId === null || requestParameters.contractId === undefined) {\n            throw new runtime.RequiredError('contractId','Required parameter requestParameters.contractId was null or undefined when calling getContractEventsById.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        if (requestParameters.unanchored !== undefined) {\n            queryParameters['unanchored'] = requestParameters.unanchored;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/contract/{contract_id}/events`.replace(`{${\"contract_id\"}}`, encodeURIComponent(String(requestParameters.contractId))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Retrieves a list of events that have been triggered by a given `contract_id`\n     * Get contract events\n     */\n    async getContractEventsById(requestParameters: GetContractEventsByIdRequest, initOverrides?: RequestInit): Promise<object> {\n        const response = await this.getContractEventsByIdRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves a contract interface with a given `contract_address` and `contract name`\n     * Get contract interface\n     */\n    async getContractInterfaceRaw(requestParameters: GetContractInterfaceRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ContractInterfaceResponse>> {\n        if (requestParameters.contractAddress === null || requestParameters.contractAddress === undefined) {\n            throw new runtime.RequiredError('contractAddress','Required parameter requestParameters.contractAddress was null or undefined when calling getContractInterface.');\n        }\n\n        if (requestParameters.contractName === null || requestParameters.contractName === undefined) {\n            throw new runtime.RequiredError('contractName','Required parameter requestParameters.contractName was null or undefined when calling getContractInterface.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.tip !== undefined) {\n            queryParameters['tip'] = requestParameters.tip;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2/contracts/interface/{contract_address}/{contract_name}`.replace(`{${\"contract_address\"}}`, encodeURIComponent(String(requestParameters.contractAddress))).replace(`{${\"contract_name\"}}`, encodeURIComponent(String(requestParameters.contractName))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ContractInterfaceResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves a contract interface with a given `contract_address` and `contract name`\n     * Get contract interface\n     */\n    async getContractInterface(requestParameters: GetContractInterfaceRequest, initOverrides?: RequestInit): Promise<ContractInterfaceResponse> {\n        const response = await this.getContractInterfaceRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves the Clarity source code of a given contract, along with the block height it was published in, and the MARF proof for the data\n     * Get contract source\n     */\n    async getContractSourceRaw(requestParameters: GetContractSourceRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ContractSourceResponse>> {\n        if (requestParameters.contractAddress === null || requestParameters.contractAddress === undefined) {\n            throw new runtime.RequiredError('contractAddress','Required parameter requestParameters.contractAddress was null or undefined when calling getContractSource.');\n        }\n\n        if (requestParameters.contractName === null || requestParameters.contractName === undefined) {\n            throw new runtime.RequiredError('contractName','Required parameter requestParameters.contractName was null or undefined when calling getContractSource.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.proof !== undefined) {\n            queryParameters['proof'] = requestParameters.proof;\n        }\n\n        if (requestParameters.tip !== undefined) {\n            queryParameters['tip'] = requestParameters.tip;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2/contracts/source/{contract_address}/{contract_name}`.replace(`{${\"contract_address\"}}`, encodeURIComponent(String(requestParameters.contractAddress))).replace(`{${\"contract_name\"}}`, encodeURIComponent(String(requestParameters.contractName))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ContractSourceResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves the Clarity source code of a given contract, along with the block height it was published in, and the MARF proof for the data\n     * Get contract source\n     */\n    async getContractSource(requestParameters: GetContractSourceRequest, initOverrides?: RequestInit): Promise<ContractSourceResponse> {\n        const response = await this.getContractSourceRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves a list of contracts based on the following traits listed in JSON format -  functions, variables, maps, fungible tokens and non-fungible tokens\n     * Get contracts by trait\n     */\n    async getContractsByTraitRaw(requestParameters: GetContractsByTraitRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ContractListResponse>> {\n        if (requestParameters.traitAbi === null || requestParameters.traitAbi === undefined) {\n            throw new runtime.RequiredError('traitAbi','Required parameter requestParameters.traitAbi was null or undefined when calling getContractsByTrait.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.traitAbi !== undefined) {\n            queryParameters['trait_abi'] = requestParameters.traitAbi;\n        }\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/contract/by_trait`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ContractListResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves a list of contracts based on the following traits listed in JSON format -  functions, variables, maps, fungible tokens and non-fungible tokens\n     * Get contracts by trait\n     */\n    async getContractsByTrait(requestParameters: GetContractsByTraitRequest, initOverrides?: RequestInit): Promise<ContractListResponse> {\n        const response = await this.getContractsByTraitRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    BurnchainRewardListResponse,\n    BurnchainRewardListResponseFromJSON,\n    BurnchainRewardListResponseToJSON,\n    BurnchainRewardSlotHolderListResponse,\n    BurnchainRewardSlotHolderListResponseFromJSON,\n    BurnchainRewardSlotHolderListResponseToJSON,\n    BurnchainRewardsTotal,\n    BurnchainRewardsTotalFromJSON,\n    BurnchainRewardsTotalToJSON,\n} from '../models';\n\nexport interface GetBurnchainRewardListRequest {\n    limit?: number;\n    offset?: number;\n}\n\nexport interface GetBurnchainRewardListByAddressRequest {\n    address: string;\n    limit?: number;\n    offset?: number;\n}\n\nexport interface GetBurnchainRewardSlotHoldersRequest {\n    limit?: number;\n    offset?: number;\n}\n\nexport interface GetBurnchainRewardSlotHoldersByAddressRequest {\n    address: string;\n    limit?: number;\n    offset?: number;\n}\n\nexport interface GetBurnchainRewardsTotalByAddressRequest {\n    address: string;\n}\n\n/**\n * StackingRewardsApi - interface\n * \n * @export\n * @interface StackingRewardsApiInterface\n */\nexport interface StackingRewardsApiInterface {\n    /**\n     * Retrieves a list of recent burnchain (e.g. Bitcoin) reward recipients with the associated amounts and block info\n     * @summary Get recent burnchain reward recipients\n     * @param {number} [limit] max number of rewards to fetch\n     * @param {number} [offset] index of first rewards to fetch\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof StackingRewardsApiInterface\n     */\n    getBurnchainRewardListRaw(requestParameters: GetBurnchainRewardListRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BurnchainRewardListResponse>>;\n\n    /**\n     * Retrieves a list of recent burnchain (e.g. Bitcoin) reward recipients with the associated amounts and block info\n     * Get recent burnchain reward recipients\n     */\n    getBurnchainRewardList(requestParameters: GetBurnchainRewardListRequest, initOverrides?: RequestInit): Promise<BurnchainRewardListResponse>;\n\n    /**\n     * Retrieves a list of recent burnchain (e.g. Bitcoin) rewards for the given recipient with the associated amounts and block info\n     * @summary Get recent burnchain reward for the given recipient\n     * @param {string} address Reward recipient address. Should either be in the native burnchain\\&#39;s format (e.g. B58 for Bitcoin), or if a STX principal address is provided it will be encoded as into the equivalent burnchain format\n     * @param {number} [limit] max number of rewards to fetch\n     * @param {number} [offset] index of first rewards to fetch\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof StackingRewardsApiInterface\n     */\n    getBurnchainRewardListByAddressRaw(requestParameters: GetBurnchainRewardListByAddressRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BurnchainRewardListResponse>>;\n\n    /**\n     * Retrieves a list of recent burnchain (e.g. Bitcoin) rewards for the given recipient with the associated amounts and block info\n     * Get recent burnchain reward for the given recipient\n     */\n    getBurnchainRewardListByAddress(requestParameters: GetBurnchainRewardListByAddressRequest, initOverrides?: RequestInit): Promise<BurnchainRewardListResponse>;\n\n    /**\n     * Retrieves a list of the Bitcoin addresses that would validly receive Proof-of-Transfer commitments.\n     * @summary Get recent reward slot holders\n     * @param {number} [limit] max number of items to fetch\n     * @param {number} [offset] index of the first items to fetch\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof StackingRewardsApiInterface\n     */\n    getBurnchainRewardSlotHoldersRaw(requestParameters: GetBurnchainRewardSlotHoldersRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BurnchainRewardSlotHolderListResponse>>;\n\n    /**\n     * Retrieves a list of the Bitcoin addresses that would validly receive Proof-of-Transfer commitments.\n     * Get recent reward slot holders\n     */\n    getBurnchainRewardSlotHolders(requestParameters: GetBurnchainRewardSlotHoldersRequest, initOverrides?: RequestInit): Promise<BurnchainRewardSlotHolderListResponse>;\n\n    /**\n     * Retrieves a list of the Bitcoin addresses that would validly receive Proof-of-Transfer commitments for a given reward slot holder recipient address.\n     * @summary Get recent reward slot holder entries for the given address\n     * @param {string} address Reward slot holder recipient address. Should either be in the native burnchain\\&#39;s format (e.g. B58 for Bitcoin), or if a STX principal address is provided it will be encoded as into the equivalent burnchain format\n     * @param {number} [limit] max number of items to fetch\n     * @param {number} [offset] index of the first items to fetch\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof StackingRewardsApiInterface\n     */\n    getBurnchainRewardSlotHoldersByAddressRaw(requestParameters: GetBurnchainRewardSlotHoldersByAddressRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BurnchainRewardSlotHolderListResponse>>;\n\n    /**\n     * Retrieves a list of the Bitcoin addresses that would validly receive Proof-of-Transfer commitments for a given reward slot holder recipient address.\n     * Get recent reward slot holder entries for the given address\n     */\n    getBurnchainRewardSlotHoldersByAddress(requestParameters: GetBurnchainRewardSlotHoldersByAddressRequest, initOverrides?: RequestInit): Promise<BurnchainRewardSlotHolderListResponse>;\n\n    /**\n     * Retrieves the total burnchain (e.g. Bitcoin) rewards for a given recipient `address`\n     * @summary Get total burnchain rewards for the given recipient\n     * @param {string} address Reward recipient address. Should either be in the native burnchain\\&#39;s format (e.g. B58 for Bitcoin), or if a STX principal address is provided it will be encoded as into the equivalent burnchain format\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof StackingRewardsApiInterface\n     */\n    getBurnchainRewardsTotalByAddressRaw(requestParameters: GetBurnchainRewardsTotalByAddressRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BurnchainRewardsTotal>>;\n\n    /**\n     * Retrieves the total burnchain (e.g. Bitcoin) rewards for a given recipient `address`\n     * Get total burnchain rewards for the given recipient\n     */\n    getBurnchainRewardsTotalByAddress(requestParameters: GetBurnchainRewardsTotalByAddressRequest, initOverrides?: RequestInit): Promise<BurnchainRewardsTotal>;\n\n}\n\n/**\n * \n */\nexport class StackingRewardsApi extends runtime.BaseAPI implements StackingRewardsApiInterface {\n\n    /**\n     * Retrieves a list of recent burnchain (e.g. Bitcoin) reward recipients with the associated amounts and block info\n     * Get recent burnchain reward recipients\n     */\n    async getBurnchainRewardListRaw(requestParameters: GetBurnchainRewardListRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BurnchainRewardListResponse>> {\n        const queryParameters: any = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/burnchain/rewards`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => BurnchainRewardListResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves a list of recent burnchain (e.g. Bitcoin) reward recipients with the associated amounts and block info\n     * Get recent burnchain reward recipients\n     */\n    async getBurnchainRewardList(requestParameters: GetBurnchainRewardListRequest, initOverrides?: RequestInit): Promise<BurnchainRewardListResponse> {\n        const response = await this.getBurnchainRewardListRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves a list of recent burnchain (e.g. Bitcoin) rewards for the given recipient with the associated amounts and block info\n     * Get recent burnchain reward for the given recipient\n     */\n    async getBurnchainRewardListByAddressRaw(requestParameters: GetBurnchainRewardListByAddressRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BurnchainRewardListResponse>> {\n        if (requestParameters.address === null || requestParameters.address === undefined) {\n            throw new runtime.RequiredError('address','Required parameter requestParameters.address was null or undefined when calling getBurnchainRewardListByAddress.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/burnchain/rewards/{address}`.replace(`{${\"address\"}}`, encodeURIComponent(String(requestParameters.address))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => BurnchainRewardListResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves a list of recent burnchain (e.g. Bitcoin) rewards for the given recipient with the associated amounts and block info\n     * Get recent burnchain reward for the given recipient\n     */\n    async getBurnchainRewardListByAddress(requestParameters: GetBurnchainRewardListByAddressRequest, initOverrides?: RequestInit): Promise<BurnchainRewardListResponse> {\n        const response = await this.getBurnchainRewardListByAddressRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves a list of the Bitcoin addresses that would validly receive Proof-of-Transfer commitments.\n     * Get recent reward slot holders\n     */\n    async getBurnchainRewardSlotHoldersRaw(requestParameters: GetBurnchainRewardSlotHoldersRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BurnchainRewardSlotHolderListResponse>> {\n        const queryParameters: any = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/burnchain/reward_slot_holders`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => BurnchainRewardSlotHolderListResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves a list of the Bitcoin addresses that would validly receive Proof-of-Transfer commitments.\n     * Get recent reward slot holders\n     */\n    async getBurnchainRewardSlotHolders(requestParameters: GetBurnchainRewardSlotHoldersRequest, initOverrides?: RequestInit): Promise<BurnchainRewardSlotHolderListResponse> {\n        const response = await this.getBurnchainRewardSlotHoldersRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves a list of the Bitcoin addresses that would validly receive Proof-of-Transfer commitments for a given reward slot holder recipient address.\n     * Get recent reward slot holder entries for the given address\n     */\n    async getBurnchainRewardSlotHoldersByAddressRaw(requestParameters: GetBurnchainRewardSlotHoldersByAddressRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BurnchainRewardSlotHolderListResponse>> {\n        if (requestParameters.address === null || requestParameters.address === undefined) {\n            throw new runtime.RequiredError('address','Required parameter requestParameters.address was null or undefined when calling getBurnchainRewardSlotHoldersByAddress.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/burnchain/reward_slot_holders/{address}`.replace(`{${\"address\"}}`, encodeURIComponent(String(requestParameters.address))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => BurnchainRewardSlotHolderListResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves a list of the Bitcoin addresses that would validly receive Proof-of-Transfer commitments for a given reward slot holder recipient address.\n     * Get recent reward slot holder entries for the given address\n     */\n    async getBurnchainRewardSlotHoldersByAddress(requestParameters: GetBurnchainRewardSlotHoldersByAddressRequest, initOverrides?: RequestInit): Promise<BurnchainRewardSlotHolderListResponse> {\n        const response = await this.getBurnchainRewardSlotHoldersByAddressRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves the total burnchain (e.g. Bitcoin) rewards for a given recipient `address`\n     * Get total burnchain rewards for the given recipient\n     */\n    async getBurnchainRewardsTotalByAddressRaw(requestParameters: GetBurnchainRewardsTotalByAddressRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BurnchainRewardsTotal>> {\n        if (requestParameters.address === null || requestParameters.address === undefined) {\n            throw new runtime.RequiredError('address','Required parameter requestParameters.address was null or undefined when calling getBurnchainRewardsTotalByAddress.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/burnchain/rewards/{address}/total`.replace(`{${\"address\"}}`, encodeURIComponent(String(requestParameters.address))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => BurnchainRewardsTotalFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves the total burnchain (e.g. Bitcoin) rewards for a given recipient `address`\n     * Get total burnchain rewards for the given recipient\n     */\n    async getBurnchainRewardsTotalByAddress(requestParameters: GetBurnchainRewardsTotalByAddressRequest, initOverrides?: RequestInit): Promise<BurnchainRewardsTotal> {\n        const response = await this.getBurnchainRewardsTotalByAddressRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks Blockchain API\n * Welcome to the API reference overview for the <a href=\\\"https://docs.hiro.so/get-started/stacks-blockchain-api\\\">Stacks Blockchain API</a>.  <a href=\\\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\\\" download=\\\"stacks-api-collection.json\\\">Download Postman collection</a> \n *\n * The version of the OpenAPI document: STACKS_API_VERSION\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    GetRawTransactionResult,\n    GetRawTransactionResultFromJSON,\n    GetRawTransactionResultToJSON,\n    MempoolTransactionListResponse,\n    MempoolTransactionListResponseFromJSON,\n    MempoolTransactionListResponseToJSON,\n    MempoolTransactionStatsResponse,\n    MempoolTransactionStatsResponseFromJSON,\n    MempoolTransactionStatsResponseToJSON,\n    PostCoreNodeTransactionsError,\n    PostCoreNodeTransactionsErrorFromJSON,\n    PostCoreNodeTransactionsErrorToJSON,\n    TransactionEventsResponse,\n    TransactionEventsResponseFromJSON,\n    TransactionEventsResponseToJSON,\n    TransactionResults,\n    TransactionResultsFromJSON,\n    TransactionResultsToJSON,\n} from '../models';\n\nexport interface GetAddressMempoolTransactionsRequest {\n    address: string;\n    limit?: number;\n    offset?: number;\n    unanchored?: boolean;\n}\n\nexport interface GetDroppedMempoolTransactionListRequest {\n    limit?: number;\n    offset?: number;\n}\n\nexport interface GetFilteredEventsRequest {\n    txId?: string;\n    address?: string;\n    limit?: number;\n    offset?: number;\n    type?: Array<GetFilteredEventsTypeEnum>;\n}\n\nexport interface GetMempoolTransactionListRequest {\n    senderAddress?: string;\n    recipientAddress?: string;\n    address?: string;\n    limit?: number;\n    offset?: number;\n    unanchored?: boolean;\n}\n\nexport interface GetRawTransactionByIdRequest {\n    txId: string;\n}\n\nexport interface GetTransactionByIdRequest {\n    txId: string;\n    eventOffset?: number;\n    eventLimit?: number;\n    unanchored?: boolean;\n}\n\nexport interface GetTransactionListRequest {\n    limit?: number;\n    offset?: number;\n    type?: Array<GetTransactionListTypeEnum>;\n    unanchored?: boolean;\n}\n\nexport interface GetTransactionsByBlockHashRequest {\n    blockHash: string;\n    limit?: number;\n    offset?: number;\n}\n\nexport interface GetTransactionsByBlockHeightRequest {\n    height: number;\n    limit?: number;\n    offset?: number;\n    unanchored?: boolean;\n}\n\nexport interface GetTxListDetailsRequest {\n    txId: Array<string>;\n    eventOffset?: number;\n    eventLimit?: number;\n    unanchored?: boolean;\n}\n\nexport interface PostCoreNodeTransactionsRequest {\n    body?: Blob;\n}\n\n/**\n * TransactionsApi - interface\n * \n * @export\n * @interface TransactionsApiInterface\n */\nexport interface TransactionsApiInterface {\n    /**\n     * Retrieves all transactions for a given address that are currently in mempool\n     * @summary Transactions for address\n     * @param {string} address Transactions for the address\n     * @param {number} [limit] max number of transactions to fetch\n     * @param {number} [offset] index of first transaction to fetch\n     * @param {boolean} [unanchored] Include transaction data from unanchored (i.e. unconfirmed) microblocks\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TransactionsApiInterface\n     */\n    getAddressMempoolTransactionsRaw(requestParameters: GetAddressMempoolTransactionsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<MempoolTransactionListResponse>>;\n\n    /**\n     * Retrieves all transactions for a given address that are currently in mempool\n     * Transactions for address\n     */\n    getAddressMempoolTransactions(requestParameters: GetAddressMempoolTransactionsRequest, initOverrides?: RequestInit): Promise<MempoolTransactionListResponse>;\n\n    /**\n     * Retrieves all recently-broadcast transactions that have been dropped from the mempool.  Transactions are dropped from the mempool if:  * they were stale and awaiting garbage collection or,  * were expensive,  or  * were replaced with a new fee \n     * @summary Get dropped mempool transactions\n     * @param {number} [limit] max number of mempool transactions to fetch\n     * @param {number} [offset] index of first mempool transaction to fetch\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TransactionsApiInterface\n     */\n    getDroppedMempoolTransactionListRaw(requestParameters: GetDroppedMempoolTransactionListRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<MempoolTransactionListResponse>>;\n\n    /**\n     * Retrieves all recently-broadcast transactions that have been dropped from the mempool.  Transactions are dropped from the mempool if:  * they were stale and awaiting garbage collection or,  * were expensive,  or  * were replaced with a new fee \n     * Get dropped mempool transactions\n     */\n    getDroppedMempoolTransactionList(requestParameters: GetDroppedMempoolTransactionListRequest, initOverrides?: RequestInit): Promise<MempoolTransactionListResponse>;\n\n    /**\n     * Retrieves the list of events filtered by principal (STX address or Smart Contract ID), transaction id or event types. The list of event types is (\\'smart_contract_log\\', \\'stx_lock\\', \\'stx_asset\\', \\'fungible_token_asset\\', \\'non_fungible_token_asset\\').\n     * @summary Transaction Events\n     * @param {string} [txId] Hash of transaction\n     * @param {string} [address] Stacks address or a Contract identifier\n     * @param {number} [limit] number of items to return\n     * @param {number} [offset] number of items to skip\n     * @param {Array<'smart_contract_log' | 'stx_lock' | 'stx_asset' | 'fungible_token_asset' | 'non_fungible_token_asset'>} [type] Filter the events on event type\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TransactionsApiInterface\n     */\n    getFilteredEventsRaw(requestParameters: GetFilteredEventsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<TransactionEventsResponse>>;\n\n    /**\n     * Retrieves the list of events filtered by principal (STX address or Smart Contract ID), transaction id or event types. The list of event types is (\\'smart_contract_log\\', \\'stx_lock\\', \\'stx_asset\\', \\'fungible_token_asset\\', \\'non_fungible_token_asset\\').\n     * Transaction Events\n     */\n    getFilteredEvents(requestParameters: GetFilteredEventsRequest, initOverrides?: RequestInit): Promise<TransactionEventsResponse>;\n\n    /**\n     * Retrieves all transactions that have been recently broadcast to the mempool. These are pending transactions awaiting confirmation.  If you need to monitor new transactions, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates. \n     * @summary Get mempool transactions\n     * @param {string} [senderAddress] Filter to only return transactions with this sender address.\n     * @param {string} [recipientAddress] Filter to only return transactions with this recipient address (only applicable for STX transfer tx types).\n     * @param {string} [address] Filter to only return transactions with this address as the sender or recipient (recipient only applicable for STX transfer tx types).\n     * @param {number} [limit] max number of mempool transactions to fetch\n     * @param {number} [offset] index of first mempool transaction to fetch\n     * @param {boolean} [unanchored] Include transaction data from unanchored (i.e. unconfirmed) microblocks\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TransactionsApiInterface\n     */\n    getMempoolTransactionListRaw(requestParameters: GetMempoolTransactionListRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<MempoolTransactionListResponse>>;\n\n    /**\n     * Retrieves all transactions that have been recently broadcast to the mempool. These are pending transactions awaiting confirmation.  If you need to monitor new transactions, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates. \n     * Get mempool transactions\n     */\n    getMempoolTransactionList(requestParameters: GetMempoolTransactionListRequest, initOverrides?: RequestInit): Promise<MempoolTransactionListResponse>;\n\n    /**\n     * Queries for transactions counts, age (by block height), fees (simple average), and size. All results broken down by transaction type and percentiles (p25, p50, p75, p95). \n     * @summary Get statistics for mempool transactions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TransactionsApiInterface\n     */\n    getMempoolTransactionStatsRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<MempoolTransactionStatsResponse>>;\n\n    /**\n     * Queries for transactions counts, age (by block height), fees (simple average), and size. All results broken down by transaction type and percentiles (p25, p50, p75, p95). \n     * Get statistics for mempool transactions\n     */\n    getMempoolTransactionStats(initOverrides?: RequestInit): Promise<MempoolTransactionStatsResponse>;\n\n    /**\n     * Retrieves a hex encoded serialized transaction for a given ID \n     * @summary Get Raw Transaction\n     * @param {string} txId Hash of transaction\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TransactionsApiInterface\n     */\n    getRawTransactionByIdRaw(requestParameters: GetRawTransactionByIdRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetRawTransactionResult>>;\n\n    /**\n     * Retrieves a hex encoded serialized transaction for a given ID \n     * Get Raw Transaction\n     */\n    getRawTransactionById(requestParameters: GetRawTransactionByIdRequest, initOverrides?: RequestInit): Promise<GetRawTransactionResult>;\n\n    /**\n     * Retrieves transaction details for a given transaction ID  `import type { Transaction } from \\'@stacks/stacks-blockchain-api-types\\';` \n     * @summary Get transaction\n     * @param {string} txId Hash of transaction\n     * @param {number} [eventOffset] The number of events to skip\n     * @param {number} [eventLimit] The numbers of events to return\n     * @param {boolean} [unanchored] Include transaction data from unanchored (i.e. unconfirmed) microblocks\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TransactionsApiInterface\n     */\n    getTransactionByIdRaw(requestParameters: GetTransactionByIdRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<object>>;\n\n    /**\n     * Retrieves transaction details for a given transaction ID  `import type { Transaction } from \\'@stacks/stacks-blockchain-api-types\\';` \n     * Get transaction\n     */\n    getTransactionById(requestParameters: GetTransactionByIdRequest, initOverrides?: RequestInit): Promise<object>;\n\n    /**\n     * Retrieves all recently mined transactions  If using TypeScript, import typings for this response from our types package:  `import type { TransactionResults } from \\'@stacks/stacks-blockchain-api-types\\';` \n     * @summary Get recent transactions\n     * @param {number} [limit] max number of transactions to fetch\n     * @param {number} [offset] index of first transaction to fetch\n     * @param {Array<'coinbase' | 'token_transfer' | 'smart_contract' | 'contract_call' | 'poison_microblock'>} [type] Filter by transaction type\n     * @param {boolean} [unanchored] Include transaction data from unanchored (i.e. unconfirmed) microblocks\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TransactionsApiInterface\n     */\n    getTransactionListRaw(requestParameters: GetTransactionListRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<TransactionResults>>;\n\n    /**\n     * Retrieves all recently mined transactions  If using TypeScript, import typings for this response from our types package:  `import type { TransactionResults } from \\'@stacks/stacks-blockchain-api-types\\';` \n     * Get recent transactions\n     */\n    getTransactionList(requestParameters: GetTransactionListRequest, initOverrides?: RequestInit): Promise<TransactionResults>;\n\n    /**\n     * Retrieves a list of all transactions within a block for a given block hash.\n     * @summary Transactions by block hash\n     * @param {string} blockHash Hash of block\n     * @param {number} [limit] max number of transactions to fetch\n     * @param {number} [offset] index of first transaction to fetch\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TransactionsApiInterface\n     */\n    getTransactionsByBlockHashRaw(requestParameters: GetTransactionsByBlockHashRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<TransactionResults>>;\n\n    /**\n     * Retrieves a list of all transactions within a block for a given block hash.\n     * Transactions by block hash\n     */\n    getTransactionsByBlockHash(requestParameters: GetTransactionsByBlockHashRequest, initOverrides?: RequestInit): Promise<TransactionResults>;\n\n    /**\n     * Retrieves all transactions within a block at a given height\n     * @summary Transactions by block height\n     * @param {number} height Height of block\n     * @param {number} [limit] max number of transactions to fetch\n     * @param {number} [offset] index of first transaction to fetch\n     * @param {boolean} [unanchored] Include transaction data from unanchored (i.e. unconfirmed) microblocks\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TransactionsApiInterface\n     */\n    getTransactionsByBlockHeightRaw(requestParameters: GetTransactionsByBlockHeightRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<TransactionResults>>;\n\n    /**\n     * Retrieves all transactions within a block at a given height\n     * Transactions by block height\n     */\n    getTransactionsByBlockHeight(requestParameters: GetTransactionsByBlockHeightRequest, initOverrides?: RequestInit): Promise<TransactionResults>;\n\n    /**\n     * Retrieves a list of transactions for a given list of transaction IDs  If using TypeScript, import typings for this response from our types package:  `import type { Transaction } from \\'@stacks/stacks-blockchain-api-types\\';` \n     * @summary Get list of details for transactions\n     * @param {Array<string>} txId Array of transaction ids\n     * @param {number} [eventOffset] The number of events to skip\n     * @param {number} [eventLimit] The numbers of events to return\n     * @param {boolean} [unanchored] Include transaction data from unanchored (i.e. unconfirmed) microblocks\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TransactionsApiInterface\n     */\n    getTxListDetailsRaw(requestParameters: GetTxListDetailsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<{ [key: string]: object; }>>;\n\n    /**\n     * Retrieves a list of transactions for a given list of transaction IDs  If using TypeScript, import typings for this response from our types package:  `import type { Transaction } from \\'@stacks/stacks-blockchain-api-types\\';` \n     * Get list of details for transactions\n     */\n    getTxListDetails(requestParameters: GetTxListDetailsRequest, initOverrides?: RequestInit): Promise<{ [key: string]: object; }>;\n\n    /**\n     * Broadcasts raw transactions on the network. You can use the [@stacks/transactions](https://github.com/blockstack/stacks.js) project to generate a raw transaction payload.\n     * @summary Broadcast raw transaction\n     * @param {Blob} [body] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TransactionsApiInterface\n     */\n    postCoreNodeTransactionsRaw(requestParameters: PostCoreNodeTransactionsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<string>>;\n\n    /**\n     * Broadcasts raw transactions on the network. You can use the [@stacks/transactions](https://github.com/blockstack/stacks.js) project to generate a raw transaction payload.\n     * Broadcast raw transaction\n     */\n    postCoreNodeTransactions(requestParameters: PostCoreNodeTransactionsRequest, initOverrides?: RequestInit): Promise<string>;\n\n}\n\n/**\n * \n */\nexport class TransactionsApi extends runtime.BaseAPI implements TransactionsApiInterface {\n\n    /**\n     * Retrieves all transactions for a given address that are currently in mempool\n     * Transactions for address\n     */\n    async getAddressMempoolTransactionsRaw(requestParameters: GetAddressMempoolTransactionsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<MempoolTransactionListResponse>> {\n        if (requestParameters.address === null || requestParameters.address === undefined) {\n            throw new runtime.RequiredError('address','Required parameter requestParameters.address was null or undefined when calling getAddressMempoolTransactions.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        if (requestParameters.unanchored !== undefined) {\n            queryParameters['unanchored'] = requestParameters.unanchored;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/address/{address}/mempool`.replace(`{${\"address\"}}`, encodeURIComponent(String(requestParameters.address))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => MempoolTransactionListResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves all transactions for a given address that are currently in mempool\n     * Transactions for address\n     */\n    async getAddressMempoolTransactions(requestParameters: GetAddressMempoolTransactionsRequest, initOverrides?: RequestInit): Promise<MempoolTransactionListResponse> {\n        const response = await this.getAddressMempoolTransactionsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves all recently-broadcast transactions that have been dropped from the mempool.  Transactions are dropped from the mempool if:  * they were stale and awaiting garbage collection or,  * were expensive,  or  * were replaced with a new fee \n     * Get dropped mempool transactions\n     */\n    async getDroppedMempoolTransactionListRaw(requestParameters: GetDroppedMempoolTransactionListRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<MempoolTransactionListResponse>> {\n        const queryParameters: any = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/tx/mempool/dropped`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => MempoolTransactionListResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves all recently-broadcast transactions that have been dropped from the mempool.  Transactions are dropped from the mempool if:  * they were stale and awaiting garbage collection or,  * were expensive,  or  * were replaced with a new fee \n     * Get dropped mempool transactions\n     */\n    async getDroppedMempoolTransactionList(requestParameters: GetDroppedMempoolTransactionListRequest, initOverrides?: RequestInit): Promise<MempoolTransactionListResponse> {\n        const response = await this.getDroppedMempoolTransactionListRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves the list of events filtered by principal (STX address or Smart Contract ID), transaction id or event types. The list of event types is (\\'smart_contract_log\\', \\'stx_lock\\', \\'stx_asset\\', \\'fungible_token_asset\\', \\'non_fungible_token_asset\\').\n     * Transaction Events\n     */\n    async getFilteredEventsRaw(requestParameters: GetFilteredEventsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<TransactionEventsResponse>> {\n        const queryParameters: any = {};\n\n        if (requestParameters.txId !== undefined) {\n            queryParameters['tx_id'] = requestParameters.txId;\n        }\n\n        if (requestParameters.address !== undefined) {\n            queryParameters['address'] = requestParameters.address;\n        }\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        if (requestParameters.type) {\n            queryParameters['type'] = requestParameters.type;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/tx/events`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => TransactionEventsResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves the list of events filtered by principal (STX address or Smart Contract ID), transaction id or event types. The list of event types is (\\'smart_contract_log\\', \\'stx_lock\\', \\'stx_asset\\', \\'fungible_token_asset\\', \\'non_fungible_token_asset\\').\n     * Transaction Events\n     */\n    async getFilteredEvents(requestParameters: GetFilteredEventsRequest, initOverrides?: RequestInit): Promise<TransactionEventsResponse> {\n        const response = await this.getFilteredEventsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves all transactions that have been recently broadcast to the mempool. These are pending transactions awaiting confirmation.  If you need to monitor new transactions, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates. \n     * Get mempool transactions\n     */\n    async getMempoolTransactionListRaw(requestParameters: GetMempoolTransactionListRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<MempoolTransactionListResponse>> {\n        const queryParameters: any = {};\n\n        if (requestParameters.senderAddress !== undefined) {\n            queryParameters['sender_address'] = requestParameters.senderAddress;\n        }\n\n        if (requestParameters.recipientAddress !== undefined) {\n            queryParameters['recipient_address'] = requestParameters.recipientAddress;\n        }\n\n        if (requestParameters.address !== undefined) {\n            queryParameters['address'] = requestParameters.address;\n        }\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        if (requestParameters.unanchored !== undefined) {\n            queryParameters['unanchored'] = requestParameters.unanchored;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/tx/mempool`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => MempoolTransactionListResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves all transactions that have been recently broadcast to the mempool. These are pending transactions awaiting confirmation.  If you need to monitor new transactions, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates. \n     * Get mempool transactions\n     */\n    async getMempoolTransactionList(requestParameters: GetMempoolTransactionListRequest, initOverrides?: RequestInit): Promise<MempoolTransactionListResponse> {\n        const response = await this.getMempoolTransactionListRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Queries for transactions counts, age (by block height), fees (simple average), and size. All results broken down by transaction type and percentiles (p25, p50, p75, p95). \n     * Get statistics for mempool transactions\n     */\n    async getMempoolTransactionStatsRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<MempoolTransactionStatsResponse>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/tx/mempool/stats`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => MempoolTransactionStatsResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Queries for transactions counts, age (by block height), fees (simple average), and size. All results broken down by transaction type and percentiles (p25, p50, p75, p95). \n     * Get statistics for mempool transactions\n     */\n    async getMempoolTransactionStats(initOverrides?: RequestInit): Promise<MempoolTransactionStatsResponse> {\n        const response = await this.getMempoolTransactionStatsRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves a hex encoded serialized transaction for a given ID \n     * Get Raw Transaction\n     */\n    async getRawTransactionByIdRaw(requestParameters: GetRawTransactionByIdRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetRawTransactionResult>> {\n        if (requestParameters.txId === null || requestParameters.txId === undefined) {\n            throw new runtime.RequiredError('txId','Required parameter requestParameters.txId was null or undefined when calling getRawTransactionById.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/tx/{tx_id}/raw`.replace(`{${\"tx_id\"}}`, encodeURIComponent(String(requestParameters.txId))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => GetRawTransactionResultFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves a hex encoded serialized transaction for a given ID \n     * Get Raw Transaction\n     */\n    async getRawTransactionById(requestParameters: GetRawTransactionByIdRequest, initOverrides?: RequestInit): Promise<GetRawTransactionResult> {\n        const response = await this.getRawTransactionByIdRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves transaction details for a given transaction ID  `import type { Transaction } from \\'@stacks/stacks-blockchain-api-types\\';` \n     * Get transaction\n     */\n    async getTransactionByIdRaw(requestParameters: GetTransactionByIdRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<object>> {\n        if (requestParameters.txId === null || requestParameters.txId === undefined) {\n            throw new runtime.RequiredError('txId','Required parameter requestParameters.txId was null or undefined when calling getTransactionById.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.eventOffset !== undefined) {\n            queryParameters['event_offset'] = requestParameters.eventOffset;\n        }\n\n        if (requestParameters.eventLimit !== undefined) {\n            queryParameters['event_limit'] = requestParameters.eventLimit;\n        }\n\n        if (requestParameters.unanchored !== undefined) {\n            queryParameters['unanchored'] = requestParameters.unanchored;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/tx/{tx_id}`.replace(`{${\"tx_id\"}}`, encodeURIComponent(String(requestParameters.txId))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Retrieves transaction details for a given transaction ID  `import type { Transaction } from \\'@stacks/stacks-blockchain-api-types\\';` \n     * Get transaction\n     */\n    async getTransactionById(requestParameters: GetTransactionByIdRequest, initOverrides?: RequestInit): Promise<object> {\n        const response = await this.getTransactionByIdRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves all recently mined transactions  If using TypeScript, import typings for this response from our types package:  `import type { TransactionResults } from \\'@stacks/stacks-blockchain-api-types\\';` \n     * Get recent transactions\n     */\n    async getTransactionListRaw(requestParameters: GetTransactionListRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<TransactionResults>> {\n        const queryParameters: any = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        if (requestParameters.type) {\n            queryParameters['type'] = requestParameters.type;\n        }\n\n        if (requestParameters.unanchored !== undefined) {\n            queryParameters['unanchored'] = requestParameters.unanchored;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/tx`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => TransactionResultsFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves all recently mined transactions  If using TypeScript, import typings for this response from our types package:  `import type { TransactionResults } from \\'@stacks/stacks-blockchain-api-types\\';` \n     * Get recent transactions\n     */\n    async getTransactionList(requestParameters: GetTransactionListRequest, initOverrides?: RequestInit): Promise<TransactionResults> {\n        const response = await this.getTransactionListRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves a list of all transactions within a block for a given block hash.\n     * Transactions by block hash\n     */\n    async getTransactionsByBlockHashRaw(requestParameters: GetTransactionsByBlockHashRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<TransactionResults>> {\n        if (requestParameters.blockHash === null || requestParameters.blockHash === undefined) {\n            throw new runtime.RequiredError('blockHash','Required parameter requestParameters.blockHash was null or undefined when calling getTransactionsByBlockHash.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/tx/block/{block_hash}`.replace(`{${\"block_hash\"}}`, encodeURIComponent(String(requestParameters.blockHash))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => TransactionResultsFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves a list of all transactions within a block for a given block hash.\n     * Transactions by block hash\n     */\n    async getTransactionsByBlockHash(requestParameters: GetTransactionsByBlockHashRequest, initOverrides?: RequestInit): Promise<TransactionResults> {\n        const response = await this.getTransactionsByBlockHashRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves all transactions within a block at a given height\n     * Transactions by block height\n     */\n    async getTransactionsByBlockHeightRaw(requestParameters: GetTransactionsByBlockHeightRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<TransactionResults>> {\n        if (requestParameters.height === null || requestParameters.height === undefined) {\n            throw new runtime.RequiredError('height','Required parameter requestParameters.height was null or undefined when calling getTransactionsByBlockHeight.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        if (requestParameters.unanchored !== undefined) {\n            queryParameters['unanchored'] = requestParameters.unanchored;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/tx/block_height/{height}`.replace(`{${\"height\"}}`, encodeURIComponent(String(requestParameters.height))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => TransactionResultsFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieves all transactions within a block at a given height\n     * Transactions by block height\n     */\n    async getTransactionsByBlockHeight(requestParameters: GetTransactionsByBlockHeightRequest, initOverrides?: RequestInit): Promise<TransactionResults> {\n        const response = await this.getTransactionsByBlockHeightRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves a list of transactions for a given list of transaction IDs  If using TypeScript, import typings for this response from our types package:  `import type { Transaction } from \\'@stacks/stacks-blockchain-api-types\\';` \n     * Get list of details for transactions\n     */\n    async getTxListDetailsRaw(requestParameters: GetTxListDetailsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<{ [key: string]: object; }>> {\n        if (requestParameters.txId === null || requestParameters.txId === undefined) {\n            throw new runtime.RequiredError('txId','Required parameter requestParameters.txId was null or undefined when calling getTxListDetails.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.txId) {\n            queryParameters['tx_id'] = requestParameters.txId;\n        }\n\n        if (requestParameters.eventOffset !== undefined) {\n            queryParameters['event_offset'] = requestParameters.eventOffset;\n        }\n\n        if (requestParameters.eventLimit !== undefined) {\n            queryParameters['event_limit'] = requestParameters.eventLimit;\n        }\n\n        if (requestParameters.unanchored !== undefined) {\n            queryParameters['unanchored'] = requestParameters.unanchored;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/extended/v1/tx/multiple`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Retrieves a list of transactions for a given list of transaction IDs  If using TypeScript, import typings for this response from our types package:  `import type { Transaction } from \\'@stacks/stacks-blockchain-api-types\\';` \n     * Get list of details for transactions\n     */\n    async getTxListDetails(requestParameters: GetTxListDetailsRequest, initOverrides?: RequestInit): Promise<{ [key: string]: object; }> {\n        const response = await this.getTxListDetailsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Broadcasts raw transactions on the network. You can use the [@stacks/transactions](https://github.com/blockstack/stacks.js) project to generate a raw transaction payload.\n     * Broadcast raw transaction\n     */\n    async postCoreNodeTransactionsRaw(requestParameters: PostCoreNodeTransactionsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<string>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/octet-stream';\n\n        const response = await this.request({\n            path: `/v2/transactions`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: requestParameters.body as any,\n        }, initOverrides);\n\n        return new runtime.TextApiResponse(response) as any;\n    }\n\n    /**\n     * Broadcasts raw transactions on the network. You can use the [@stacks/transactions](https://github.com/blockstack/stacks.js) project to generate a raw transaction payload.\n     * Broadcast raw transaction\n     */\n    async postCoreNodeTransactions(requestParameters: PostCoreNodeTransactionsRequest, initOverrides?: RequestInit): Promise<string> {\n        const response = await this.postCoreNodeTransactionsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n\n/**\n    * @export\n    * @enum {string}\n    */\nexport enum GetFilteredEventsTypeEnum {\n    smart_contract_log = 'smart_contract_log',\n    stx_lock = 'stx_lock',\n    stx_asset = 'stx_asset',\n    fungible_token_asset = 'fungible_token_asset',\n    non_fungible_token_asset = 'non_fungible_token_asset'\n}\n/**\n    * @export\n    * @enum {string}\n    */\nexport enum GetTransactionListTypeEnum {\n    coinbase = 'coinbase',\n    token_transfer = 'token_transfer',\n    smart_contract = 'smart_contract',\n    contract_call = 'contract_call',\n    poison_microblock = 'poison_microblock'\n}\n","// **Github:** https://github.com/teambition/jsonrpc-lite\n//\n// http://www.jsonrpc.org/specification\n// **License:** MIT\n'use strict';\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst isInteger = typeof Number.isSafeInteger === 'function'\n    ? Number.isSafeInteger // ECMAScript 2015\n    : function (num) {\n        return typeof num === 'number' && isFinite(num) && num === Math.floor(num) && Math.abs(num) <= 9007199254740991;\n    };\nexport class JsonRpc {\n    constructor() {\n        this.jsonrpc = '2.0';\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n}\nJsonRpc.VERSION = '2.0';\nexport class RequestObject extends JsonRpc {\n    constructor(id, method, params) {\n        super();\n        this.id = id;\n        this.method = method;\n        if (params !== undefined) {\n            this.params = params;\n        }\n    }\n}\nexport class NotificationObject extends JsonRpc {\n    constructor(method, params) {\n        super();\n        this.method = method;\n        if (params !== undefined) {\n            this.params = params;\n        }\n    }\n}\nexport class SuccessObject extends JsonRpc {\n    constructor(id, result) {\n        super();\n        this.id = id;\n        this.result = result;\n    }\n}\nexport class ErrorObject extends JsonRpc {\n    // tslint:disable-next-line:no-shadowed-variable\n    constructor(id, error) {\n        super();\n        this.id = id;\n        this.error = error;\n        this.id = id;\n        this.error = error;\n    }\n}\nexport class JsonRpcParsed {\n    constructor(payload, type) {\n        this.payload = payload;\n        this.type = type;\n        this.payload = payload;\n        this.type = type;\n    }\n}\n/**\n * JsonRpcError Class\n *\n * @param  {String} message\n * @param  {Integer} code\n * @return {String} name: optional\n * @api public\n */\nexport class JsonRpcError {\n    constructor(message, code, data) {\n        this.message = message;\n        this.code = isInteger(code) ? code : 0;\n        if (data != null) {\n            this.data = data;\n        }\n    }\n}\nJsonRpcError.invalidRequest = function (data) {\n    return new JsonRpcError('Invalid request', -32600, data);\n};\nJsonRpcError.methodNotFound = function (data) {\n    return new JsonRpcError('Method not found', -32601, data);\n};\nJsonRpcError.invalidParams = function (data) {\n    return new JsonRpcError('Invalid params', -32602, data);\n};\nJsonRpcError.internalError = function (data) {\n    return new JsonRpcError('Internal error', -32603, data);\n};\nJsonRpcError.parseError = function (data) {\n    return new JsonRpcError('Parse error', -32700, data);\n};\n/**\n * Creates a JSON-RPC 2.0 request object\n *\n * @param  {String|Integer} id\n * @param  {String} method\n * @param  {Object|Array} [params]: optional\n * @return {Object} JsonRpc object\n * @api public\n */\nexport function request(id, method, params) {\n    const object = new RequestObject(id, method, params);\n    validateMessage(object, true);\n    return object;\n}\n/**\n * Creates a JSON-RPC 2.0 notification object\n *\n * @param  {String} method\n * @param  {Object|Array} [params]: optional\n * @return {Object} JsonRpc object\n * @api public\n */\nexport function notification(method, params) {\n    const object = new NotificationObject(method, params);\n    validateMessage(object, true);\n    return object;\n}\n/**\n * Creates a JSON-RPC 2.0 success response object\n *\n * @param  {String|Integer} id\n * @param  {Mixed} result\n * @return {Object} JsonRpc object\n * @api public\n */\nexport function success(id, result) {\n    const object = new SuccessObject(id, result);\n    validateMessage(object, true);\n    return object;\n}\n/**\n * Creates a JSON-RPC 2.0 error response object\n *\n * @param  {String|Integer} id\n * @param  {Object} JsonRpcError error\n * @return {Object} JsonRpc object\n * @api public\n */\nexport function error(id, err) {\n    const object = new ErrorObject(id, err);\n    validateMessage(object, true);\n    return object;\n}\nexport function parse(message) {\n    if (!isString(message)) {\n        return new JsonRpcParsed(JsonRpcError.invalidRequest(message), \"invalid\" /* invalid */);\n    }\n    let jsonrpcObj;\n    try {\n        jsonrpcObj = JSON.parse(message);\n    }\n    catch (err) {\n        return new JsonRpcParsed(JsonRpcError.parseError(message), \"invalid\" /* invalid */);\n    }\n    return parseJsonRpcObject(jsonrpcObj);\n}\n/**\n * Takes a JSON-RPC 2.0 payload (Object) or batch (Object[]) and tries to parse it.\n * If successful, determine what objects are inside (response, notification,\n * success, error, or invalid), and return their types and properly formatted objects.\n *\n * @param  {Object|Array} jsonrpcObj\n * @return {Object|Array} a single object or an array of `JsonRpcParsed` objects with `type` and `payload`:\n *\n *  {\n *    type: <Enum, 'request'|'notification'|'success'|'error'|'invalid'>\n *    payload: <JsonRpc|JsonRpcError>\n *  }\n *\n * @api public\n */\nexport function parseJsonRpcObject(jsonrpcObj) {\n    if (!Array.isArray(jsonrpcObj)) {\n        return parseObject(jsonrpcObj);\n    }\n    if (jsonrpcObj.length === 0) {\n        return new JsonRpcParsed(JsonRpcError.invalidRequest(jsonrpcObj), \"invalid\" /* invalid */);\n    }\n    const parsedObjectArray = [];\n    for (let i = 0, len = jsonrpcObj.length; i < len; i++) {\n        parsedObjectArray[i] = parseObject(jsonrpcObj[i]);\n    }\n    return parsedObjectArray;\n}\n/**\n * Alias for `parse` method.\n * Takes a JSON-RPC 2.0 payload (String) and tries to parse it into a JSON.\n * @api public\n */\nexport const parseJsonRpcString = parse;\n/**\n * Takes a JSON-RPC 2.0 payload (Object) and tries to parse it into a JSON.\n * If successful, determine what object is it (response, notification,\n * success, error, or invalid), and return it's type and properly formatted object.\n *\n * @param  {Object} obj\n * @return {Object} an `JsonRpcParsed` object with `type` and `payload`:\n *\n *  {\n *    type: <Enum, 'request'|'notification'|'success'|'error'|'invalid'>\n *    payload: <JsonRpc|JsonRpcError>\n *  }\n *\n * @api public\n */\nexport function parseObject(obj) {\n    let err = null;\n    let payload = null;\n    let payloadType = \"invalid\" /* invalid */;\n    if (obj == null || obj.jsonrpc !== JsonRpc.VERSION) {\n        err = JsonRpcError.invalidRequest(obj);\n        payloadType = \"invalid\" /* invalid */;\n    }\n    else if (!hasOwnProperty.call(obj, 'id')) {\n        const tmp = obj;\n        payload = new NotificationObject(tmp.method, tmp.params);\n        err = validateMessage(payload);\n        payloadType = \"notification\" /* notification */;\n    }\n    else if (hasOwnProperty.call(obj, 'method')) {\n        const tmp = obj;\n        payload = new RequestObject(tmp.id, tmp.method, tmp.params);\n        err = validateMessage(payload);\n        payloadType = \"request\" /* request */;\n    }\n    else if (hasOwnProperty.call(obj, 'result')) {\n        const tmp = obj;\n        payload = new SuccessObject(tmp.id, tmp.result);\n        err = validateMessage(payload);\n        payloadType = \"success\" /* success */;\n    }\n    else if (hasOwnProperty.call(obj, 'error')) {\n        const tmp = obj;\n        payloadType = \"error\" /* error */;\n        if (tmp.error == null) {\n            err = JsonRpcError.internalError(tmp);\n        }\n        else {\n            const errorObj = new JsonRpcError(tmp.error.message, tmp.error.code, tmp.error.data);\n            if (errorObj.message !== tmp.error.message || errorObj.code !== tmp.error.code) {\n                err = JsonRpcError.internalError(tmp);\n            }\n            else {\n                payload = new ErrorObject(tmp.id, errorObj);\n                err = validateMessage(payload);\n            }\n        }\n    }\n    if (err == null && payload != null) {\n        return new JsonRpcParsed(payload, payloadType);\n    }\n    return new JsonRpcParsed(err != null ? err : JsonRpcError.invalidRequest(obj), \"invalid\" /* invalid */);\n}\n// if error, return error, else return null\nfunction validateMessage(obj, throwIt) {\n    let err = null;\n    if (obj instanceof RequestObject) {\n        err = checkId(obj.id);\n        if (err == null) {\n            err = checkMethod(obj.method);\n        }\n        if (err == null) {\n            err = checkParams(obj.params);\n        }\n    }\n    else if (obj instanceof NotificationObject) {\n        err = checkMethod(obj.method);\n        if (err == null) {\n            err = checkParams(obj.params);\n        }\n    }\n    else if (obj instanceof SuccessObject) {\n        err = checkId(obj.id);\n        if (err == null) {\n            err = checkResult(obj.result);\n        }\n    }\n    else if (obj instanceof ErrorObject) {\n        err = checkId(obj.id, true);\n        if (err == null) {\n            err = checkError(obj.error);\n        }\n    }\n    if (throwIt && err != null) {\n        throw err;\n    }\n    return err;\n}\nfunction checkId(id, maybeNull) {\n    if (maybeNull && id === null) {\n        return null;\n    }\n    return isString(id) || isInteger(id)\n        ? null\n        : JsonRpcError.internalError('\"id\" must be provided, a string or an integer.');\n}\nfunction checkMethod(method) {\n    return isString(method) ? null : JsonRpcError.invalidRequest(method);\n}\nfunction checkResult(result) {\n    return result === undefined\n        ? JsonRpcError.internalError('Result must exist for success Response objects')\n        : null;\n}\nfunction checkParams(params) {\n    if (params === undefined) {\n        return null;\n    }\n    if (Array.isArray(params) || isObject(params)) {\n        // ensure params can be stringify\n        try {\n            JSON.stringify(params);\n            return null;\n        }\n        catch (err) {\n            return JsonRpcError.parseError(params);\n        }\n    }\n    return JsonRpcError.invalidParams(params);\n}\nfunction checkError(err) {\n    if (!(err instanceof JsonRpcError)) {\n        return JsonRpcError.internalError('Error must be an instance of JsonRpcError');\n    }\n    if (!isInteger(err.code)) {\n        return JsonRpcError.internalError('Invalid error code. It must be an integer.');\n    }\n    if (!isString(err.message)) {\n        return JsonRpcError.internalError('Message must exist or must be a string.');\n    }\n    return null;\n}\nfunction isString(obj) {\n    return obj !== '' && typeof obj === 'string';\n}\nfunction isObject(obj) {\n    return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\nconst jsonrpc = {\n    JsonRpc,\n    JsonRpcError,\n    request,\n    notification,\n    success,\n    error,\n    parse,\n    parseObject,\n    parseJsonRpcObject,\n    parseJsonRpcString,\n};\nexport default jsonrpc;\nexport { jsonrpc };\n//# sourceMappingURL=jsonrpc.js.map","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import * as JsonRpcLite from 'jsonrpc-lite';\nimport { EventEmitter } from 'eventemitter3';\nimport {\n  RpcTxUpdateSubscriptionParams,\n  RpcAddressTxSubscriptionParams,\n  RpcAddressBalanceSubscriptionParams,\n  RpcSubscriptionType,\n  Block,\n  RpcBlockSubscriptionParams,\n  Microblock,\n  Transaction,\n  RpcMicroblockSubscriptionParams,\n  RpcMempoolSubscriptionParams,\n  MempoolTransaction,\n  RpcAddressBalanceNotificationParams,\n  RpcAddressTxNotificationParams,\n  NftEvent,\n  RpcNftEventSubscriptionParams,\n  RpcNftAssetEventSubscriptionParams,\n  RpcNftCollectionEventSubscriptionParams,\n} from '@stacks/stacks-blockchain-api-types';\nimport { BASE_PATH } from '../generated/runtime';\n\ntype IWebSocket = import('ws') | WebSocket;\n\ninterface Subscription {\n  unsubscribe(): Promise<void>;\n}\n\nexport class StacksApiWebSocketClient {\n  webSocket: IWebSocket;\n  idCursor = 0;\n  pendingRequests = new Map<\n    JsonRpcLite.ID,\n    { resolve: (result: any) => void; reject: (error: any) => void }\n  >();\n\n  eventEmitter = new EventEmitter<{\n    block: (event: Block) => void;\n    microblock: (event: Microblock) => void;\n    mempool: (event: Transaction) => void;\n    txUpdate: (event: Transaction | MempoolTransaction) => any;\n    addressTxUpdate: (event: RpcAddressTxNotificationParams) => void;\n    addressBalanceUpdate: (event: RpcAddressBalanceNotificationParams) => void;\n    nftEventUpdate: (event: NftEvent) => void;\n    nftAssetEventUpdate: (event: NftEvent) => void;\n    nftCollectionEventUpdate: (event: NftEvent) => void;\n  }>();\n\n  public static async connect(url: string = BASE_PATH): Promise<StacksApiWebSocketClient> {\n    // `ws://${addr}/extended/v1/ws`;\n    let urlObj: URL;\n    try {\n      urlObj = new URL(url);\n    } catch (_error) {\n      urlObj = new URL(`ws://${url}`);\n    }\n    if (urlObj.protocol === 'https:') {\n      urlObj.protocol = 'wss:';\n    } else if (urlObj.protocol === 'http:') {\n      urlObj.protocol = 'ws:';\n    }\n    if (urlObj.pathname === '/') {\n      urlObj.pathname = '/extended/v1/ws';\n    }\n    const webSocket = await new Promise<IWebSocket>((resolve, reject) => {\n      const webSocket = new (createWebSocket())(urlObj.toString());\n      webSocket.onopen = () => resolve(webSocket);\n      webSocket.onerror = error => reject(error);\n    });\n    return new StacksApiWebSocketClient(webSocket);\n  }\n\n  constructor(webSocket: IWebSocket) {\n    this.webSocket = webSocket;\n    (webSocket as WebSocket).addEventListener('message', event => {\n      const parsed = JsonRpcLite.parse(event.data);\n      const rpcObjects = Array.isArray(parsed) ? parsed : [parsed];\n      rpcObjects.forEach(obj => {\n        if (obj.type === JsonRpcLite.RpcStatusType.notification) {\n          this.handleNotification(obj.payload);\n        } else if (obj.type === JsonRpcLite.RpcStatusType.success) {\n          const req = this.pendingRequests.get(obj.payload.id);\n          if (req) {\n            this.pendingRequests.delete(obj.payload.id);\n            req.resolve(obj.payload.result);\n          }\n        } else if (obj.type === JsonRpcLite.RpcStatusType.error) {\n          const req = this.pendingRequests.get(obj.payload.id);\n          if (req) {\n            this.pendingRequests.delete(obj.payload.id);\n            req.reject(obj.payload.error);\n          }\n        }\n      });\n    });\n  }\n\n  handleNotification(data: JsonRpcLite.NotificationObject): void {\n    const method = data.method as RpcSubscriptionType;\n    switch (method) {\n      case 'tx_update':\n        this.eventEmitter.emit('txUpdate', data.params as (Transaction | MempoolTransaction));\n        break;\n      case 'address_tx_update':\n        this.eventEmitter.emit('addressTxUpdate',\n          data.params as RpcAddressTxNotificationParams);\n        break;\n      case 'address_balance_update':\n        this.eventEmitter.emit(\n          'addressBalanceUpdate',\n          data.params as RpcAddressBalanceNotificationParams\n        );\n        break;\n      case 'block':\n        this.eventEmitter.emit('block', data.params as Block);\n        break;\n      case 'microblock':\n        this.eventEmitter.emit('microblock', data.params as Microblock);\n        break;\n      case 'mempool':\n        this.eventEmitter.emit('mempool', data.params as Transaction);\n        break;\n      case 'nft_event':\n        this.eventEmitter.emit('nftEventUpdate', data.params as NftEvent);\n        break;\n      case 'nft_asset_event':\n        this.eventEmitter.emit('nftAssetEventUpdate', data.params as NftEvent);\n        break;\n      case 'nft_collection_event':\n        this.eventEmitter.emit('nftCollectionEventUpdate', data.params as NftEvent);\n        break;\n    }\n  }\n\n  private rpcCall<TResult = void>(method: string, params: any): Promise<TResult> {\n    const rpcReq = JsonRpcLite.request(++this.idCursor, method, params);\n    return new Promise<TResult>((resolve, reject) => {\n      this.pendingRequests.set(rpcReq.id, { resolve, reject });\n      this.webSocket.send(rpcReq.serialize());\n    });\n  }\n\n  async subscribeBlocks(update: (event: Block) => any): Promise<Subscription> {\n    const params: RpcBlockSubscriptionParams = { event: 'block' };\n    await this.rpcCall('subscribe', params);\n    const listener = (event: Block) => {\n      update(event);\n    };\n    this.eventEmitter.addListener('block', listener);\n    return {\n      unsubscribe: () => {\n        this.eventEmitter.removeListener('block', listener);\n        return this.rpcCall('unsubscribe', params);\n      },\n    };\n  }\n\n  async subscribeMicroblocks(update: (event: Microblock) => any): Promise<Subscription> {\n    const params: RpcMicroblockSubscriptionParams = { event: 'microblock' };\n    await this.rpcCall('subscribe', params);\n    const listener = (event: Microblock) => {\n      update(event);\n    };\n    this.eventEmitter.addListener('microblock', listener);\n    return {\n      unsubscribe: () => {\n        this.eventEmitter.removeListener('microblock', listener);\n        return this.rpcCall('unsubscribe', params);\n      },\n    };\n  }\n\n  async subscribeMempool(update: (event: Transaction) => any): Promise<Subscription> {\n    const params: RpcMempoolSubscriptionParams = { event: 'mempool' };\n    await this.rpcCall('subscribe', params);\n    const listener = (event: Transaction) => {\n      update(event);\n    };\n    this.eventEmitter.addListener('mempool', listener);\n    return {\n      unsubscribe: () => {\n        this.eventEmitter.removeListener('mempool', listener);\n        return this.rpcCall('unsubscribe', params);\n      },\n    };\n  }\n\n  async subscribeTxUpdates(\n    txId: string,\n    update: (event: Transaction | MempoolTransaction) => any\n  ): Promise<Subscription> {\n    const params: RpcTxUpdateSubscriptionParams = { event: 'tx_update', tx_id: txId };\n    const subscribed = await this.rpcCall<{ tx_id: string }>('subscribe', params);\n    const listener = (event: Transaction | MempoolTransaction) => {\n      if (event.tx_id === subscribed.tx_id) {\n        update(event);\n      }\n    };\n    this.eventEmitter.addListener('txUpdate', listener);\n    return {\n      unsubscribe: () => {\n        this.eventEmitter.removeListener('txUpdate', listener);\n        return this.rpcCall('unsubscribe', params);\n      },\n    };\n  }\n\n  async subscribeAddressTransactions(\n    address: string,\n    update: (event: RpcAddressTxNotificationParams) => any\n  ): Promise<Subscription> {\n    const params: RpcAddressTxSubscriptionParams = { event: 'address_tx_update', address };\n    const subscribed = await this.rpcCall<{ address: string }>('subscribe', params);\n    const listener = (event: RpcAddressTxNotificationParams) => {\n      if (event.address === subscribed.address) {\n        update(event);\n      }\n    };\n    this.eventEmitter.addListener('addressTxUpdate', listener);\n    return {\n      unsubscribe: () => {\n        this.eventEmitter.removeListener('addressTxUpdate', listener);\n        return this.rpcCall('unsubscribe', params);\n      },\n    };\n  }\n\n  async subscribeAddressBalanceUpdates(\n    address: string,\n    update: (event: RpcAddressBalanceNotificationParams) => any\n  ): Promise<Subscription> {\n    const params: RpcAddressBalanceSubscriptionParams = {\n      event: 'address_balance_update',\n      address,\n    };\n    const subscribed = await this.rpcCall<{ address: string }>('subscribe', params);\n    const listener = (event: RpcAddressBalanceNotificationParams) => {\n      if (event.address === subscribed.address) {\n        update(event);\n      }\n    };\n    this.eventEmitter.addListener('addressBalanceUpdate', listener);\n    return {\n      unsubscribe: () => {\n        this.eventEmitter.removeListener('addressBalanceUpdate', listener);\n        return this.rpcCall('unsubscribe', params);\n      },\n    };\n  }\n\n  async subscribeNftEventUpdates(update: (event: NftEvent) => any): Promise<Subscription> {\n    const params: RpcNftEventSubscriptionParams = {\n      event: 'nft_event',\n    };\n    await this.rpcCall('subscribe', params);\n    const listener = (event: NftEvent) => {\n      update(event);\n    };\n    this.eventEmitter.addListener('nftEventUpdate', listener);\n    return {\n      unsubscribe: () => {\n        this.eventEmitter.removeListener('nftEventUpdate', listener);\n        return this.rpcCall('unsubscribe', params);\n      },\n    };\n  }\n\n  async subscribeNftAssetEventUpdates(\n    assetIdentifier: string,\n    value: string,\n    update: (event: NftEvent) => any\n  ): Promise<Subscription> {\n    const params: RpcNftAssetEventSubscriptionParams = {\n      event: 'nft_asset_event',\n      asset_identifier: assetIdentifier,\n      value,\n    };\n    const subscribed = await this.rpcCall<{ asset_identifier: string, value: string }>('subscribe', params);\n    const listener = (event: NftEvent) => {\n      if (event.asset_identifier === subscribed.asset_identifier && event.value.hex === subscribed.value) {\n        update(event);\n      }\n    };\n    this.eventEmitter.addListener('nftAssetEventUpdate', listener);\n    return {\n      unsubscribe: () => {\n        this.eventEmitter.removeListener('nftAssetEventUpdate', listener);\n        return this.rpcCall('unsubscribe', params);\n      },\n    };\n  }\n\n  async subscribeNftCollectionEventUpdates(\n    assetIdentifier: string,\n    update: (event: NftEvent) => any\n  ): Promise<Subscription> {\n    const params: RpcNftCollectionEventSubscriptionParams = {\n      event: 'nft_collection_event',\n      asset_identifier: assetIdentifier,\n    };\n    const subscribed = await this.rpcCall<{ asset_identifier: string }>('subscribe', params);\n    const listener = (event: NftEvent) => {\n      if (event.asset_identifier === subscribed.asset_identifier) {\n        update(event);\n      }\n    };\n    this.eventEmitter.addListener('nftCollectionEventUpdate', listener);\n    return {\n      unsubscribe: () => {\n        this.eventEmitter.removeListener('nftCollectionEventUpdate', listener);\n        return this.rpcCall('unsubscribe', params);\n      },\n    };\n  }\n}\n\nexport async function connectWebSocketClient(\n  url: string = BASE_PATH\n): Promise<StacksApiWebSocketClient> {\n  return StacksApiWebSocketClient.connect(url);\n}\n\n/**\n * Simple isomorphic WebSocket class lookup.\n * Uses global WebSocket (browsers) if available, otherwise, uses the Node.js `ws` lib.\n */\nfunction createWebSocket(): typeof WebSocket {\n  if (typeof WebSocket !== 'undefined') {\n    return WebSocket;\n  } else if (typeof global !== 'undefined' && global.WebSocket) {\n    return global.WebSocket;\n  } else if (typeof window !== 'undefined' && window.WebSocket) {\n    return window.WebSocket;\n  } else if (typeof self !== 'undefined' && self.WebSocket) {\n    return self.WebSocket;\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return require('ws');\n  }\n}\n","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","import parseuri from \"parseuri\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","export default (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","// browser shim for xmlhttprequest module\nimport hasCORS from \"has-cors\";\nimport globalThis from \"../globalThis.js\";\nexport default function (opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import globalThis from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n","\n/**\n * Expose `Emitter`.\n */\n\nexports.Emitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n//# sourceMappingURL=base64-arraybuffer.es5.js.map\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"base64-arraybuffer\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} str\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(msg, desc) {\n        const err = new Error(msg);\n        // @ts-ignore\n        err.type = \"TransportError\";\n        // @ts-ignore\n        err.description = desc;\n        super.emit(\"error\", err);\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emit(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emit(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose() {\n        this.readyState = \"closed\";\n        super.emit(\"close\");\n    }\n}\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","import { Transport } from \"../transport.js\";\nimport yeast from \"yeast\";\nimport parseqs from \"parseqs\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this.polling = false;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emit(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose();\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emit(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emit(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n}\n","/* global attachEvent */\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\n/**\n * Empty function\n */\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class XHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", err => {\n            this.onError(\"xhr post error\", err);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", err => {\n            this.onError(\"xhr poll error\", err);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n    onSuccess() {\n        this.emit(\"success\");\n        this.cleanup();\n    }\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n    onData(data) {\n        this.emit(\"data\", data);\n        this.onSuccess();\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emit(\"error\", err);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.onData(data);\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import globalThis from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport parseqs from \"parseqs\";\nimport yeast from \"yeast\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emit(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = this.onClose.bind(this);\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emit(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n","import { XHR } from \"./polling-xhr.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: XHR\n};\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions } from \"./util.js\";\nimport parseqs from \"parseqs\";\nimport parseuri from \"parseuri\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parseuri(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parseuri(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = parseqs.decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\");\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = clone(this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", () => {\n            this.onClose(\"transport close\");\n        });\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            this.transport.send(this.writeBuffer);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = this.writeBuffer.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, desc) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, desc);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\nfunction clone(obj) {\n    const o = {};\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    constructor() {\n        super();\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.disconnected = true;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n                this.onack(packet);\n                break;\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport Backoff from \"backo2\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { io } from 'socket.io-client';\nimport type { Socket } from 'socket.io-client';\nimport {\n  ClientToServerMessages,\n  Topic,\n  ServerToClientMessages,\n} from '@stacks/stacks-blockchain-api-types';\nimport { BASE_PATH } from '../generated/runtime';\n\nexport type StacksApiSocket = Socket<ServerToClientMessages, ClientToServerMessages>;\n\nfunction getWsUrl(url: string): URL {\n  let urlObj: URL;\n  try {\n    urlObj = new URL(url);\n    if (!urlObj.protocol || !urlObj.host) {\n      throw new TypeError(`[ERR_INVALID_URL]: Invalid URL: ${url}`);\n    }\n  } catch (error) {\n    console.error(`Pass an absolute URL with a protocol/schema, e.g. \"wss://example.com\"`);\n    throw error;\n  }\n  return urlObj;\n}\n\nexport interface StacksApiSocketConnectionOptions {\n  url?: string;\n  /** Initial topics to subscribe to. */\n  subscriptions?: Topic[];\n}\n\nexport class StacksApiSocketClient {\n  readonly socket: StacksApiSocket;\n\n  constructor(socket: StacksApiSocket) {\n    this.socket = socket;\n  }\n\n  public static connect({\n    url = BASE_PATH,\n    subscriptions = [],\n  }: StacksApiSocketConnectionOptions = {}) {\n    const socket: StacksApiSocket = io(getWsUrl(url).href, {\n      query: {\n        // Subscriptions can be specified on init using this handshake query param.\n        subscriptions: Array.from(new Set(subscriptions)).join(','),\n      },\n    });\n    return new StacksApiSocketClient(socket);\n  }\n\n  handleSubscription(topic: Topic, subscribe = false) {\n    const subscriptions = new Set(this.socket.io.opts.query?.subscriptions.split(',') ?? []);\n    if (subscribe) {\n      this.socket.emit('subscribe', topic, error => {\n        if (error) console.error(`Error subscribing: ${error}`);\n      });\n      subscriptions.add(topic);\n    } else {\n      this.socket.emit('unsubscribe', topic);\n      subscriptions.delete(topic);\n    }\n    // Update the subscriptions in the socket handshake so topics are persisted on re-connect.\n    if (this.socket.io.opts.query === undefined) {\n      this.socket.io.opts.query = {};\n    }\n    this.socket.io.opts.query.subscriptions = Array.from(subscriptions).join(',');\n    return {\n      unsubscribe: () => {\n        this.handleSubscription(topic, false);\n      },\n    };\n  }\n\n  subscribeBlocks() {\n    return this.handleSubscription('block', true);\n  }\n\n  unsubscribeBlocks() {\n    this.handleSubscription('block', false);\n  }\n\n  subscribeMicroblocks() {\n    return this.handleSubscription('microblock', true);\n  }\n\n  unsubscribeMicroblocks() {\n    this.handleSubscription('microblock', false);\n  }\n\n  subscribeMempool() {\n    return this.handleSubscription('mempool', true);\n  }\n\n  unsubscribeMempool() {\n    this.handleSubscription('mempool', false);\n  }\n\n  subscribeAddressTransactions(address: string) {\n    return this.handleSubscription(`address-transaction:${address}` as const, true);\n  }\n\n  unsubscribeAddressTransactions(address: string) {\n    this.handleSubscription(`address-transaction:${address}` as const, false);\n  }\n\n  subscribeAddressStxBalance(address: string) {\n    return this.handleSubscription(`address-stx-balance:${address}` as const, true);\n  }\n\n  unsubscribeAddressStxBalance(address: string) {\n    this.handleSubscription(`address-stx-balance:${address}` as const, false);\n  }\n\n  subscribeTransaction(txId: string) {\n    return this.handleSubscription(`transaction:${txId}` as const, true);\n  }\n\n  unsubscribeTransaction(txId: string) {\n    this.handleSubscription(`transaction:${txId}` as const, false);\n  }\n\n  subscribeNftEvent() {\n    return this.handleSubscription('nft-event', true);\n  }\n\n  unsubscribeNftEvent() {\n    this.handleSubscription('nft-event', false);\n  }\n\n  subscribeNftAssetEvent(assetIdentifier: string, value: string) {\n    return this.handleSubscription(`nft-asset-event:${assetIdentifier}+${value}` as const, true);\n  }\n\n  unsubscribeNftAssetEvent(assetIdentifier: string, value: string) {\n    this.handleSubscription(`nft-asset-event:${assetIdentifier}+${value}` as const, false);\n  }\n\n  subscribeNftCollectionEvent(assetIdentifier: string) {\n    return this.handleSubscription(`nft-collection-event:${assetIdentifier}` as const, true);\n  }\n\n  unsubscribeNftCollectionEvent(assetIdentifier: string) {\n    this.handleSubscription(`nft-collection-event:${assetIdentifier}` as const, false);\n  }\n\n  logEvents() {\n    this.socket.on('connect', () => console.log('socket connected'));\n    this.socket.on('disconnect', reason => console.warn('disconnected', reason));\n    this.socket.on('connect_error', error => console.error('connect_error', error));\n    this.socket.on('block', block => console.log('block', block));\n    this.socket.on('microblock', microblock => console.log('microblock', microblock));\n    this.socket.on('mempool', tx => console.log('mempool', tx));\n    this.socket.on('address-transaction', (address, data) =>\n      console.log('address-transaction', address, data)\n    );\n    this.socket.on('address-stx-balance', (address, data) =>\n      console.log('address-stx-balance', address, data)\n    );\n    this.socket.on('nft-event', event => console.log('nft-event', event));\n    this.socket.on('nft-asset-event', (assetIdentifier, value, event) =>\n      console.log('nft-asset-event', assetIdentifier, value, event)\n    );\n    this.socket.on('nft-collection-event', (assetIdentifier, event) =>\n      console.log('nft-collection-event', assetIdentifier, event)\n    );\n  }\n}\n"],"names":["state","value","then","observer","pact","_this","result","array","check","target","e","reject","values","BASE_PATH","replace","isBlob","Blob","BaseAPI","configuration","Configuration","middleware","fetchApi","url","init","fetch","fetchParams","response","post","clone","pre","withMiddleware","next","concat","withPreMiddleware","middlewares","map","withPostMiddleware","request","context","initOverrides","createFetchParams","status","basePath","path","query","undefined","Object","keys","length","queryParamsStringify","body","FormData","URLSearchParams","JSON","stringify","headers","assign","method","credentials","constructor","slice","RequiredError","field","msg","name","Error","COLLECTION_FORMATS","csv","ssv","tsv","pipes","querystring","username","password","apiKey","accessToken","exists","json","key","params","prefix","fullKey","Array","multiValue","singleValue","encodeURIComponent","String","join","Date","toISOString","filter","part","mapValues","data","fn","reduce","acc","canConsumeForm","consumes","consume","contentType","JSONApiResponse","raw","transformer","jsonValue","VoidApiResponse","BlobApiResponse","blob","TextApiResponse","text","AccountDataResponseFromJSON","AccountDataResponseFromJSONTyped","ignoreDiscriminator","AccountDataResponseToJSON","balance","locked","unlock_height","nonce","balance_proof","nonce_proof","AddressAssetsListResponseFromJSON","AddressAssetsListResponseFromJSONTyped","AddressAssetsListResponseToJSON","limit","offset","total","results","AddressBalanceResponseFromJSON","AddressBalanceResponseFromJSONTyped","StxBalanceFromJSON","AddressTokenOfferingLockedFromJSON","AddressBalanceResponseToJSON","StxBalanceToJSON","stx","fungible_tokens","non_fungible_tokens","AddressTokenOfferingLockedToJSON","token_offering_locked","AddressNftListResponseFromJSON","AddressNftListResponseFromJSONTyped","NftEventFromJSON","AddressNftListResponseToJSON","nft_events","NftEventToJSON","AddressNftListResponseValueFromJSON","AddressNftListResponseValueFromJSONTyped","AddressNftListResponseValueToJSON","hex","repr","AddressNoncesFromJSON","AddressNoncesFromJSONTyped","AddressNoncesToJSON","last_mempool_tx_nonce","last_executed_tx_nonce","possible_next_nonce","detected_missing_nonces","AddressStxInboundListResponseFromJSON","AddressStxInboundListResponseFromJSONTyped","InboundStxTransferFromJSON","AddressStxInboundListResponseToJSON","InboundStxTransferToJSON","AddressTokenOfferingLockedFromJSONTyped","AddressUnlockScheduleFromJSON","total_locked","total_unlocked","unlock_schedule","AddressUnlockScheduleToJSON","AddressTransactionWithTransfersFromJSON","AddressTransactionWithTransfersFromJSONTyped","AddressTransactionWithTransfersStxTransfersFromJSON","AddressTransactionWithTransfersFtTransfersFromJSON","AddressTransactionWithTransfersNftTransfersFromJSON","AddressTransactionWithTransfersToJSON","tx","stx_sent","stx_received","stx_transfers","AddressTransactionWithTransfersStxTransfersToJSON","ft_transfers","AddressTransactionWithTransfersFtTransfersToJSON","nft_transfers","AddressTransactionWithTransfersNftTransfersToJSON","AddressTransactionWithTransfersFtTransfersFromJSONTyped","asset_identifier","amount","sender","recipient","AddressTransactionWithTransfersNftTransfersFromJSONTyped","AddressTransactionWithTransfersValueFromJSON","AddressTransactionWithTransfersValueToJSON","AddressTransactionWithTransfersStxTransfersFromJSONTyped","AddressTransactionWithTransfersValueFromJSONTyped","AddressTransactionsListResponseFromJSON","AddressTransactionsListResponseFromJSONTyped","AddressTransactionsListResponseToJSON","AddressTransactionsWithTransfersListResponseFromJSON","AddressTransactionsWithTransfersListResponseFromJSONTyped","AddressTransactionsWithTransfersListResponseToJSON","AddressUnlockScheduleFromJSONTyped","block_height","BlockFromJSON","BlockFromJSONTyped","BlockToJSON","canonical","height","hash","index_block_hash","parent_block_hash","burn_block_time","burn_block_time_iso","burn_block_hash","burn_block_height","miner_txid","parent_microblock_hash","parent_microblock_sequence","txs","microblocks_accepted","microblocks_streamed","execution_cost_read_count","execution_cost_read_length","execution_cost_runtime","execution_cost_write_count","execution_cost_write_length","microblock_tx_count","BlockListResponseFromJSON","BlockListResponseFromJSONTyped","BlockListResponseToJSON","BnsErrorFromJSON","BnsErrorFromJSONTyped","BnsErrorToJSON","error","BnsGetAllNamespacesResponseFromJSON","BnsGetAllNamespacesResponseFromJSONTyped","BnsGetAllNamespacesResponseToJSON","namespaces","BnsGetNameInfoResponseFromJSON","BnsGetNameInfoResponseFromJSONTyped","BnsGetNameInfoResponseToJSON","address","blockchain","expire_block","grace_period","last_txid","resolver","zonefile","zonefile_hash","BnsGetNamePriceResponseFromJSON","BnsGetNamePriceResponseFromJSONTyped","BnsGetNamePriceResponseToJSON","units","BnsGetNamespacePriceResponseFromJSON","BnsGetNamespacePriceResponseFromJSONTyped","BnsGetNamespacePriceResponseToJSON","BnsNamesOwnByAddressResponseFromJSON","BnsNamesOwnByAddressResponseFromJSONTyped","BnsNamesOwnByAddressResponseToJSON","names","BurnchainRewardFromJSON","BurnchainRewardFromJSONTyped","BurnchainRewardToJSON","burn_amount","reward_recipient","reward_amount","reward_index","BurnchainRewardListResponseFromJSON","BurnchainRewardListResponseFromJSONTyped","BurnchainRewardListResponseToJSON","BurnchainRewardSlotHolderFromJSON","BurnchainRewardSlotHolderFromJSONTyped","BurnchainRewardSlotHolderToJSON","slot_index","BurnchainRewardSlotHolderListResponseFromJSON","BurnchainRewardSlotHolderListResponseFromJSONTyped","BurnchainRewardSlotHolderListResponseToJSON","BurnchainRewardsTotalFromJSON","BurnchainRewardsTotalFromJSONTyped","BurnchainRewardsTotalToJSON","ChainTipFromJSON","ChainTipFromJSONTyped","ChainTipToJSON","block_hash","microblock_hash","microblock_sequence","ContractInterfaceResponseFromJSON","ContractInterfaceResponseFromJSONTyped","ContractInterfaceResponseToJSON","functions","variables","maps","ContractListResponseFromJSON","ContractListResponseFromJSONTyped","SmartContractFromJSON","ContractListResponseToJSON","SmartContractToJSON","ContractSourceResponseFromJSON","ContractSourceResponseFromJSONTyped","ContractSourceResponseToJSON","source","publish_height","proof","CoreNodeInfoResponseFromJSON","CoreNodeInfoResponseFromJSONTyped","CoreNodeInfoResponseToJSON","peer_version","pox_consensus","stable_pox_consensus","stable_burn_block_height","server_version","network_id","parent_network_id","stacks_tip_height","stacks_tip","stacks_tip_consensus_hash","unanchored_tip","exit_at_block_height","CoreNodePoxResponseFromJSON","CoreNodePoxResponseFromJSONTyped","CoreNodePoxResponseToJSON","contract_id","first_burnchain_block_height","min_amount_ustx","registration_window_length","rejection_fraction","reward_cycle_id","reward_cycle_length","rejection_votes_left_required","total_liquid_supply_ustx","FeeRateFromJSON","FeeRateFromJSONTyped","FeeRateToJSON","fee_rate","FeeRateRequestFromJSON","FeeRateRequestFromJSONTyped","FeeRateRequestToJSON","transaction","FungibleTokenMetadataFromJSON","FungibleTokenMetadataFromJSONTyped","FungibleTokenMetadataToJSON","token_uri","description","image_uri","image_canonical_uri","symbol","decimals","tx_id","sender_address","FungibleTokensMetadataListFromJSON","FungibleTokensMetadataListFromJSONTyped","FungibleTokensMetadataListToJSON","GetRawTransactionResultFromJSON","GetRawTransactionResultFromJSONTyped","GetRawTransactionResultToJSON","raw_tx","GetStxSupplyLegacyFormatResponseFromJSON","GetStxSupplyLegacyFormatResponseFromJSONTyped","GetStxSupplyLegacyFormatResponseToJSON","unlockedPercent","totalStacks","totalStacksFormatted","unlockedSupply","unlockedSupplyFormatted","blockHeight","GetStxSupplyResponseFromJSON","GetStxSupplyResponseFromJSONTyped","GetStxSupplyResponseToJSON","unlocked_percent","total_stx","unlocked_stx","InboundStxTransferTransferTypeEnum","InboundStxTransferFromJSONTyped","memo","transfer_type","tx_index","InlineObjectFromJSON","InlineObjectFromJSONTyped","InlineObjectToJSON","stacking","InlineObject1FromJSON","InlineObject1FromJSONTyped","InlineObject1ToJSON","MapEntryResponseFromJSON","MapEntryResponseFromJSONTyped","MapEntryResponseToJSON","MempoolTransactionListResponseFromJSON","MempoolTransactionListResponseFromJSONTyped","MempoolTransactionListResponseToJSON","MempoolTransactionStatsResponseFromJSON","MempoolTransactionStatsResponseFromJSONTyped","MempoolTransactionStatsResponseTxTypeCountsFromJSON","MempoolTransactionStatsResponseTxSimpleFeeAveragesFromJSON","MempoolTransactionStatsResponseTxAgesFromJSON","MempoolTransactionStatsResponseTxByteSizesFromJSON","MempoolTransactionStatsResponseToJSON","MempoolTransactionStatsResponseTxTypeCountsToJSON","tx_type_counts","MempoolTransactionStatsResponseTxSimpleFeeAveragesToJSON","tx_simple_fee_averages","MempoolTransactionStatsResponseTxAgesToJSON","tx_ages","MempoolTransactionStatsResponseTxByteSizesToJSON","tx_byte_sizes","MempoolTransactionStatsResponseTxAgesFromJSONTyped","MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferFromJSON","MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferToJSON","token_transfer","smart_contract","contract_call","poison_microblock","MempoolTransactionStatsResponseTxByteSizesFromJSONTyped","MempoolTransactionStatsResponseTxSimpleFeeAveragesFromJSONTyped","MempoolTransactionStatsResponseTxSimpleFeeAveragesTokenTransferFromJSONTyped","p25","p50","p75","p95","MempoolTransactionStatsResponseTxTypeCountsFromJSONTyped","MicroblockFromJSON","MicroblockFromJSONTyped","MicroblockToJSON","microblock_canonical","microblock_parent_hash","parent_block_height","parent_burn_block_hash","parent_burn_block_time","parent_burn_block_time_iso","parent_burn_block_height","MicroblockListResponseFromJSON","MicroblockListResponseFromJSONTyped","MicroblockListResponseToJSON","NetworkBlockTimeResponseFromJSON","NetworkBlockTimeResponseFromJSONTyped","NetworkBlockTimeResponseToJSON","target_block_time","NetworkBlockTimesResponseFromJSON","NetworkBlockTimesResponseFromJSONTyped","TargetBlockTimeFromJSON","NetworkBlockTimesResponseToJSON","TargetBlockTimeToJSON","mainnet","testnet","NetworkIdentifierFromJSON","NetworkIdentifierFromJSONTyped","RosettaNetworkListResponseSubNetworkIdentifierFromJSON","NetworkIdentifierToJSON","network","RosettaNetworkListResponseSubNetworkIdentifierToJSON","sub_network_identifier","NftEventFromJSONTyped","asset_event_type","event_index","NonFungibleTokenHistoryEventListFromJSON","NonFungibleTokenHistoryEventListFromJSONTyped","NonFungibleTokenHistoryEventListToJSON","NonFungibleTokenHoldingsListFromJSON","NonFungibleTokenHoldingsListFromJSONTyped","NonFungibleTokenHoldingsListToJSON","NonFungibleTokenMetadataFromJSON","NonFungibleTokenMetadataFromJSONTyped","NonFungibleTokenMetadataToJSON","NonFungibleTokenMintListFromJSON","NonFungibleTokenMintListFromJSONTyped","NonFungibleTokenMintListToJSON","NonFungibleTokensMetadataListFromJSON","NonFungibleTokensMetadataListFromJSONTyped","NonFungibleTokensMetadataListToJSON","OtherTransactionIdentifierFromJSON","OtherTransactionIdentifierFromJSONTyped","OtherTransactionIdentifierToJSON","PostCoreNodeTransactionsErrorFromJSON","PostCoreNodeTransactionsErrorFromJSONTyped","PostCoreNodeTransactionsErrorToJSON","reason","reason_data","txid","ReadOnlyFunctionArgsFromJSON","ReadOnlyFunctionArgsFromJSONTyped","ReadOnlyFunctionArgsToJSON","arguments","ReadOnlyFunctionSuccessResponseFromJSON","ReadOnlyFunctionSuccessResponseFromJSONTyped","ReadOnlyFunctionSuccessResponseToJSON","okay","cause","RosettaAccountFromJSON","RosettaAccountFromJSONTyped","RosettaSubAccountFromJSON","RosettaAccountToJSON","RosettaSubAccountToJSON","sub_account","metadata","RosettaAccountBalanceRequestFromJSON","RosettaAccountBalanceRequestFromJSONTyped","RosettaAccountBalanceRequestToJSON","network_identifier","account_identifier","block_identifier","RosettaAccountBalanceResponseFromJSON","RosettaAccountBalanceResponseFromJSONTyped","RosettaAmountFromJSON","RosettaCoinFromJSON","RosettaAccountBalanceResponseMetadataFromJSON","RosettaAccountBalanceResponseToJSON","balances","RosettaAmountToJSON","coins","RosettaCoinToJSON","RosettaAccountBalanceResponseMetadataToJSON","RosettaAccountBalanceResponseCoinIdentifierFromJSON","RosettaAccountBalanceResponseCoinIdentifierFromJSONTyped","RosettaAccountBalanceResponseCoinIdentifierToJSON","identifier","RosettaAccountBalanceResponseMetadataFromJSONTyped","sequence_number","RosettaAccountIdentifierFromJSON","RosettaAccountIdentifierFromJSONTyped","RosettaAccountIdentifierToJSON","RosettaAmountFromJSONTyped","RosettaCurrencyFromJSON","RosettaCurrencyToJSON","currency","RosettaBlockFromJSON","RosettaBlockFromJSONTyped","RosettaParentBlockIdentifierFromJSON","RosettaTransactionFromJSON","RosettaBlockMetadata1FromJSON","RosettaBlockToJSON","RosettaParentBlockIdentifierToJSON","parent_block_identifier","timestamp","transactions","RosettaTransactionToJSON","RosettaBlockMetadata1ToJSON","RosettaBlockMetadataFromJSON","RosettaBlockMetadataFromJSONTyped","RosettaBlockMetadataToJSON","size","lockTime","RosettaBlockMetadata1FromJSONTyped","transactions_root","difficulty","RosettaBlockRequestFromJSON","RosettaBlockRequestFromJSONTyped","RosettaBlockRequestToJSON","RosettaBlockResponseFromJSON","RosettaBlockResponseFromJSONTyped","RosettaBlockResponseToJSON","block","other_transactions","RosettaBlockTransactionRequestFromJSON","RosettaBlockTransactionRequestFromJSONTyped","TransactionIdentifierFromJSON","RosettaBlockTransactionRequestToJSON","TransactionIdentifierToJSON","transaction_identifier","RosettaBlockTransactionResponseFromJSON","RosettaBlockTransactionResponseFromJSONTyped","RosettaBlockTransactionResponseToJSON","RosettaCoinFromJSONTyped","coin_identifier","RosettaCoinChangeCoinActionEnum","RosettaCoinChangeFromJSON","RosettaCoinChangeFromJSONTyped","RosettaCoinChangeToJSON","coin_action","RosettaConstructionCombineRequestFromJSON","RosettaConstructionCombineRequestFromJSONTyped","RosettaSignatureFromJSON","RosettaConstructionCombineRequestToJSON","unsigned_transaction","signatures","RosettaSignatureToJSON","RosettaConstructionCombineResponseFromJSON","RosettaConstructionCombineResponseFromJSONTyped","RosettaConstructionCombineResponseToJSON","signed_transaction","RosettaConstructionDeriveRequestFromJSON","RosettaConstructionDeriveRequestFromJSONTyped","RosettaPublicKeyFromJSON","RosettaConstructionDeriveRequestToJSON","RosettaPublicKeyToJSON","public_key","RosettaConstructionDeriveResponseFromJSON","RosettaConstructionDeriveResponseFromJSONTyped","RosettaConstructionDeriveResponseToJSON","RosettaConstructionHashRequestFromJSON","RosettaConstructionHashRequestFromJSONTyped","RosettaConstructionHashRequestToJSON","RosettaConstructionHashResponseFromJSON","RosettaConstructionHashResponseFromJSONTyped","RosettaConstructionHashResponseToJSON","RosettaConstructionMetadataRequestFromJSON","RosettaConstructionMetadataRequestFromJSONTyped","RosettaOptionsFromJSON","RosettaConstructionMetadataRequestToJSON","RosettaOptionsToJSON","options","public_keys","RosettaConstructionMetadataResponseFromJSON","RosettaConstructionMetadataResponseFromJSONTyped","RosettaConstructionMetadataResponseMetadataFromJSON","RosettaConstructionMetadataResponseToJSON","RosettaConstructionMetadataResponseMetadataToJSON","suggested_fee","RosettaConstructionMetadataResponseMetadataFromJSONTyped","account_sequence","recent_block_hash","RosettaConstructionParseRequestFromJSON","RosettaConstructionParseRequestFromJSONTyped","RosettaConstructionParseRequestToJSON","signed","RosettaConstructionParseResponseFromJSON","RosettaConstructionParseResponseFromJSONTyped","RosettaOperationFromJSON","RosettaConstructionParseResponseToJSON","operations","RosettaOperationToJSON","signers","account_identifier_signers","RosettaConstructionPayloadResponseFromJSON","RosettaConstructionPayloadResponseFromJSONTyped","SigningPayloadFromJSON","RosettaConstructionPayloadResponseToJSON","payloads","SigningPayloadToJSON","RosettaConstructionPayloadsRequestFromJSON","RosettaConstructionPayloadsRequestFromJSONTyped","RosettaConstructionPayloadsRequestToJSON","RosettaConstructionPreprocessRequestFromJSON","RosettaConstructionPreprocessRequestFromJSONTyped","RosettaMaxFeeAmountFromJSON","RosettaConstructionPreprocessRequestToJSON","max_fee","RosettaMaxFeeAmountToJSON","suggested_fee_multiplier","RosettaConstructionPreprocessResponseFromJSON","RosettaConstructionPreprocessResponseFromJSONTyped","RosettaConstructionPreprocessResponseToJSON","required_public_keys","RosettaConstructionSubmitRequestFromJSON","RosettaConstructionSubmitRequestFromJSONTyped","RosettaConstructionSubmitRequestToJSON","RosettaConstructionSubmitResponseFromJSON","RosettaConstructionSubmitResponseFromJSONTyped","RosettaConstructionSubmitResponseToJSON","RosettaCurrencyFromJSONTyped","RosettaErrorFromJSON","RosettaErrorFromJSONTyped","RosettaErrorDetailsFromJSON","RosettaErrorToJSON","code","message","retriable","RosettaErrorDetailsToJSON","details","RosettaErrorDetailsFromJSONTyped","RosettaErrorNoDetailsFromJSON","RosettaErrorNoDetailsFromJSONTyped","RosettaErrorNoDetailsToJSON","RosettaGenesisBlockIdentifierFromJSON","RosettaGenesisBlockIdentifierFromJSONTyped","RosettaGenesisBlockIdentifierToJSON","index","RosettaMaxFeeAmountFromJSONTyped","RosettaMempoolRequestFromJSON","RosettaMempoolRequestFromJSONTyped","RosettaMempoolRequestToJSON","RosettaMempoolResponseFromJSON","RosettaMempoolResponseFromJSONTyped","RosettaMempoolResponseToJSON","transaction_identifiers","RosettaMempoolTransactionRequestFromJSON","RosettaMempoolTransactionRequestFromJSONTyped","RosettaMempoolTransactionRequestToJSON","RosettaMempoolTransactionResponseFromJSON","RosettaMempoolTransactionResponseFromJSONTyped","RosettaMempoolTransactionResponseToJSON","RosettaNetworkListResponseFromJSON","RosettaNetworkListResponseFromJSONTyped","RosettaNetworkListResponseToJSON","network_identifiers","RosettaNetworkListResponseSubNetworkIdentifierFromJSONTyped","RosettaNetworkListResponseSubNetworkIdentifierMetadataFromJSON","RosettaNetworkListResponseSubNetworkIdentifierMetadataToJSON","RosettaNetworkListResponseSubNetworkIdentifierMetadataFromJSONTyped","producer","RosettaNetworkOptionsResponseFromJSON","RosettaNetworkOptionsResponseFromJSONTyped","RosettaNetworkOptionsResponseVersionFromJSON","RosettaNetworkOptionsResponseAllowFromJSON","RosettaNetworkOptionsResponseToJSON","RosettaNetworkOptionsResponseVersionToJSON","version","RosettaNetworkOptionsResponseAllowToJSON","allow","RosettaNetworkOptionsResponseAllowFromJSONTyped","RosettaOperationStatusFromJSON","operation_statuses","RosettaOperationStatusToJSON","operation_types","errors","historical_balance_lookup","RosettaNetworkOptionsResponseVersionFromJSONTyped","rosetta_version","node_version","middleware_version","RosettaNetworkStatusResponseFromJSON","RosettaNetworkStatusResponseFromJSONTyped","RosettaOldestBlockIdentifierFromJSON","RosettaSyncStatusFromJSON","RosettaPeersFromJSON","RosettaNetworkStatusResponseToJSON","current_block_identifier","current_block_timestamp","genesis_block_identifier","RosettaOldestBlockIdentifierToJSON","oldest_block_identifier","RosettaSyncStatusToJSON","sync_status","peers","RosettaPeersToJSON","RosettaOldestBlockIdentifierFromJSONTyped","RosettaOperationFromJSONTyped","RosettaOperationIdentifierFromJSON","RosettaRelatedOperationFromJSON","RosettaOperationIdentifierToJSON","operation_identifier","related_operations","RosettaRelatedOperationToJSON","type","account","coin_change","RosettaOperationIdentifierFromJSONTyped","network_index","RosettaOperationStatusFromJSONTyped","successful","RosettaOptionsFromJSONTyped","token_transfer_recipient_address","gas_limit","gas_price","fee","number_of_cycles","contract_address","contract_name","delegate_to","pox_addr","RosettaOptionsRequestFromJSON","RosettaOptionsRequestFromJSONTyped","RosettaOptionsRequestToJSON","RosettaParentBlockIdentifierFromJSONTyped","RosettaPeersFromJSONTyped","peer_id","RosettaPublicKeyCurveTypeEnum","RosettaPublicKeyFromJSONTyped","hex_bytes","curve_type","RosettaRelatedOperationFromJSONTyped","RosettaSignatureSignatureTypeEnum","RosettaSignatureFromJSONTyped","signing_payload","signature_type","RosettaStatusRequestFromJSON","RosettaStatusRequestFromJSONTyped","RosettaStatusRequestToJSON","RosettaSubAccountFromJSONTyped","RosettaSyncStatusFromJSONTyped","current_index","target_index","stage","synced","RosettaTransactionFromJSONTyped","RunFaucetResponseFromJSON","RunFaucetResponseFromJSONTyped","RunFaucetResponseToJSON","success","txId","txRaw","ServerStatusResponseFromJSON","ServerStatusResponseFromJSONTyped","ServerStatusResponseToJSON","pox_v1_unlock_height","chain_tip","SigningPayloadSignatureTypeEnum","SigningPayloadFromJSONTyped","SmartContractFromJSONTyped","source_code","abi","StxBalanceFromJSONTyped","total_sent","total_received","total_fees_sent","total_miner_rewards_received","lock_tx_id","lock_height","burnchain_lock_height","burnchain_unlock_height","TargetBlockTimeFromJSONTyped","TransactionEventsResponseFromJSON","TransactionEventsResponseFromJSONTyped","TransactionEventsResponseToJSON","TransactionFeeEstimateRequestFromJSON","TransactionFeeEstimateRequestFromJSONTyped","TransactionFeeEstimateRequestToJSON","transaction_payload","estimated_len","TransactionFeeEstimateResponseFromJSON","TransactionFeeEstimateResponseFromJSONTyped","TransactionFeeEstimateResponseEstimatedCostFromJSON","TransactionFeeEstimateResponseEstimationsFromJSON","TransactionFeeEstimateResponseToJSON","estimated_cost_scalar","cost_scalar_change_by_byte","TransactionFeeEstimateResponseEstimatedCostToJSON","estimated_cost","estimations","TransactionFeeEstimateResponseEstimationsToJSON","TransactionFeeEstimateResponseEstimatedCostFromJSONTyped","read_count","read_length","runtime","write_count","write_length","TransactionFeeEstimateResponseEstimationsFromJSONTyped","TransactionIdentifierFromJSONTyped","TransactionResultsFromJSON","TransactionResultsFromJSONTyped","TransactionResultsToJSON","UnanchoredTransactionListResponseFromJSON","UnanchoredTransactionListResponseFromJSONTyped","UnanchoredTransactionListResponseToJSON","AccountsApi","getAccountAssetsRaw","requestParameters","principal","queryParameters","unanchored","untilBlock","headerParameters","getAccountAssets","getAccountBalanceRaw","getAccountBalance","getAccountInboundRaw","getAccountInbound","getAccountInfoRaw","tip","getAccountInfo","getAccountNftRaw","getAccountNft","getAccountNoncesRaw","blockHash","getAccountNonces","getAccountStxBalanceRaw","getAccountStxBalance","getAccountTransactionsRaw","getAccountTransactions","getAccountTransactionsWithTransfersRaw","getAccountTransactionsWithTransfers","getSingleTransactionWithTransfersRaw","getSingleTransactionWithTransfers","BlocksApi","getBlockByBurnBlockHashRaw","burnBlockHash","getBlockByBurnBlockHash","getBlockByBurnBlockHeightRaw","burnBlockHeight","getBlockByBurnBlockHeight","getBlockByHashRaw","getBlockByHash","getBlockByHeightRaw","getBlockByHeight","getBlockListRaw","getBlockList","FaucetsApi","runFaucetBtcRaw","inlineObject1","runFaucetBtc","runFaucetStxRaw","inlineObject","runFaucetStx","FeesApi","fetchFeeRateRaw","feeRateRequest","fetchFeeRate","getFeeTransferRaw","getFeeTransfer","postFeeTransactionRaw","transactionFeeEstimateRequest","postFeeTransaction","FungibleTokensApi","getContractFtMetadataRaw","contractId","getContractFtMetadata","getFtMetadataListRaw","getFtMetadataList","InfoApi","getCoreApiInfoRaw","getCoreApiInfo","getNetworkBlockTimeByNetworkRaw","getNetworkBlockTimeByNetwork","getNetworkBlockTimesRaw","getNetworkBlockTimes","getPoxInfoRaw","getPoxInfo","getStatusRaw","getStatus","getStxSupplyRaw","getStxSupply","getStxSupplyCirculatingPlainRaw","getStxSupplyCirculatingPlain","getStxSupplyTotalSupplyPlainRaw","getStxSupplyTotalSupplyPlain","getTotalStxSupplyLegacyFormatRaw","getTotalStxSupplyLegacyFormat","GetNetworkBlockTimeByNetworkNetworkEnum","MicroblocksApi","getMicroblockByHashRaw","getMicroblockByHash","getMicroblockListRaw","getMicroblockList","getUnanchoredTxsRaw","getUnanchoredTxs","NamesApi","fetchSubdomainsListForNameRaw","fetchSubdomainsListForName","fetchZoneFileRaw","fetchZoneFile","getAllNamesRaw","page","getAllNames","getAllNamespacesRaw","getAllNamespaces","getHistoricalZoneFileRaw","zoneFileHash","getHistoricalZoneFile","getNameInfoRaw","getNameInfo","getNamePriceRaw","getNamePrice","getNamesOwnedByAddressRaw","getNamesOwnedByAddress","getNamespaceNamesRaw","tld","getNamespaceNames","getNamespacePriceRaw","getNamespacePrice","NonFungibleTokensApi","getContractNftMetadataRaw","getContractNftMetadata","getNftHistoryRaw","assetIdentifier","txMetadata","getNftHistory","getNftHoldingsRaw","assetIdentifiers","getNftHoldings","getNftMetadataListRaw","getNftMetadataList","getNftMintsRaw","getNftMints","RosettaApi","rosettaAccountBalanceRaw","rosettaAccountBalanceRequest","rosettaAccountBalance","rosettaBlockRaw","rosettaBlockRequest","rosettaBlock","rosettaBlockTransactionRaw","rosettaBlockTransactionRequest","rosettaBlockTransaction","rosettaConstructionCombineRaw","rosettaConstructionCombineRequest","rosettaConstructionCombine","rosettaConstructionDeriveRaw","rosettaConstructionDeriveRequest","rosettaConstructionDerive","rosettaConstructionHashRaw","rosettaConstructionHashRequest","rosettaConstructionHash","rosettaConstructionMetadataRaw","rosettaConstructionMetadataRequest","rosettaConstructionMetadata","rosettaConstructionParseRaw","rosettaConstructionParseRequest","rosettaConstructionParse","rosettaConstructionPayloadsRaw","rosettaConstructionPayloadsRequest","rosettaConstructionPayloads","rosettaConstructionPreprocessRaw","rosettaConstructionPreprocessRequest","rosettaConstructionPreprocess","rosettaConstructionSubmitRaw","rosettaConstructionSubmitRequest","rosettaConstructionSubmit","rosettaMempoolRaw","rosettaMempoolRequest","rosettaMempool","rosettaMempoolTransactionRaw","rosettaMempoolTransactionRequest","rosettaMempoolTransaction","rosettaNetworkListRaw","rosettaNetworkList","rosettaNetworkOptionsRaw","rosettaOptionsRequest","rosettaNetworkOptions","rosettaNetworkStatusRaw","rosettaStatusRequest","rosettaNetworkStatus","SearchApi","searchByIdRaw","id","includeMetadata","searchById","SmartContractsApi","callReadOnlyFunctionRaw","contractAddress","contractName","functionName","readOnlyFunctionArgs","callReadOnlyFunction","getContractByIdRaw","getContractById","getContractDataMapEntryRaw","mapName","getContractDataMapEntry","getContractEventsByIdRaw","getContractEventsById","getContractInterfaceRaw","getContractInterface","getContractSourceRaw","getContractSource","getContractsByTraitRaw","traitAbi","getContractsByTrait","StackingRewardsApi","getBurnchainRewardListRaw","getBurnchainRewardList","getBurnchainRewardListByAddressRaw","getBurnchainRewardListByAddress","getBurnchainRewardSlotHoldersRaw","getBurnchainRewardSlotHolders","getBurnchainRewardSlotHoldersByAddressRaw","getBurnchainRewardSlotHoldersByAddress","getBurnchainRewardsTotalByAddressRaw","getBurnchainRewardsTotalByAddress","TransactionsApi","getAddressMempoolTransactionsRaw","getAddressMempoolTransactions","getDroppedMempoolTransactionListRaw","getDroppedMempoolTransactionList","getFilteredEventsRaw","getFilteredEvents","getMempoolTransactionListRaw","senderAddress","recipientAddress","getMempoolTransactionList","getMempoolTransactionStatsRaw","getMempoolTransactionStats","getRawTransactionByIdRaw","getRawTransactionById","getTransactionByIdRaw","eventOffset","eventLimit","getTransactionById","getTransactionListRaw","getTransactionList","getTransactionsByBlockHashRaw","getTransactionsByBlockHash","getTransactionsByBlockHeightRaw","getTransactionsByBlockHeight","getTxListDetailsRaw","getTxListDetails","postCoreNodeTransactionsRaw","postCoreNodeTransactions","GetFilteredEventsTypeEnum","GetTransactionListTypeEnum","connectWebSocketClient","StacksApiWebSocketClient","connect","urlObj","URL","_error","protocol","pathname","Promise","resolve","webSocket","createWebSocket","toString","onopen","onerror","idCursor","pendingRequests","Map","eventEmitter","EventEmitter","addEventListener","event","parsed","JsonRpcLite","rpcObjects","isArray","forEach","obj","handleNotification","payload","req","get","emit","rpcCall","rpcReq","set","send","serialize","subscribeBlocks","update","listener","addListener","unsubscribe","removeListener","subscribeMicroblocks","subscribeMempool","subscribeTxUpdates","subscribed","subscribeAddressTransactions","subscribeAddressBalanceUpdates","subscribeNftEventUpdates","subscribeNftAssetEventUpdates","subscribeNftCollectionEventUpdates","WebSocket","global","window","self","require","hasCORS","withNativeBlob","withNativeArrayBuffer","isView","lookup","i","decode","Emitter","encode","yeast","XMLHttpRequest","Socket","Backoff","Engine","getWsUrl","host","TypeError","console","StacksApiSocketClient","socket","subscriptions","io","href","from","Set","handleSubscription","topic","subscribe","opts","split","add","unsubscribeBlocks","unsubscribeMicroblocks","unsubscribeMempool","unsubscribeAddressTransactions","subscribeAddressStxBalance","unsubscribeAddressStxBalance","subscribeTransaction","unsubscribeTransaction","subscribeNftEvent","unsubscribeNftEvent","subscribeNftAssetEvent","unsubscribeNftAssetEvent","subscribeNftCollectionEvent","unsubscribeNftCollectionEvent","logEvents","on","log","warn","microblock"],"mappings":"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"}