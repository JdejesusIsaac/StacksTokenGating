/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a>
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { FungibleTokenMetadata, FungibleTokensMetadataList } from '../models';
export interface GetContractFtMetadataRequest {
    contractId: string;
}
export interface GetFtMetadataListRequest {
    limit?: number;
    offset?: number;
}
/**
 * FungibleTokensApi - interface
 *
 * @export
 * @interface FungibleTokensApiInterface
 */
export interface FungibleTokensApiInterface {
    /**
     * Retrieves the metadata for fungible tokens for a given contract id
     * @summary Fungible tokens metadata for contract id
     * @param {string} contractId token\&#39;s contract id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FungibleTokensApiInterface
     */
    getContractFtMetadataRaw(requestParameters: GetContractFtMetadataRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<FungibleTokenMetadata>>;
    /**
     * Retrieves the metadata for fungible tokens for a given contract id
     * Fungible tokens metadata for contract id
     */
    getContractFtMetadata(requestParameters: GetContractFtMetadataRequest, initOverrides?: RequestInit): Promise<FungibleTokenMetadata>;
    /**
     * Retrieves list of fungible tokens with their metadata. More information on Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#fungible-tokens).
     * @summary Fungible tokens metadata list
     * @param {number} [limit] max number of tokens to fetch.
     * @param {number} [offset] index of first tokens to fetch
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FungibleTokensApiInterface
     */
    getFtMetadataListRaw(requestParameters: GetFtMetadataListRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<FungibleTokensMetadataList>>;
    /**
     * Retrieves list of fungible tokens with their metadata. More information on Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#fungible-tokens).
     * Fungible tokens metadata list
     */
    getFtMetadataList(requestParameters: GetFtMetadataListRequest, initOverrides?: RequestInit): Promise<FungibleTokensMetadataList>;
}
/**
 *
 */
export declare class FungibleTokensApi extends runtime.BaseAPI implements FungibleTokensApiInterface {
    /**
     * Retrieves the metadata for fungible tokens for a given contract id
     * Fungible tokens metadata for contract id
     */
    getContractFtMetadataRaw(requestParameters: GetContractFtMetadataRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<FungibleTokenMetadata>>;
    /**
     * Retrieves the metadata for fungible tokens for a given contract id
     * Fungible tokens metadata for contract id
     */
    getContractFtMetadata(requestParameters: GetContractFtMetadataRequest, initOverrides?: RequestInit): Promise<FungibleTokenMetadata>;
    /**
     * Retrieves list of fungible tokens with their metadata. More information on Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#fungible-tokens).
     * Fungible tokens metadata list
     */
    getFtMetadataListRaw(requestParameters: GetFtMetadataListRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<FungibleTokensMetadataList>>;
    /**
     * Retrieves list of fungible tokens with their metadata. More information on Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#fungible-tokens).
     * Fungible tokens metadata list
     */
    getFtMetadataList(requestParameters: GetFtMetadataListRequest, initOverrides?: RequestInit): Promise<FungibleTokensMetadataList>;
}
