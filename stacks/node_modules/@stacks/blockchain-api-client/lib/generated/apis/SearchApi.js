"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a>
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SearchApi = void 0;
const runtime = require("../runtime");
/**
 *
 */
class SearchApi extends runtime.BaseAPI {
    /**
     * Search blocks, transactions, contracts, or accounts by hash/ID
     * Search
     */
    async searchByIdRaw(requestParameters, initOverrides) {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling searchById.');
        }
        const queryParameters = {};
        if (requestParameters.includeMetadata !== undefined) {
            queryParameters['include_metadata'] = requestParameters.includeMetadata;
        }
        const headerParameters = {};
        const response = await this.request({
            path: `/extended/v1/search/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response);
    }
    /**
     * Search blocks, transactions, contracts, or accounts by hash/ID
     * Search
     */
    async searchById(requestParameters, initOverrides) {
        const response = await this.searchByIdRaw(requestParameters, initOverrides);
        return await response.value();
    }
}
exports.SearchApi = SearchApi;
//# sourceMappingURL=SearchApi.js.map