/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a>
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Reward slot holder on the burnchain
 * @export
 * @interface BurnchainRewardSlotHolder
 */
export interface BurnchainRewardSlotHolder {
    /**
     * Set to `true` if block corresponds to the canonical burchchain tip
     * @type {boolean}
     * @memberof BurnchainRewardSlotHolder
     */
    canonical: boolean;
    /**
     * The hash representing the burnchain block
     * @type {string}
     * @memberof BurnchainRewardSlotHolder
     */
    burn_block_hash: string;
    /**
     * Height of the burnchain block
     * @type {number}
     * @memberof BurnchainRewardSlotHolder
     */
    burn_block_height: number;
    /**
     * The recipient address that validly received PoX commitments, in the format native to the burnchain (e.g. B58 encoded for Bitcoin)
     * @type {string}
     * @memberof BurnchainRewardSlotHolder
     */
    address: string;
    /**
     * The index position of the reward entry, useful for ordering when there's more than one slot per burnchain block
     * @type {number}
     * @memberof BurnchainRewardSlotHolder
     */
    slot_index: number;
}
export declare function BurnchainRewardSlotHolderFromJSON(json: any): BurnchainRewardSlotHolder;
export declare function BurnchainRewardSlotHolderFromJSONTyped(json: any, ignoreDiscriminator: boolean): BurnchainRewardSlotHolder;
export declare function BurnchainRewardSlotHolderToJSON(value?: BurnchainRewardSlotHolder | null): any;
