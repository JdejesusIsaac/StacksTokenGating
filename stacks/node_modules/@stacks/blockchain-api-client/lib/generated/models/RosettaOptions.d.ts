/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a>
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * The options that will be sent directly to /construction/metadata by the caller.
 * @export
 * @interface RosettaOptions
 */
export interface RosettaOptions {
    /**
     * sender's address
     * @type {string}
     * @memberof RosettaOptions
     */
    sender_address?: string;
    /**
     * Type of operation e.g transfer
     * @type {string}
     * @memberof RosettaOptions
     */
    type?: string;
    /**
     * This value indicates the state of the operations
     * @type {string}
     * @memberof RosettaOptions
     */
    status?: string;
    /**
     * Recipient's address
     * @type {string}
     * @memberof RosettaOptions
     */
    token_transfer_recipient_address?: string;
    /**
     * Amount to be transfered.
     * @type {string}
     * @memberof RosettaOptions
     */
    amount?: string;
    /**
     * Currency symbol e.g STX
     * @type {string}
     * @memberof RosettaOptions
     */
    symbol?: string;
    /**
     * Number of decimal places
     * @type {number}
     * @memberof RosettaOptions
     */
    decimals?: number;
    /**
     * Maximum price a user is willing to pay.
     * @type {number}
     * @memberof RosettaOptions
     */
    gas_limit?: number;
    /**
     * Cost necessary to perform a transaction on the network
     * @type {number}
     * @memberof RosettaOptions
     */
    gas_price?: number;
    /**
     *  A suggested fee multiplier to indicate that the suggested fee should be scaled. This may be used to set higher fees for urgent transactions or to pay lower fees when there is less urgency.
     * @type {number}
     * @memberof RosettaOptions
     */
    suggested_fee_multiplier?: number;
    /**
     * Maximum fee user is willing to pay
     * @type {string}
     * @memberof RosettaOptions
     */
    max_fee?: string;
    /**
     * Fee for this transaction
     * @type {string}
     * @memberof RosettaOptions
     */
    fee?: string;
    /**
     * Transaction approximative size (used to calculate total fee).
     * @type {number}
     * @memberof RosettaOptions
     */
    size?: number;
    /**
     * STX token transfer memo.
     * @type {string}
     * @memberof RosettaOptions
     */
    memo?: string;
    /**
     * Number of cycles when stacking.
     * @type {number}
     * @memberof RosettaOptions
     */
    number_of_cycles?: number;
    /**
     * Address of the contract to call.
     * @type {string}
     * @memberof RosettaOptions
     */
    contract_address?: string;
    /**
     * Name of the contract to call.
     * @type {string}
     * @memberof RosettaOptions
     */
    contract_name?: string;
    /**
     * Set the burnchain (BTC) block for stacking lock to start.
     * @type {number}
     * @memberof RosettaOptions
     */
    burn_block_height?: number;
    /**
     * Delegator address for when calling `delegate-stacking`.
     * @type {string}
     * @memberof RosettaOptions
     */
    delegate_to?: string;
    /**
     * The reward address for stacking transaction. It should be a valid Bitcoin address
     * @type {string}
     * @memberof RosettaOptions
     */
    pox_addr?: string;
}
export declare function RosettaOptionsFromJSON(json: any): RosettaOptions;
export declare function RosettaOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaOptions;
export declare function RosettaOptionsToJSON(value?: RosettaOptions | null): any;
