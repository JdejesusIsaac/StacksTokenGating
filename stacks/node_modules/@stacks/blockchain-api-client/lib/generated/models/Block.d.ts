/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a>
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * A block
 * @export
 * @interface Block
 */
export interface Block {
    /**
     * Set to `true` if block corresponds to the canonical chain tip
     * @type {boolean}
     * @memberof Block
     */
    canonical: boolean;
    /**
     * Height of the block
     * @type {number}
     * @memberof Block
     */
    height: number;
    /**
     * Hash representing the block
     * @type {string}
     * @memberof Block
     */
    hash: string;
    /**
     * The only hash that can uniquely identify an anchored block or an unconfirmed state trie
     * @type {string}
     * @memberof Block
     */
    index_block_hash: string;
    /**
     * Hash of the parent block
     * @type {string}
     * @memberof Block
     */
    parent_block_hash: string;
    /**
     * Unix timestamp (in seconds) indicating when this block was mined.
     * @type {number}
     * @memberof Block
     */
    burn_block_time: number;
    /**
     * An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) indicating when this block was mined.
     * @type {string}
     * @memberof Block
     */
    burn_block_time_iso: string;
    /**
     * Hash of the anchor chain block
     * @type {string}
     * @memberof Block
     */
    burn_block_hash: string;
    /**
     * Height of the anchor chain block
     * @type {number}
     * @memberof Block
     */
    burn_block_height: number;
    /**
     * Anchor chain transaction ID
     * @type {string}
     * @memberof Block
     */
    miner_txid: string;
    /**
     * The hash of the last streamed block that precedes this block to which this block is to be appended. Not every anchored block will have a parent microblock stream. An anchored block that does not have a parent microblock stream has the parent microblock hash set to an empty string, and the parent microblock sequence number set to -1.
     * @type {string}
     * @memberof Block
     */
    parent_microblock_hash: string;
    /**
     * The hash of the last streamed block that precedes this block to which this block is to be appended. Not every anchored block will have a parent microblock stream. An anchored block that does not have a parent microblock stream has the parent microblock hash set to an empty string, and the parent microblock sequence number set to -1.
     * @type {number}
     * @memberof Block
     */
    parent_microblock_sequence: number;
    /**
     * List of transactions included in the block
     * @type {Array<string>}
     * @memberof Block
     */
    txs: Array<string>;
    /**
     * List of microblocks that were accepted in this anchor block. Not every anchored block will have a accepted all (or any) of the previously streamed microblocks. Microblocks that were orphaned are not included in this list.
     * @type {Array<string>}
     * @memberof Block
     */
    microblocks_accepted: Array<string>;
    /**
     * List of microblocks that were streamed/produced by this anchor block's miner. This list only includes microblocks that were accepted in the following anchor block. Microblocks that were orphaned are not included in this list.
     * @type {Array<string>}
     * @memberof Block
     */
    microblocks_streamed: Array<string>;
    /**
     * Execution cost read count.
     * @type {number}
     * @memberof Block
     */
    execution_cost_read_count: number;
    /**
     * Execution cost read length.
     * @type {number}
     * @memberof Block
     */
    execution_cost_read_length: number;
    /**
     * Execution cost runtime.
     * @type {number}
     * @memberof Block
     */
    execution_cost_runtime: number;
    /**
     * Execution cost write count.
     * @type {number}
     * @memberof Block
     */
    execution_cost_write_count: number;
    /**
     * Execution cost write length.
     * @type {number}
     * @memberof Block
     */
    execution_cost_write_length: number;
    /**
     * List of txs counts in each accepted microblock
     * @type {{ [key: string]: number; }}
     * @memberof Block
     */
    microblock_tx_count: {
        [key: string]: number;
    };
}
export declare function BlockFromJSON(json: any): Block;
export declare function BlockFromJSONTyped(json: any, ignoreDiscriminator: boolean): Block;
export declare function BlockToJSON(value?: Block | null): any;
