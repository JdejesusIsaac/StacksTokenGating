"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a>
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NonFungibleTokenMetadataToJSON = exports.NonFungibleTokenMetadataFromJSONTyped = exports.NonFungibleTokenMetadataFromJSON = void 0;
function NonFungibleTokenMetadataFromJSON(json) {
    return NonFungibleTokenMetadataFromJSONTyped(json, false);
}
exports.NonFungibleTokenMetadataFromJSON = NonFungibleTokenMetadataFromJSON;
function NonFungibleTokenMetadataFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'token_uri': json['token_uri'],
        'name': json['name'],
        'description': json['description'],
        'image_uri': json['image_uri'],
        'image_canonical_uri': json['image_canonical_uri'],
        'tx_id': json['tx_id'],
        'sender_address': json['sender_address'],
    };
}
exports.NonFungibleTokenMetadataFromJSONTyped = NonFungibleTokenMetadataFromJSONTyped;
function NonFungibleTokenMetadataToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'token_uri': value.token_uri,
        'name': value.name,
        'description': value.description,
        'image_uri': value.image_uri,
        'image_canonical_uri': value.image_canonical_uri,
        'tx_id': value.tx_id,
        'sender_address': value.sender_address,
    };
}
exports.NonFungibleTokenMetadataToJSON = NonFungibleTokenMetadataToJSON;
//# sourceMappingURL=NonFungibleTokenMetadata.js.map