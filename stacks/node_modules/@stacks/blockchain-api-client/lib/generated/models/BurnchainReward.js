"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a>
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BurnchainRewardToJSON = exports.BurnchainRewardFromJSONTyped = exports.BurnchainRewardFromJSON = void 0;
function BurnchainRewardFromJSON(json) {
    return BurnchainRewardFromJSONTyped(json, false);
}
exports.BurnchainRewardFromJSON = BurnchainRewardFromJSON;
function BurnchainRewardFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'canonical': json['canonical'],
        'burn_block_hash': json['burn_block_hash'],
        'burn_block_height': json['burn_block_height'],
        'burn_amount': json['burn_amount'],
        'reward_recipient': json['reward_recipient'],
        'reward_amount': json['reward_amount'],
        'reward_index': json['reward_index'],
    };
}
exports.BurnchainRewardFromJSONTyped = BurnchainRewardFromJSONTyped;
function BurnchainRewardToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'canonical': value.canonical,
        'burn_block_hash': value.burn_block_hash,
        'burn_block_height': value.burn_block_height,
        'burn_amount': value.burn_amount,
        'reward_recipient': value.reward_recipient,
        'reward_amount': value.reward_amount,
        'reward_index': value.reward_index,
    };
}
exports.BurnchainRewardToJSON = BurnchainRewardToJSON;
//# sourceMappingURL=BurnchainReward.js.map